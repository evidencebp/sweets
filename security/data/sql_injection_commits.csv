repo_name,commit,author_name,commit_timestamp,message,is_corrective,is_adaptive,is_perfective,is_refactor,is_cursing,is_positive_sentiment,is_negative_sentiment,is_performance,files,non_test_files,code_files,code_non_test_files,duration
NemesisVex/Duran-Duran-Networks-Wordpress,1aebecad96bf2e924f3d1970bbead03ee01eecd6,mikelittle,2003-06-04 00:14:49 UTC,"Fix remote SQL injection exploit.
""b2 0.6.2 and prior"" allow sql injection in ./blog.header.php. $posts isn�t
convert to integer, so we can inject a sql in this variable. In MySQL 4.x
UNION and subselects can be used to obtain privileges.


git-svn-id: 33a53d2031ff1536f7722bcba09bc6642b9c080a@153 1a063a9b-81f0-0310-95a4-ce76da25c4cd
",true,true,true,true,false,false,false,false,1,1,1,1,59
observantrecords/Observant-Records-WordPress,1aebecad96bf2e924f3d1970bbead03ee01eecd6,mikelittle,2003-06-04 00:14:49 UTC,"Fix remote SQL injection exploit.
""b2 0.6.2 and prior"" allow sql injection in ./blog.header.php. $posts isn�t
convert to integer, so we can inject a sql in this variable. In MySQL 4.x
UNION and subselects can be used to obtain privileges.


git-svn-id: 33a53d2031ff1536f7722bcba09bc6642b9c080a@153 1a063a9b-81f0-0310-95a4-ce76da25c4cd
",true,true,true,true,false,false,false,false,1,1,1,1,59
proftpd/proftpd,739ef08cc2ddf42d0db55fd85b96c94e239cc02c,castaglia,2003-06-28 17:14:11 UTC,"
Add comments about provide proper escapestring implementations.  Failure
to do so allows SQL injection.
",true,false,true,false,false,false,false,false,2,2,2,2,2040
Cacti/cacti,81f671d8d0bd5543af53e3169159ea1b28cc1027,Tony Roman,2005-06-26 00:17:16 UTC,"SECURITY: Hardened PHP Project Advisory #022005 - Cacti Multiple SQL Injection Vulnerabilities
SECURITY: Hardened PHP Project Advisory #032005 - Cacti Remote Command Execution Vulnerability


git-svn-id: ca965106e005d27ba268c1682fde4cd955e45a56@3001 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,11,11,11,11,0
rails-sqlserver/activerecord-sqlserver-adapter,807786dc594a976376a5490e84c06f10820f2f86,Jonathan Lim,2008-06-17 16:37:34 UTC,"Adding tests and code to ensure that adapter is not vulnerable to limit and offset SQL injection.
",false,true,false,false,false,false,false,false,4,1,4,1,350
rails-sqlserver/activerecord-sqlserver-adapter,892857ffcf87a2b2f828912029c418a034fde64a,Jonathan Lim,2008-06-17 16:37:34 UTC,"Adding tests and code to ensure that adapter is not vulnerable to limit and offset SQL injection.
",false,true,false,false,false,false,false,false,4,1,4,1,350
nikrou/phyxo,1618e85cf952daf43f2b16ec3f89f4a9b1e855c7,plg,2010-01-25 15:19:17 UTC,"merge r4742 from branch 2.0 to trunk

bug 1391 fixed: prevent from SQL injection


git-svn-id: 07d450c9015c98804e48b520a2aeaa7bff74be0c@4743 68402e56-0260-453c-a942-63ccdbb3a9ee
",true,true,false,false,false,false,false,false,1,1,1,1,2422
abrt/abrt,d36042c8e3722cc34c95bee69bade25c55a234ee,Denys Vlasenko,2010-01-11 06:17:11 UTC,"SQLite3: check for SQL injection

Signed-off-by: Denys Vlasenko <42afb3a19136e88700e8b77002ea6a5a94c16782@googlemail.com>
",false,false,false,false,false,false,false,false,1,1,1,1,791
wso2/carbon-apimgt,8a1495ff2fd38343480fec211b63b0f8ae3bb4d9,Shani Ranasinghe,2016-01-25 13:21:20 UTC,"Merge pull request #1562 from shaniR/master

Security fixes for SQL injection",true,true,false,false,false,false,false,false,1,1,1,1,13
rubygems/rubygems.org,c6a31eb9d30c24bc998c8adf093603d90646b3eb,Aditya Prakash,2018-12-25 07:53:03 UTC,"Fix brakeman warnings and enable build failure for it

Reports fixed here are really false positive.
1. Render path contains parameter value near
app/views/reverse_dependencies/index.html.erb:11
render(action => Rubygem.find_by_name((params[:rubygem_id] or
params[:id])).reverse_dependencies.by_downloads.preload(:gem_download,
:latest_version).page(params[:page].to_i).without_count, {})

Check: https://github.com/presidentbeef/brakeman/pull/529

2. Possible SQL injection near app/models/concerns/rubygem_searchable.rb:122
 where("" versions.indexed and\n
(UPPER(name) LIKE UPPER(:query) OR\n UPPER(TRANSLATE(name,\n
'#{"".-_""}',\n '#{("" "" * "".-_"".length)}')\n ) LIKE UPPER(:query))\n"",
:query => (""%#{query.strip}%""))

brakeman was warning about ruby code in sql: ("" "" * "".-_"".length)

Removed script because we don't need to check and compare previous
reports (there are no warning/reports as of this commit). using
--compare was making brakeman always exit with 0 (we need !0 for build
failure on warnings).

json report before this commit:
https://gist.github.com/sonalkr132/7e8280104e8b3bb0b3f6c6c9186781ca
",true,false,false,false,false,false,false,false,6,6,1,1,119
spotbugs/spotbugs,1ee1353ae8f28ccb9b88251bddcbc5a3204c82b3,Bill Pugh,2007-02-02 01:29:13 UTC,"some tweaks to SQL injection detector:
  Smarter about open and close quotes
  treat load from static array as untainted

git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@7460 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,false,false,false,false,true,false,false,1,1,1,1,4
spotbugs/spotbugs,d5c0ad8c20601e9f9ba2fb5b52fb387d3eca4e33,Bill Pugh,2007-02-03 21:12:14 UTC,"more tweaks to sql injection detector

git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@7473 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,false,false,false,false,false,false,false,1,1,1,1,6
spotbugs/spotbugs,3019eb0d6eabd4a00b01eca2e87a4db31bcea96b,Bill Pugh,2007-02-02 17:54:47 UTC,"Be more systematic about quotes in SQL injection detector

git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@7470 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,false,false,false,false,false,false,false,2,1,2,1,60
ChurchCRM/CRM,59bfc749d4bf95fd56831e1acfcabae8e95cf04f,timdearborn,2005-07-30 01:45:25 UTC,"Modified FilterInput function to escape special charaterics, protecting against SQL injection.
",false,false,false,false,false,false,false,false,1,1,1,1,7313
interchange/interchange,5bd0563212f4df2988e2a3825c2c8cca11c7e0d6,Mike Heins,2003-12-15 22:25:07 UTC,"* Fix possible code/SQL injection vector.
",true,false,false,false,false,false,false,false,1,1,1,1,5334
zulip/zulip,b501d04f6ab396ddb72cb92dc556095a36db8e12,Anders Kaseorg,2020-05-03 23:56:44 UTC,"semgrep: Lint against common SQL injection patterns.

Signed-off-by: Anders Kaseorg <dfdb7392591db597bc41cf266a9c3bc12a2706e5@zulip.com>
",false,false,false,false,false,false,false,false,1,1,0,0,0
HippieStation/HippieStation,fd268e7b18746eb181ad96a63bdddfac39014489,only.lurking@gmail.com,2012-01-29 20:56:05 UTC,"More SQL injection patches. Added a standardized method of SQL sanitization [sanitizeSQL()].
Corrected a href list vulnerability that let players spawn Arcane Tomes from non-e-magged library computers.
Tweaked and disabled forum_activation.dm. Way too many SQL vulnerabilities to justify keeping it around.


git-svn-id: af9c09e5e5bfa333f52f6fefeba857070ad34abf@3012 316c924e-a436-60f5-8080-3fe189b3f50e
",true,false,false,false,false,false,false,false,4,4,0,0,2928
HippieStation/HippieStation,c318a553ffa876bc42369bff72b6242d6486c218,only.lurking@gmail.com,2012-01-27 20:07:59 UTC,"Small SQL injection patch.

git-svn-id: af9c09e5e5bfa333f52f6fefeba857070ad34abf@2992 316c924e-a436-60f5-8080-3fe189b3f50e
",false,false,false,false,false,false,false,false,1,1,0,0,202749
eventum/eventum,417417862affc9e45f5a694e8f71f8c7a5ce6009,Bryan Alsdorf,2005-03-30 20:17:46 UTC,"Added more thorough input checking to prevent possible SQL Injection attacks

(Logical change 1.632)
",false,true,false,false,false,false,false,false,1,1,0,0,1399
DIRACGrid/DIRAC,8ec4c522e7973dc877233a75e68a81ed0f156aa3,Adria Casajus,2009-05-04 14:05:43 UTC,"Escaped all inputs to prevent SQL injection


git-svn-id: 573dd80a48c054542188d67043f0676471349dfe@15443 4525493e-7705-40b1-a816-d608a930855b
",true,false,false,false,false,false,false,false,1,1,1,1,7033
zaproxy/zaproxy,ff057e32d7265c4318c10041eb23f344890e0c19,thc202,2015-10-28 13:58:54 UTC,"Tidy up of scanners IDs (add, restore, fix duplicates and deprecate)

Add:
 - 41, Source Code Disclosure - Git
 - 42, Source Code Disclosure - SVN
 - 43, Source Code Disclosure - File Inclusion
 - 10094, Base64 Disclosure
 - 10095, Backup File Disclosure
 - 10096, Timestamp Disclosure
 - 10097, Hash Disclosure
 - 10098, Cross-Domain Misconfiguration
 - 10099, Source Code Disclosure
 - 20012, Anti CSRF Tokens Scanner
 - 90001, Insecure JSF ViewState
 - 90011, Charset Mismatch
 - 90033, Loosely Scoped Cookie

Restore:
 - 10049, Cacheability and Retrievability Content
 - 10050, Retrieved from Cache
 - 10051, Relative Path Confusion
 - 40025, Proxy Disclosure
The IDs were ""lost"" in another branch (the changes were not applied nor
merged to the main branch), @5520bcaff2c532bfad894fa1ca764f18b37867b1.

Fix duplicates (some caused by the lost IDs):
 - 10049 -> 10103, Image Location Scanner
 - 10050 -> 10104, TestUserAgent
 - 40017 -> 10105, Weak Authentication Method
 - 40025 -> 40026, Cross site scripting (DOM)

Deprecate (scanners no longer exist):
 - 10001, Secure page browser cache
 - 10013, Weak HTTP authentication over an unsecured connection
 - 10014, Cross Site Request Forgery
 - 10022, Information disclosure - database error messages
 - 40000, Cross site scripting
 - 40001, Cross site scripting in SCRIPT section
 - 40002, Cross site scripting without brackets
 - 40004, SQL Injection Fingerprinting
 - 40005, SQL Injection
 - 40006, MS SQL Injection Enumeration
 - 40007, Oracle SQL Injection Enumeration
 - 40010, Cross site scripting in TAG
 - 40011, Cross Site Scripting in TAG Attribute

Change name of 40012 to ""Cross Site Scripting (Reflected)"", the previous
name ""CSRF Token missing"" was from a scanner with same ID (which no
longer exist).
",true,true,true,true,false,false,true,false,1,1,0,0,7305
getredash/redash,54894c3a26f68d37759c560e6d4b8865dccfb63f,Omer Lachish,2018-12-03 11:12:34 UTC,"track sql injections using an event to detect false positives
",false,false,false,false,false,false,false,false,1,1,1,1,188
greenriver/boston-cas,49f800034547fd50f7c21dd8df34e617e5b5f6af,Sandy Wise,2018-12-13 21:11:33 UTC,"Create sort order via arel to avoid risk of SQL injection
",false,true,false,false,false,false,false,false,1,1,1,1,1459
getredash/redash,9579f12a83becf778a692acf185fc34ebb3efe1c,Omer Lachish,2018-12-02 19:51:06 UTC,"Protect against SQL injections by using tree comparisons (#3109)

* add SQLQuery class with tests for safe queries and non-safe tautology attacks

* add test for union query injections

* split .apply calls to newline

* add tests for comment attacks

* remove double underscore

* extract complex children check to variable

* inherit from object because I'm not a lamer

Co-Authored-By: rauchy <6a2b3fa376eaaefa628ba0e36b601bb1adab5658@rauchy.net>

* simplify cognitive complexity

* check that additional columns are not injected

* detect appended queries

* inline .apply calls

* move SQLQuery to it's own module

* move SQLQuery tests to their own module

* serialize SQLQuery instances

* raise an exception when attempting to serialize an unsafe query

* queries without parameters are safe

* remove redundant parentheses

* use cached properties

* rename SQLInjectionException to SQLInjectionError

* support multiple word params and param negations

* refactor out methods that don't involve any state

* don't cache text()

* reduce cognitive complexity
",false,true,true,true,false,false,false,false,3,1,3,1,4710
frappe/erpnext,0209ef0fc5b7ee0ca6493be1fa9e11179dc8f6f6,Himanshu,2018-12-25 12:12:31 UTC,"Quality Management System (#15893)

* Added QMS to ERPNext

* changes

* fixed

* code refracted

* refracted

* some bugs fixed

* changes

* changes

* test case

* bug fix unit test

* bug fix

* refracted code

* test warning fix

* test case bug fix

* removed whitespace

* indentation bug fix

* unit test bug fix

* fixed Tree

* bug fix

* bug fix

* code refactor

* fixed procedure tree

* removed unnecessary fields

* hide fields

* removed depricated unit test method

* sql injection bug fix

* code refactor and added mandatory fields

* Removed Add Child from TreeView

* Unit Test crashes Fix

* code refactor

* Fixed Status of Action

* removed add button from Chart of Procedure

* Fixed Unit Test for Quality Action

* Chamged Measurement Unit to UOM

* Changed Measurement Unit to UOM

* Quality Action Unit Test Fix

* Renamed Chart of Procedures to Tree of Procedures

* Changes Objective input type to Text

* Code Refactor

* Quality Action Status option changed to ""Close"" for consistency

* fixed action status indicator

* Removed vscode folder

* unit tests optimization

* unit test fixes

* code refactor

* gitignore

* bug fixes and code refactor

* code refactor

* unit test changes

* changed quality action unit test

* code refactor

* code refactor

* code refactor

* indentation

* code refactor

* corrected typo

* Removed jQuery hide()

* code refracted

* remove grid elements

* Removed unnecessary conditions

* onload fixed in feedback

* code refracted

* Removed add row button from Review and Customer Feedback

* made autofill feild read only

* automated scheduling of review
",true,false,true,true,false,false,false,true,81,67,65,51,
ElunaLuaEngine/ElunaTrinityWotlk,f8cb2f528ba2bc4d4006c529be41430d46031282,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
AshamaneProject/AshamaneCore,2ce58937fe03ec919876267576a7862065c42c8d,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
ElunaLuaEngine/ElunaTrinityWotlk,599a24df249ab43cb08864a6ffa19b1b769aab54,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
AshamaneProject/AshamaneCore,f8cb2f528ba2bc4d4006c529be41430d46031282,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
AshamaneProject/AshamaneCore,847c4eb2dbd86403e797098df5fa70794ccfba58,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
AshamaneProject/AshamaneCore,599a24df249ab43cb08864a6ffa19b1b769aab54,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
spotbugs/spotbugs,20b96ac8ffddbbe7262c99516f35bac794b19b3f,Bill Pugh,2005-03-22 21:02:17 UTC,"Bill has been a busy boy.

Fixed typos in messages.

Made DLS a style warning.

Fixed some problems with how DLS was being computed.

Added a check for an integer value being cast to a double and then passed
to Math.ceil.

Added toString methods for WarningPropertySets

Rewrote and simplified code to check for result of
integer division being cast to double

Expanded check for SQL injection. This now could catch to much, and we need to
add some data flow analysis to make it smarter.


git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@3782 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",true,false,true,false,false,true,false,false,11,11,7,7,7200
spotbugs/spotbugs,afcd4af37611477e82024e21a56104bbaa1df26e,Bill Pugh,2005-03-25 22:13:07 UTC,"More tweaks for DLS
Working on a new SQL injection detector (currently disabled)


git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@3837 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,false,false,false,false,false,false,false,6,6,4,4,1864
pgjdbc/pgjdbc,ad2546260b21f17f5ad096010f1a80790108f3cd,Barry Lind,2003-07-24 00:30:39 UTC,"Fixes additional sql injection vulnerabilities reported by Oliver Jowett
and Dmitry Tkach.  Specifically the previous fix still allowed the statement termination character through in unquoted places in the sql statement, and the driver never correctly handled someone passing a value of \0 in a string which under the v2 protocol would end the statement causing the following text to possibly
be treated as a new sql statement
 Modified Files:
 	jdbc/org/postgresql/Driver.java.in
 	jdbc/org/postgresql/jdbc1/AbstractJdbc1Statement.java
",true,false,false,false,false,false,false,false,2,2,1,1,2593
pgjdbc/pgjdbc,b207170370fa3982370504363495dc40d121508a,Barry Lind,2003-07-22 05:17:09 UTC,"Fix to prevent SQL injection attacks for code calling setObject(int,Object,int)
where Object is a user supplied String and the type is a numeric type
(i.e. INTEGER,LONG,etc).
Also applied a patch from Kim Ho that fixes compile problems under jdk1.2

 Modified Files:
 	jdbc/org/postgresql/Driver.java.in
 	jdbc/org/postgresql/jdbc1/AbstractJdbc1Statement.java
",true,false,false,false,false,false,false,false,2,2,1,1,508
BeWelcome/rox,2da1ec21511a02e1986acfd8d3ce03ad629546f6,guaka,2008-03-29 22:26:49 UTC,"adding percentage to translation overview, fixing one sql injection (many more needed), some nitpicking

git-svn-id: d788be251142534739cf50532120033c135e1faf@4432 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",false,false,false,false,false,false,false,false,1,1,1,1,52
EUDAT-B2SHARE/b2share,c5114ac6d3e67a0772026b6d3204ce1d434b97b0,Marko Niinimaki,2008-03-28 10:58:17 UTC,"improved SQL clauses to prevent SQL injection
",true,false,true,true,false,false,false,false,1,1,1,1,59
bywatersolutions/ByWater-KOHA,79c37dc8ed3efd1886d6c5619b2d1eb004a19713,Joe Atzberger,2008-03-07 07:09:42 UTC,"basket.pl and template - Many fixes including SQL injection security check,

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,false,false,false,false,false,false,2,2,1,1,19448
bywatersolutions/bws-package,79c37dc8ed3efd1886d6c5619b2d1eb004a19713,Joe Atzberger,2008-03-07 07:09:42 UTC,"basket.pl and template - Many fixes including SQL injection security check,

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,false,false,false,false,false,false,2,2,1,1,19448
Koha-Community/Koha,79c37dc8ed3efd1886d6c5619b2d1eb004a19713,Joe Atzberger,2008-03-07 07:09:42 UTC,"basket.pl and template - Many fixes including SQL injection security check,

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,false,false,false,false,false,false,2,2,1,1,19448
LMSCloud/Koha-LMSCloud,79c37dc8ed3efd1886d6c5619b2d1eb004a19713,Joe Atzberger,2008-03-07 07:09:42 UTC,"basket.pl and template - Many fixes including SQL injection security check,

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,false,false,false,false,false,false,2,2,1,1,19448
Ashoat/squadcal,a15109f5f92d491582bc500a01bee5cb7bfc70e4,ashoat,2018-01-15 20:37:50 UTC,"Make log-in case insensitive

... and also fix a SQL injection vulnerability I somehow missed. Ouch.
",true,false,false,false,false,false,false,false,2,2,2,2,77
BeWelcome/rox,3289ea3f94f48b7216aa1e12cfe8793982aa0a08,jaliste,2008-01-25 11:20:04 UTC,"Adding escaping to some queries to avoid possibles Sql Injections and taking care of #322. 


git-svn-id: d788be251142534739cf50532120033c135e1faf@3808 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",false,true,false,false,false,false,false,false,1,1,1,1,616
apache/commons-configuration,b3f082cdd7587dac8b5f75beea1e48fd42e38f84,Henri Yandell,2008-01-20 04:39:08 UTC,"Applying Hasan Diwan's patch to add a note that DatabaseConfiguration does not protect from SQL Injection - CONFIGURATION-304

git-svn-id: 0d31da9e303333003508381311333cf78a25d41b@613503 13f79535-47bb-0310-9956-ffa450edef68
",false,false,true,false,false,false,false,false,1,1,1,1,215461
vladmihalcea/high-performance-java-persistence,26796aca85ca945846ec79ffbd04c18c19a70b88,Vlad Mihalcea,2016-11-08 10:32:31 UTC,"Add more SQL injection examples
",false,false,true,false,false,false,false,false,1,0,1,0,2597
vladmihalcea/high-performance-java-persistence,031e2689b8d985a4da1b9d843383b51210f5bb54,Vlad Mihalcea,2016-11-06 15:15:20 UTC,"Add SQL Injection test
",false,true,false,false,false,false,false,false,2,0,2,0,4510
spotbugs/spotbugs,1f93fb9a34d7d5fa0ca31d3708297cd58a3024eb,Bill Pugh,2006-01-21 02:43:13 UTC,"tweak warnings for SQL injection


git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@5275 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,false,false,false,false,false,false,false,1,1,1,1,0
ChurchCRM/CRM,554bb674ddc92368e9d7d0c206cf90d169a3b5c8,mikewiltwork,2012-04-16 20:42:02 UTC,"Force deposit slip id to be an integer to defeat sql injection
",false,false,false,false,false,false,false,false,1,1,1,1,26403
GNOME/grilo-plugins,2414933730ca17ffe08be68a5faec8ccec9b4630,Bastien Nocera,2012-04-12 14:58:19 UTC,"metadata-store: Fix GET SQL injection

https://bugzilla.gnome.org/show_bug.cgi?id=673912
",true,false,false,false,false,false,false,false,1,1,1,1,5
wp-statistics/wp-statistics,a8fa05199a3b3ec4025f7d0c5b61724fd83233a8,Greg Ross,2015-07-09 14:09:11 UTC,"- Fixed: SQL injection issue.
",true,false,false,false,false,false,false,false,1,1,1,1,62
spotbugs/spotbugs,e441a248008c4cc1d4a77487387174f54403e49d,Bill Pugh,2005-12-13 16:18:00 UTC,"Enable SQL injection detection


git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@5151 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,true,false,false,false,false,false,false,1,1,0,0,0
akrherz/iem,925e36fdb494d4e9e1bd4273313c803c42e45104,akrherz,2011-05-17 14:48:48 UTC,"no sql injection please and make sname sortable
",false,false,false,false,false,false,false,false,1,1,0,0,960
rails/rails,2575b3b065258162484ebbd2c809d5aa4ced56c7,David Heinemeier Hansson,2004-12-06 18:08:35 UTC,"Added extra words of caution for guarding against SQL-injection attacks

git-svn-id: afc9fed30c1a09d8801d1e4fbe6e01c29c67d11f@46 5ecf4fe2-1ee6-0310-87b1-e25e094e27de
",false,true,false,false,false,false,false,false,1,1,1,1,7317
FH-Complete/FHC-Core,f670f45d2f505b02dedc51bc61214354db9897b3,Andreas Österreicher,2014-12-01 10:07:21 UTC,"Diverse SQL-Injection Lücken geschlossen
",false,false,false,false,false,false,false,false,87,79,84,77,14491
akrherz/iem,c99c5cd8756424cc3418c890d5a68f5b0f00eea8,akrherz,2009-01-08 14:51:53 UTC,"adjust to only do SBW and not do sql injection :(

",false,false,false,false,false,false,false,false,1,1,1,1,593
backdrop-ops/backdrop-pantheon,7e2a90629d1e3f1ac444a13e63dd06801e089209,Dries Buytaert,2009-01-21 14:50:58 UTC,"- Patch #278675 by Dave Reid, pwolanin, drewish, robertDouglass: fixed possible SQL injection risk in node_access().  Already part of Drupal 6.
",true,false,false,false,false,false,false,false,1,1,1,1,3
AshamaneProject/AshamaneCore,3e63b6ca7cd93ca44a319ed47f1c0d6120a683eb,Blaymoira,2009-01-04 18:34:15 UTC,"* Fix reload tickets from database
* Fix crash /exploit issue with improper pasing when '%' is in ticket message
* Remove obsolete recv_data from tickets
* Allow closing of a ticket inserting the guid of the GM or player that closed it into the database.
* Allow assigning tickets to offline GMs.
* Tighten up SQL escape strings, increased security against SQL injections
* Fix issue where multiple tickets could have the same entry
* --- by Machiavelli ---

--HG--
branch : trunk
",true,false,true,true,false,false,false,false,6,6,4,4,37
ElunaLuaEngine/ElunaTrinityWotlk,0389ed45281b65c39b034bf4cc899dbdaf5d04ce,Blaymoira,2009-01-04 18:34:15 UTC,"* Fix reload tickets from database
* Fix crash /exploit issue with improper pasing when '%' is in ticket message
* Remove obsolete recv_data from tickets
* Allow closing of a ticket inserting the guid of the GM or player that closed it into the database.
* Allow assigning tickets to offline GMs.
* Tighten up SQL escape strings, increased security against SQL injections
* Fix issue where multiple tickets could have the same entry
* --- by Machiavelli ---

--HG--
branch : trunk
",true,false,true,true,false,false,false,false,6,6,4,4,37
TrinityCore/TrinityCore,0389ed45281b65c39b034bf4cc899dbdaf5d04ce,Blaymoira,2009-01-04 18:34:15 UTC,"* Fix reload tickets from database
* Fix crash /exploit issue with improper pasing when '%' is in ticket message
* Remove obsolete recv_data from tickets
* Allow closing of a ticket inserting the guid of the GM or player that closed it into the database.
* Allow assigning tickets to offline GMs.
* Tighten up SQL escape strings, increased security against SQL injections
* Fix issue where multiple tickets could have the same entry
* --- by Machiavelli ---

--HG--
branch : trunk
",true,false,true,true,false,false,false,false,6,6,4,4,37
AshamaneProject/AshamaneCore,0389ed45281b65c39b034bf4cc899dbdaf5d04ce,Blaymoira,2009-01-04 18:34:15 UTC,"* Fix reload tickets from database
* Fix crash /exploit issue with improper pasing when '%' is in ticket message
* Remove obsolete recv_data from tickets
* Allow closing of a ticket inserting the guid of the GM or player that closed it into the database.
* Allow assigning tickets to offline GMs.
* Tighten up SQL escape strings, increased security against SQL injections
* Fix issue where multiple tickets could have the same entry
* --- by Machiavelli ---

--HG--
branch : trunk
",true,false,true,true,false,false,false,false,6,6,4,4,37
splitbrain/dokuwiki,42ee9defc8cd47d809d5627779f9d9c867032238,andi,2005-05-14 19:22:08 UTC,"variuous auth_mysql fixes

This patch adds mor flexibility and security to the mysql_auth backend.
You now can omit the getgroupid and addusergroup configs if you don't need
them. The default groupname is available in addusergroup and adduser now, too.
Last but not least calls to addslashes were added to avoid SQL injection.

darcs-hash:20050514192208-9977f-d970834ca68a896e725c4911639a311217dee792.gz
",true,false,false,false,false,false,false,false,1,1,1,1,108
moodle/moodle,06abe84fde8c30681bc99f770875c28f40800359,bobopinna,2005-05-16 15:05:53 UTC,"Fixed a SQL injection from $scoid
",true,false,false,false,false,false,false,false,1,1,1,1,20
iomad/iomad,06abe84fde8c30681bc99f770875c28f40800359,bobopinna,2005-05-16 15:05:53 UTC,"Fixed a SQL injection from $scoid
",true,false,false,false,false,false,false,false,1,1,1,1,20
projectestac/agora_moodle2,06abe84fde8c30681bc99f770875c28f40800359,bobopinna,2005-05-16 15:05:53 UTC,"Fixed a SQL injection from $scoid
",true,false,false,false,false,false,false,false,1,1,1,1,20
bywatersolutions/bws-package,b0f60221f41041665c4fecacce35654fc8d45a01,Chris Nighswonger,2011-02-24 14:57:11 UTC,"Security Bugfix: Bug 1953 Adding Placeholders to SQL To Avoid Potential Injection Attacks

This patch addresses both security issues mentioned in the summary of the report
submitted by Frère Sébastien Marie included below.

---------------------------
The problem is here: 'C4/AuthoritiesMarc.pm' in the function 'DelAuthority':
The argument $authid is included directly (not via statement) in the SQL.

For the exploit of this problem, you can use 'authorities/authorities-home.pl'
with authid on the URL and op=delete (something like
""authorities/authorities-home.pl?op=delete&authid=xxx"").

This should successfully call DelAuthority, without authentification...
(DelAuthority is call BEFORE get_template_and_user, so before authentification
[This should be an issue also...]).

Please note that the problem isn't only that anyone can delete an authority of
this choose, it is more general: with ""authid=1%20or%1=1"" (after inclusion sql
will be like: ""delete from auth_header where authid=1 or 1=1"") you delete all
authorities ; with ""authid=1;delete%20from%xxx"" it is ""delete from auth_header
where authid=1;delete from xxx"" and so delete what you want...

SQL-INJECTION is very permissive: you can redirect the output in a file (with
some MySQL function), so write thea file of you choose in the server, in order
to create a backdoor, and compromise the server.

Signed-off-by: Frère Sébastien Marie <75bb7a385b394e76819a2e62a420b280277b72cb@latrappe.fr>
Signed-off-by: Chris Cormack <d7aa3da1d5912a8b3f7b831e4f9f40b8b3d7e8b1@catalyst.net.nz>
",true,true,true,false,false,false,false,false,2,2,2,2,149460
bywatersolutions/ByWater-KOHA,b0f60221f41041665c4fecacce35654fc8d45a01,Chris Nighswonger,2011-02-24 14:57:11 UTC,"Security Bugfix: Bug 1953 Adding Placeholders to SQL To Avoid Potential Injection Attacks

This patch addresses both security issues mentioned in the summary of the report
submitted by Frère Sébastien Marie included below.

---------------------------
The problem is here: 'C4/AuthoritiesMarc.pm' in the function 'DelAuthority':
The argument $authid is included directly (not via statement) in the SQL.

For the exploit of this problem, you can use 'authorities/authorities-home.pl'
with authid on the URL and op=delete (something like
""authorities/authorities-home.pl?op=delete&authid=xxx"").

This should successfully call DelAuthority, without authentification...
(DelAuthority is call BEFORE get_template_and_user, so before authentification
[This should be an issue also...]).

Please note that the problem isn't only that anyone can delete an authority of
this choose, it is more general: with ""authid=1%20or%1=1"" (after inclusion sql
will be like: ""delete from auth_header where authid=1 or 1=1"") you delete all
authorities ; with ""authid=1;delete%20from%xxx"" it is ""delete from auth_header
where authid=1;delete from xxx"" and so delete what you want...

SQL-INJECTION is very permissive: you can redirect the output in a file (with
some MySQL function), so write thea file of you choose in the server, in order
to create a backdoor, and compromise the server.

Signed-off-by: Frère Sébastien Marie <75bb7a385b394e76819a2e62a420b280277b72cb@latrappe.fr>
Signed-off-by: Chris Cormack <d7aa3da1d5912a8b3f7b831e4f9f40b8b3d7e8b1@catalyst.net.nz>
",true,true,true,false,false,false,false,false,2,2,2,2,149460
Koha-Community/Koha,b0f60221f41041665c4fecacce35654fc8d45a01,Chris Nighswonger,2011-02-24 14:57:11 UTC,"Security Bugfix: Bug 1953 Adding Placeholders to SQL To Avoid Potential Injection Attacks

This patch addresses both security issues mentioned in the summary of the report
submitted by Frère Sébastien Marie included below.

---------------------------
The problem is here: 'C4/AuthoritiesMarc.pm' in the function 'DelAuthority':
The argument $authid is included directly (not via statement) in the SQL.

For the exploit of this problem, you can use 'authorities/authorities-home.pl'
with authid on the URL and op=delete (something like
""authorities/authorities-home.pl?op=delete&authid=xxx"").

This should successfully call DelAuthority, without authentification...
(DelAuthority is call BEFORE get_template_and_user, so before authentification
[This should be an issue also...]).

Please note that the problem isn't only that anyone can delete an authority of
this choose, it is more general: with ""authid=1%20or%1=1"" (after inclusion sql
will be like: ""delete from auth_header where authid=1 or 1=1"") you delete all
authorities ; with ""authid=1;delete%20from%xxx"" it is ""delete from auth_header
where authid=1;delete from xxx"" and so delete what you want...

SQL-INJECTION is very permissive: you can redirect the output in a file (with
some MySQL function), so write thea file of you choose in the server, in order
to create a backdoor, and compromise the server.

Signed-off-by: Frère Sébastien Marie <75bb7a385b394e76819a2e62a420b280277b72cb@latrappe.fr>
Signed-off-by: Chris Cormack <d7aa3da1d5912a8b3f7b831e4f9f40b8b3d7e8b1@catalyst.net.nz>
",true,true,true,false,false,false,false,false,2,2,2,2,149460
LMSCloud/Koha-LMSCloud,b0f60221f41041665c4fecacce35654fc8d45a01,Chris Nighswonger,2011-02-24 14:57:11 UTC,"Security Bugfix: Bug 1953 Adding Placeholders to SQL To Avoid Potential Injection Attacks

This patch addresses both security issues mentioned in the summary of the report
submitted by Frère Sébastien Marie included below.

---------------------------
The problem is here: 'C4/AuthoritiesMarc.pm' in the function 'DelAuthority':
The argument $authid is included directly (not via statement) in the SQL.

For the exploit of this problem, you can use 'authorities/authorities-home.pl'
with authid on the URL and op=delete (something like
""authorities/authorities-home.pl?op=delete&authid=xxx"").

This should successfully call DelAuthority, without authentification...
(DelAuthority is call BEFORE get_template_and_user, so before authentification
[This should be an issue also...]).

Please note that the problem isn't only that anyone can delete an authority of
this choose, it is more general: with ""authid=1%20or%1=1"" (after inclusion sql
will be like: ""delete from auth_header where authid=1 or 1=1"") you delete all
authorities ; with ""authid=1;delete%20from%xxx"" it is ""delete from auth_header
where authid=1;delete from xxx"" and so delete what you want...

SQL-INJECTION is very permissive: you can redirect the output in a file (with
some MySQL function), so write thea file of you choose in the server, in order
to create a backdoor, and compromise the server.

Signed-off-by: Frère Sébastien Marie <75bb7a385b394e76819a2e62a420b280277b72cb@latrappe.fr>
Signed-off-by: Chris Cormack <d7aa3da1d5912a8b3f7b831e4f9f40b8b3d7e8b1@catalyst.net.nz>
",true,true,true,false,false,false,false,false,2,2,2,2,149460
zaproxy/zap-extensions,64e05649c8155ac29ca01ba7c0c35be6b83f2167,Andrea Pompili,2016-03-21 10:47:06 UTC,Updated SQL Injection checks adding EXP error based and space preserved suffixes,true,true,false,false,false,false,false,false,2,2,0,0,161
FriendsOfPHP/security-advisories,023c95824fc9991d1c6d56aaf54cb3cb485386b1,Fabien Potencier,2014-06-25 10:30:36 UTC,"feature #22 Added ZF2014-04 advisory (paulofreitas)

This PR was merged into the master branch.

Discussion
----------

Added ZF2014-04 advisory

Vulnerability: Potential SQL injection in the ORDER implementation of Zend_Db_Select (ZF2014-04)
Vendor/product: zendframework/zendframework1
CVE: none
Affected versions: v1.12.0 up to v1.12.6
Fixed version: v1.12.7
References: http://framework.zend.com/security/advisory/ZF2014-04, https://github.com/zendframework/zf1/commit/da09186c60b9168520e994af4253fba9c19c2b3d

Commits
-------

c994342 Added ZF2014-04 advisory
",true,true,false,false,false,false,false,false,1,1,0,0,7153
Cacti/cacti,301dccf54e4326461df31fa35d3edf2039f1e628,Jimmy Conner,2014-06-28 05:43:01 UTC,"-bug#0002455: Incomplete and incorrect input parsing leads to remote code execution and SQL injection attack scenarios

git-svn-id: b7524c84c8c62e1926d1e3a66d999f5877137521@7454 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,3,3,2,2,17648
aspnetboilerplate/module-zero-core-template,3a6cf502c512f112abeadf77b98c51c3c080710d,personball,2018-12-06 11:08:36 UTC,"add SQL Injection warning for vue template
",false,true,false,false,false,false,false,false,1,1,1,1,
PopulateTools/gobierto-comparador-presupuestos,262036eff08655d426dbaef40cf4828f24275e75,Fernando Blat,2018-12-04 17:35:19 UTC,"Merge pull request #140 from PopulateTools/ruby-2-5-3

Capture SQL injection attack to ES",false,true,false,false,false,false,false,false,4,4,1,1,10
aspnetboilerplate/module-zero-core-template,8e8f628bba102963d82840cc49b79dee106833ab,personball,2018-12-07 03:53:14 UTC,"update vue template, fix user sql injection, add text for localization file zh-hans.xml
",true,true,false,false,false,false,false,false,8,8,3,3,966
pgjdbc/pgjdbc,3a14b6fd349c01bf7bbbceba31fd564db4098707,Kris Jurka,2006-02-03 21:10:15 UTC,"escapeQuotes() in DatabaseMetaData was not correctly handling
backslashes which would result in incorrect searches and has the
potential for a SQL injection attack.

Paolo Predonzani
",true,false,false,false,false,false,false,false,2,1,2,1,3018
eventum/eventum,e15bd8b9aeac42aaac2cf4cd5012d6427796ec16,Bryan Alsdorf,2005-04-04 07:01:00 UTC,"Properly escape values to prevent SQL Injection attacks.

(Logical change 1.633)
",true,false,false,false,false,false,false,false,1,1,0,0,6403
spotbugs/spotbugs,27a65549838d73835ac18d2341f0ec90537787a7,Bill Pugh,2007-01-08 15:47:12 UTC,"Hi,

I'm going to be using the FindSqlInjection check as one example in a class
on automated code analysis I'll be giving at RSA 2007 and BlackHat Europe
2007 (http://wiki.yak.net/712). (I gave the same class at BlackHat USA
last year.) The class focuses on finding exploitable security bugs, which
is why I chose the FindSqlInjection detector.

To make it easier to walk through in the class, I needed to refactor the
code a bit. I've attached a diff against current SVN, but in case it gets
stripped out by the list, here's a link:
http://www.clock.org/~matt/bugreport/sqlinjection-refactor.diff

Most of the changes were to decompose the analyzeMethod() function into
several smaller, easier to understand (for me) functions. Looking at other
detectors, I can see how some of these new methods could be reused (with
few/no modifications) by making Detector an abstract class and pulling
them up. I also fixed up indentation and made use of braces more
consistent, which should help people who work in vi like myself :)

I didn't see any unit tests for individual detectors, nor system tests to
enhance/run, so I tested on a few applications I work on, and the number
of Sql Injection bugs remained the same before and after I ran them. If
there are other tests I should/could run, please let me know as I may
contribute more diffs like this in the future if this goes well :)

matt@use.net

git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@7303 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",true,false,true,true,false,false,false,false,1,1,1,1,36
spotbugs/spotbugs,730cdda88baa6f33d84fee58b2d39a8c3dd98e0c,Bill Pugh,2007-01-24 19:02:10 UTC,"make sql injection detector a little smarter

git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@7405 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,false,false,false,false,true,false,false,1,1,1,1,39
zaproxy/zaproxy,9a773d744a6f4aa82f77e4b40c6a4253659ef283,LuigiCasciaro,2018-03-15 20:30:58 UTC,"Update ID 40033 for MongoDB (NoSQL Injection) (#4510)

Update ID for MongoDB",false,true,false,false,false,false,false,false,1,1,0,0,
yiisoft/yii2-framework,a550c2e534fa5805ac2601e7eab6d9f48ee1f582,Carsten Brandt,2018-03-20 12:45:22 UTC,"Merge branch '2.0.15-dev'

* 2.0.15-dev:
  prepare for next release
  release version 2.0.15
  remove ColumnSchema import from mysql Schema because it conflicts with existing class
  Added russian docs
  Fixed grammar
  improved filtering condition on yii\db\ActiveRecord
  Wording adjustments and doc enhancements [skip ci]
  Fixed possible SQL injection through `ActiveRecord::findOne()`
  Fixes #15878: Fixed migration with a comment containing an apostrophe

Conflicts:
	framework/UPGRADE.md
",true,false,true,false,false,false,false,false,7,7,5,5,3
yiisoft/yii2,52ffaa1b25f09f34add73085adb4fd6a0f4f7139,Carsten Brandt,2018-03-20 12:45:22 UTC,"Merge branch '2.0.15-dev'

* 2.0.15-dev:
  prepare for next release
  release version 2.0.15
  remove ColumnSchema import from mysql Schema because it conflicts with existing class
  Added russian docs
  Fixed grammar
  improved filtering condition on yii\db\ActiveRecord
  Wording adjustments and doc enhancements [skip ci]
  Fixed possible SQL injection through `ActiveRecord::findOne()`
  Fixes #15878: Fixed migration with a comment containing an apostrophe

Conflicts:
	framework/UPGRADE.md
",true,false,true,false,false,false,false,false,13,12,6,5,3
wikimedia/mediawiki-extensions-CentralNotice,7cb4d6c25700fc3dc296fd603720689725b6a7b5,Matt Walker,2013-05-08 20:09:15 UTC,"CentralNotice Campaign Log Pager Bugfix

Let's not have SQL injections just floating around shall we...

Change-Id: Ic52cf171a1e8a4405c52db5b232784dc2c8d4a23
bugfix: 48255
",true,false,false,false,false,false,false,false,1,1,1,1,1270
projectestac/agora_moodle2,e7dcb0fcccaa59ab8dcdbdf20d592d904586ca1d,skodak,2006-10-12 09:53:32 UTC,"moodleform->validation() receives slashed $data now to make it similar to data_submitted() and prevent potential SQL injections
",false,false,false,false,false,false,false,false,1,1,1,1,139
iomad/iomad,e7dcb0fcccaa59ab8dcdbdf20d592d904586ca1d,skodak,2006-10-12 09:53:32 UTC,"moodleform->validation() receives slashed $data now to make it similar to data_submitted() and prevent potential SQL injections
",false,false,false,false,false,false,false,false,1,1,1,1,139
moodle/moodle,e7dcb0fcccaa59ab8dcdbdf20d592d904586ca1d,skodak,2006-10-12 09:53:32 UTC,"moodleform->validation() receives slashed $data now to make it similar to data_submitted() and prevent potential SQL injections
",false,false,false,false,false,false,false,false,1,1,1,1,139
Cacti/cacti,42ef00fb17be09c90dfef9bf7f2120e78f71efd9,Reinhard Scheck,2011-11-14 23:35:17 UTC,"fix SQL injection on last reference to $username

git-svn-id: 1c0139d5a254bbfdc7488bad8ff35377293b87b3@6927 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,1,1,1,1,18
akrherz/iem,53af8664198a8738fa5e6d07e387e7559bbfb296,akrherz,2011-11-15 17:44:47 UTC,"remove sql injection and cleanup db call

",false,true,true,true,false,false,false,false,1,1,1,1,1212
EUDAT-B2SHARE/b2share,5badd7db6ef046e5fd4dc89e5627928bb70996e9,Carmen Alvarez Perez,2011-11-18 14:29:36 UTC,"WebStat: delete custom events when dropping site

* Delete ALL custom events records when dropping site.
* Also, in the custom query summary don't group others when
  we are in the CERN site (request from the library).
* Also, add wash_table_column_name in webstat.py to prevent
  SQL injection.
",false,true,false,false,false,false,false,false,3,3,3,3,34661
eventum/eventum,cada4b4ad7c4a6df6e18bb0985744972386ea1f2,João Prado Maia,2005-07-29 00:47:12 UTC,"Fixed possible SQL injection vulnerability on the Authentication class

(Logical change 1.817)
",true,false,false,false,false,false,false,false,2,2,1,1,367
eventum/eventum,e933d3c69dfd5de6e9b0406d86693597dae5da2d,João Prado Maia,2005-07-29 13:34:22 UTC,"Fixed possible SQL injection vulnerabilities on the Release and Report classes

(Logical change 1.820)
",true,true,false,false,false,false,false,false,3,3,2,2,764
MushroomObserver/mushroom-observer,da489a40976e8e1d117954015c2fa1fc72efaeed,Nathan Wilson,2007-10-25 03:37:32 UTC,"Fixed bug and potential SQL injection issue.
",true,false,false,false,false,false,false,false,1,1,1,1,7112
hughsie/PackageKit,6ddc030b301f131f9038d6ecee0bbace903b8127,Richard Hughes,2007-10-25 20:10:33 UTC,"make a comment about SQL injection - it's only from the backends but we need to be careful
",false,false,false,false,false,false,false,false,2,2,2,2,80
FH-Complete/FHC-Core,55e76d5e1c1eb543a364ae3c9cb584706114c2e7,Andreas Österreicher,2012-07-03 14:53:30 UTC,"SQL Injection Lücke geschlossen
",false,false,false,false,false,false,false,false,1,1,1,1,30
Koha-Community/Koha,934a8a1156f20807c1c132b451c452d39569d1fe,Jonathan Druart,2012-07-10 14:00:54 UTC,"Bug 7955: Followup : Check the syspref value (avoid sql injection)

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>

Works as expected. Fields with disallowed characters do not show up.
Added 'if $debug' to an pseudo-unconditional warn.

Signed-off-by: Paul Poulain <eedb72edbb44448b1f14f12416a76acfd5e52f95@biblibre.com>
",false,false,false,false,false,false,false,false,2,2,2,2,8578
LMSCloud/Koha-LMSCloud,934a8a1156f20807c1c132b451c452d39569d1fe,Jonathan Druart,2012-07-10 14:00:54 UTC,"Bug 7955: Followup : Check the syspref value (avoid sql injection)

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>

Works as expected. Fields with disallowed characters do not show up.
Added 'if $debug' to an pseudo-unconditional warn.

Signed-off-by: Paul Poulain <eedb72edbb44448b1f14f12416a76acfd5e52f95@biblibre.com>
",false,false,false,false,false,false,false,false,2,2,2,2,8578
BeWelcome/rox,3e29dcd221d0cafbac1a764dae2fe87ce55858f1,fake51,2009-06-28 15:39:51 UTC,"improving code layout + fixing sql injection vector

git-svn-id: dcab1f60f8875908b03f8631d73cf2044708dbe2@8472 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",true,false,true,true,false,false,false,false,1,1,1,1,36
BeWelcome/rox,64bf84a5985e01e46ce6a3af6b8223941cf19bee,fake51,2009-06-28 15:03:12 UTC,"fixing sql injection exploit

git-svn-id: d788be251142534739cf50532120033c135e1faf@8463 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",true,false,false,false,false,false,false,false,1,1,1,1,42
DesertBot/DesertBot,8e4c850ebaf56d80e2289f1c8b00ded5941e0861,Matthew Cox,2013-07-31 21:36:35 UTC,"ChatMap: prevent sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,1142
Cacti/cacti,f0c7e42ef696ac0afe8a7dd8f87ee59346d988a8,Tony Roman,2013-07-22 02:16:56 UTC,"Fix SQL injection issues

git-svn-id: b7524c84c8c62e1926d1e3a66d999f5877137521@7394 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,2,2,2,2,4
weaondara/BungeePerms,42710c9e83da8b317da5d76cb7fb06cdb53c55a1,wea_ondara,2015-02-25 20:24:57 UTC,escape string to prevent sql injections,true,false,false,false,false,false,false,false,3,3,3,3,8
Cvolton/GMDprivateServer,657f8b47f4261f82a093f9483f415eb2da55782e,Cvolton,2015-09-30 18:10:32 UTC,"preventing sql injection
",false,false,false,false,false,false,false,false,9,9,9,9,2853
wikimedia/mediawiki-extensions-Flow,dd527efeee3b88ae5867b3cff9b59f25eaa70800,Andrew Garrett,2013-12-10 02:03:20 UTC,"Add function for checking options arrays for SQL injection

Now used anywhere where external options are accepted

Change-Id: I8749aab2242fa29e4f3f47af07a7427cd3eefaa4
",false,true,false,false,false,false,false,false,3,3,3,3,8365
FH-Complete/FHC-Core,b96a7f5e7cead862b13373d8f172973a8d91542c,Andreas Österreicher,2014-07-03 12:22:37 UTC,"XSS und SQL Injection Lücken geschlossen
",false,false,false,false,false,false,false,false,13,13,13,13,3
FrozenPigs/Taigabot,700ff40be84be88964e61f8ae780564e5862460d,sbluen,2014-07-05 05:33:12 UTC,fix potential SQL injection attack,true,false,false,false,false,false,false,false,1,1,1,1,
FrozenPigs/Taigabot,ea9b83a66ae1f0f38a1895f3e8dfa2833d77e3a6,sbluen,2014-07-05 05:48:04 UTC,correct more potential SQL injection exploits,true,false,false,false,false,false,false,false,1,1,1,1,12
FrozenPigs/Taigabot,27470dbdbae0c1ac35f6fc2089300a0d0542b3f2,infinitylabs,2014-07-07 02:54:10 UTC,"Merge pull request #6 from sbluen/patch-1

fix potential SQL injection attack",true,true,false,false,false,false,false,false,1,1,1,1,56137
BeWelcome/rox,878f92105e242526647622c1285b8598a57d8097,steinwinde,2014-07-11 07:23:43 UTC,"[2155] Much improved code comments. Checks against SQL injection. Removed obsolete commented block.
",false,false,true,false,false,false,false,false,2,2,2,2,3931
roundcube/roundcubemail,89406f36c20e4d785bfb35c68e87475329cfbaf5,thomascube,2006-08-16 08:06:31 UTC,"Fixed some XSS and SQL injection issues

",true,false,false,false,false,false,false,false,3,3,0,0,6415
usabi/consul_san_borondon,55d339572c41bb5ae17429ac90ff4a8e875e9258,Javi Martín,2019-11-10 19:36:22 UTC,"Simplify setting tsvector values

We make the code easier to read and at the same time we remove a SQL
injection false positive regarding the use of `WHERE id = #{id}`.

We still get a warning about SQL injection regarding the `tsv =` part.
It's a false positive, since the value of that parameter does not
depend on user input.
",false,false,true,true,false,false,false,false,1,1,1,1,60
usabi/consul_san_borondon,a76ed31a94b6895f1c4a21ead0b263c849c95b85,Javi Martín,2019-11-11 00:13:02 UTC,"Remove unneeded scope

In this case using `joins` doesn't prevent N+1 queries to get titles for
every record, and since we cannot order translations with just SQL due
to fallbacks, we don't need it.

Automatic SQL injection checks were showing a false positive in this
scope; there was no real vulnerability here because foreign keys, table
names and locales were under our control.
",false,false,true,true,false,false,false,false,2,2,2,2,26
tootsuite/mastodon,4c03e05a4e1a237f8a414a0861c03abe3269dbc8,James Kiesel,2018-11-05 17:53:25 UTC,"Allow joining several hashtags in a single column (#8904)

* Nascent tag menu on frontend

* Hook up frontend to search

* Tag intersection backend first pass

* Update yarnlock

* WIP

* Fix for tags not searching correctly

* Make radio buttons function

* Simplify radio buttons with modeOption

* Better naming

* Rearrange options

* Add all/any/none functionality on backend

* Small PR cleanup

* Move to service from scope

* Small cleanup, add proper service tests

* Don't use send with user input :D

* Set appropriate column header

* Handle auto updating timeline

* Fix up toggle function

* Use tag value correctly

* A bit more correct to use 'self' rather than 'all' in status scope

* Fix some style issues

* Fix more code style issues

* Style select dropdown more better

* Only use to_id'ed value to ensure no SQL injection

* Revamp frontend to allow for multiple selects

* Update backend / col header to account for more flexible tagging

* Update brakeman ignore

* Codeclimate suggestions

* Fix presenter tag_url

* Implement initial PR feedback

* Handle additional tag streaming

* CodeClimate tweak
",true,false,true,true,false,false,false,false,18,18,12,12,
JetBrains/intellij-community,324fab4927f42cc72425a5a722942c0237115068,Serega Vasiliev,2011-08-23 10:29:11 UTC,"spring jdbc: sql injections
",false,false,false,false,false,false,false,false,1,1,0,0,47167
akrherz/iem,6d2179948450766e6b9b09e686cfbb9c0aa212de,akrherz,2011-08-15 17:51:05 UTC,"fix sql injection and use right climate table
",true,false,false,false,false,false,false,false,1,1,1,1,3
FH-Complete/FHC-Core,1105e967d5bd55c66e19d658509d9f023da4a577,Andreas Österreicher,2011-10-18 10:39:10 UTC,"- Datenbank Tabellen für Ampel System
- SQL Injection Bugfix im Abgabetool
",true,false,false,false,false,false,false,false,5,5,4,4,5982
FriendsOfPHP/security-advisories,176773ca4798ed8db7efa7353a8e57e252406924,Marco Menzel,2016-09-08 17:02:29 UTC,"

adding ZF2016-03: Potential SQL injection in ORDER and GROUP functions of ZF1",false,true,false,false,false,false,false,false,1,1,0,0,
GridProtectionAlliance/gsf,260336bb07c1a392844ed7bdf6cdbf4fcf2bbc4b,StephenCWills,2016-09-20 19:32:12 UTC,"GSF.TimeSeries: Removed potential SQL injection vulnerability from GEP.
",true,true,false,false,false,false,false,false,2,2,2,2,16
moodle/moodle,c22e335d80ebcc73dcf291ad2187c56f041855b8,skodak,2007-09-26 11:02:36 UTC,"MDL-9636 fixed many sql injections in grade import code
",true,true,false,false,false,false,false,false,3,3,3,3,8
projectestac/agora_moodle2,c22e335d80ebcc73dcf291ad2187c56f041855b8,skodak,2007-09-26 11:02:36 UTC,"MDL-9636 fixed many sql injections in grade import code
",true,true,false,false,false,false,false,false,3,3,3,3,8
iomad/iomad,c22e335d80ebcc73dcf291ad2187c56f041855b8,skodak,2007-09-26 11:02:36 UTC,"MDL-9636 fixed many sql injections in grade import code
",true,true,false,false,false,false,false,false,3,3,3,3,8
moodle/moodle,70e9b59d228face74faea3f9440a48a4092c76bc,skodak,2007-09-16 20:19:19 UTC,"MDL-11300
1/ potential sql injection through tag types - missing param type + can add new types + usually no addslashes before update of tags
2/ paging does not work at all
3/ missing param type definitions
4/ not xhtml strict compliant
5/ CSRF - missing sesskey checks
6/ UI code in tag/lib.php - should be in manage.php or other file
7/ missing localization of types - default/standard
",true,false,true,false,false,false,false,false,3,3,3,3,47
iomad/iomad,70e9b59d228face74faea3f9440a48a4092c76bc,skodak,2007-09-16 20:19:19 UTC,"MDL-11300
1/ potential sql injection through tag types - missing param type + can add new types + usually no addslashes before update of tags
2/ paging does not work at all
3/ missing param type definitions
4/ not xhtml strict compliant
5/ CSRF - missing sesskey checks
6/ UI code in tag/lib.php - should be in manage.php or other file
7/ missing localization of types - default/standard
",true,false,true,false,false,false,false,false,3,3,3,3,47
projectestac/agora_moodle2,70e9b59d228face74faea3f9440a48a4092c76bc,skodak,2007-09-16 20:19:19 UTC,"MDL-11300
1/ potential sql injection through tag types - missing param type + can add new types + usually no addslashes before update of tags
2/ paging does not work at all
3/ missing param type definitions
4/ not xhtml strict compliant
5/ CSRF - missing sesskey checks
6/ UI code in tag/lib.php - should be in manage.php or other file
7/ missing localization of types - default/standard
",true,false,true,false,false,false,false,false,3,3,3,3,47
HippieStation/HippieStation,afbeb03d9fab9bdab27f8a6f8a183062543724cc,MrStonedOne,2014-10-30 01:19:47 UTC,"Fixes admin only vv related sql injection exploit in feedback reporting.

Noticed this while looking over my PR, by storing (and trusting) the escaped version, an admin could edit this in vv and do unspeakable things to the database
",true,false,false,false,false,false,false,false,1,1,0,0,17
querydsl/querydsl,3eb6cd2c7a162a3fe1106ee241e09778451d4159,Timo Westkämper,2010-09-24 11:59:32 UTC,"added example for SQL injection
",false,false,true,false,false,false,false,false,1,0,1,0,23
bestpractical/rt,c83b3488e33eba887ae20a6f192f2c5dc4311d01,Alex Vandiver,2011-04-04 20:12:47 UTC,"Always pass in status list to selfservice search

This prevents it from being overridden via query parameters; much like
the previous commit, this allowed TicketSQL injection.  At the same
time, properly escape any statuses which contain apostrophes.
",false,false,false,false,false,false,false,false,2,2,0,0,4
bestpractical/rt,87aa1d4fd8f07aaeb54cb54f23f40c935e23e897,Alex Vandiver,2011-04-04 20:12:47 UTC,"Always pass in status list to selfservice search

This prevents it from being overridden via query parameters; much like
the previous commit, this allowed TicketSQL injection.  At the same
time, properly escape any statuses which contain apostrophes.
",false,false,false,false,false,false,false,false,2,2,0,0,4
bestpractical/rt,236c3de77467f4498ac2fa57cb7df392e6960e7f,Alex Vandiver,2011-04-01 15:46:26 UTC,"Prevent FIELD- and OPERATOR- based SQL injection at the RT::SB level

Provide a whitelist of possible operators to use, and restrict field to
being /^\w*$/.  Any arguments not matching this will instead log a
critical message and insert a clause which should never match.

In the two places we attempt to be clever, and generate the SQL
""FUNCTION( alias.field ) = 42"" by putting ""FUNCTION( alias"" as the
ALIAS, and ""field )"" as the FIELD -- which violates this constraint.
Provide a new FUNCTION parameter, which walks around the new
restriction, and does the split across the '.' for you.  This should
only be used if you are certain that you trust the data that the
FUNCTION argument is built up from.
",true,true,false,false,false,true,false,false,1,1,1,1,2572
bestpractical/rt,bd0ebe51688df364ac11b63728b771b67eb09f09,Alex Vandiver,2011-04-01 15:46:26 UTC,"Prevent FIELD- and OPERATOR- based SQL injection at the RT::SB level

Provide a whitelist of possible operators to use, and restrict field to
being /^\w*$/.  Any arguments not matching this will instead log a
critical message and insert a clause which should never match.

In the two places we attempt to be clever, and generate the SQL
""FUNCTION( alias.field ) = 42"" by putting ""FUNCTION( alias"" as the
ALIAS, and ""field )"" as the FIELD -- which violates this constraint.
Provide a new FUNCTION parameter, which walks around the new
restriction, and does the split across the '.' for you.  This should
only be used if you are certain that you trust the data that the
FUNCTION argument is built up from.
",true,true,false,false,false,true,false,false,2,2,2,2,2572
bcit-ci/CodeIgniter,6ae70cc8499499b5d77d77ec8974f95873edb861,Derek Jones,2011-04-19 21:13:48 UTC,"modified MySQL and MySQLi drivers to address a potential SQL injection attack vector when multi-byte character set connections are employed. (Does not impact Latin-1, UTF-8, etc. encodings)
",false,false,false,false,false,false,false,false,5,5,3,3,50542
DevLeoko/AdvancedBan,cf2c3dbf677485180c5abecff27c2e80d52e189e,Leo G,2017-08-06 23:38:19 UTC,"[~] Changed local storage from .yml file to HSQLDB #PerformanceBoost
[~] Now only the punishemts of online users are cashed
[+] Prevented SQL-Injection
[~] Some code cleanup
",false,true,true,true,false,false,false,false,14,14,13,13,16437
colinsc/koha,79c37dc8ed3efd1886d6c5619b2d1eb004a19713,Joe Atzberger,2008-03-07 07:09:42 UTC,"basket.pl and template - Many fixes including SQL injection security check,

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,false,false,false,false,false,false,2,2,1,1,19448
centreon/centreon,3a706f5591f2691b471346f16c47d4039b9fca7a,Julien Mathis,2008-03-04 22:19:51 UTC,"disable check sql injection. Function is not ok. To be developed again

git-svn-id: 25a0ac75d3222d69293b2750b310215dcabd6451@4153 6bcd3966-0018-0410-8128-fd23d134de7e
",false,true,false,false,false,false,false,false,1,1,1,1,0
inveniosoftware/invenio,c5114ac6d3e67a0772026b6d3204ce1d434b97b0,Marko Niinimaki,2008-03-28 10:58:17 UTC,"improved SQL clauses to prevent SQL injection
",true,false,true,true,false,false,false,false,1,1,1,1,59
94fzb/zrlog,bd2dba1aef58f960c53519f36c815492e5cc2e70,xiaochun,2018-09-28 12:39:15 UTC,"fix #37 admin search article has sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,18523
BjerknesClimateDataCentre/QuinCe,0d2503abfe39a940695b7b4087216f40c3e5394c,Steve Jones,2018-09-03 15:38:38 UTC,"(#355) SQL Injection protection
",false,false,false,false,false,false,false,false,1,1,1,1,21
rails-sqlserver/activerecord-sqlserver-adapter,06e98aa6a5658a7573ca57d9603d4b3977460d5a,Ken Collins,2008-11-13 20:12:07 UTC,"Coerce a few base AdapterTest tests that deal with sanitizing limit offset since we take a hard nose Argument error vs coercing integers from possilbe sql injection. This resolves 2 errors.
",true,false,false,false,false,false,false,false,1,0,1,0,21
sympa-community/sympa,30616d57e23f76c95a23b0e8ce6ac8ce87636c83,david.verdin,2008-11-28 15:23:16 UTC,"[bug][reported by T. Retout] SQL injection threat removed by using place holders instead of direct sprint in a query.


git-svn-id: 22dc95a18da3be607f2c736dfa19921a9f5780cd@5399 05aa8bb8-cd2b-0410-b1d7-8918dfa770ce
",true,false,true,true,false,false,true,false,1,1,1,1,4248
igniterealtime/Openfire,edcfb96b3ecdab9b4d9995edd2039082c5773c4e,Thiago Camargo,2008-11-10 12:16:33 UTC,"[JM-1488] - Using Prepared Statement Values to prevent SQL Injection


git-svn-id: 2e83ce7f183c9abd424edb3952fab2cdab7acd7f@10869 b35dd754-fafc-0310-a699-88a17e54d16e
",false,false,false,false,false,false,false,false,2,2,2,2,811716
centreon/centreon,7342bf79494d25955607e5be14ce2d71feed697a,Julien Mathis,2010-03-31 15:59:49 UTC,"fix SQL Injection Vulnerability

git-svn-id: 25a0ac75d3222d69293b2750b310215dcabd6451@10296 6bcd3966-0018-0410-8128-fd23d134de7e
",true,false,false,false,false,false,false,false,1,1,1,1,51
GetDKAN/dkan,1fce6911b5d74e3d66bff362dd106194463c46cd,David Kinzer,2017-06-29 21:50:09 UTC,"Security update for services module. (#1983)

* Security update for services module.

Fixes Services - Critical - SQL Injection - SA-CONTRIB-2017-054
https://www.drupal.org/project/services/releases/7.x-3.20

* Update changelog.
",true,true,true,false,false,false,false,false,2,2,0,0,11689
AlchemyCMS/alchemy_cms,d25c361e1c138a3fc7d4405a177b46e16f667258,Jesse Doyle,2017-06-15 20:57:26 UTC,"Cleanup ActiveRecord Queries (#1257)

* Cleanup ActiveRecord Queries

Brakeman indicated 3 potential SQL injection issues.

The following list outlines the issues from highest to
lowest severity:

1) `Alchemy::PagesHelper#render_navigation` - If the developer passed
   user-controlled parameters to the `deepness` argument, SQL injection
   would be possible via interpolation inside a where clause.
2) `Alchemy::Page#next_or_previous` - A raw interpolation of the
   `dir` variable in a where clause that could only result from
   malicious use of the `next_or_previous` method (which is private).
3) `Alchemy::Element#previous_or_next` - A raw interpolation of the
   `dir` variable in a where clause. Again, this could only
   result from improper use of the `previous_or_next` private
   method.

* Cleanup ActiveRecord Queries

* To reduce the need for variable interpolation inside of
  ActiveRecord queries, remove the private methods of
  `Alchemy::Page#next_or_previous` and
  `Alchemy::Element#previous_or_next`.
* Instead, add a `select_page` and `select_helper` helper method
  and insert the query logic directly into the `next` or `previous`
  methods.
* No longer interpolate the table name in related queries, just
  let ActiveRecord work as intended.
* This resolves a potential SQL injection issue that was present
  in the earlier method definitions.
",true,false,true,true,false,false,true,false,4,4,3,3,
engelsystem/engelsystem,70de7e5a1dd96c47c48eb45498004d219bec1283,Daniel Friesel,2011-06-03 09:34:54 UTC,"guest_login: Cleanup, fix sql injection
",true,false,true,true,false,false,false,false,2,2,2,2,10
FH-Complete/FHC-Core,da1aedabcff4ed2872ab062b8d2bbb603d9e6585,oesi,2016-11-23 09:32:55 UTC,"Fixed SQL Injection Problem
",true,false,false,false,false,false,false,false,1,1,1,1,1125
FH-Complete/FHC-Core,4d9e662ba9739c89c15e68662dce8fd55f5c1d5b,kindlm,2016-11-02 12:35:45 UTC,"SQL-Injection Lücke geschlossen
",false,false,false,false,false,false,false,false,1,1,1,1,6
SplitTime/OpenSplitTime,b1f45d6f6fab715f9b0d8aa63bfc477e20fa27ce,moveson,2016-12-08 05:44:12 UTC,"Convert Segment#initialize to keyword arguments and add ArgsValidator; add Segment#order_control to permit segments with reversed begin and end segments when order_control is set to false; improve Segment#name, rework Segment#typical_time_by_stats to protect against SQL injection attack; move Segment::TYPICAL_TIME_IN_AID to DataStatus class.
",false,true,true,true,false,false,false,true,2,2,2,2,649
AshamaneProject/AshamaneCore,839e5624c4dfa26cffed76905864a9d761099cea,spp,2009-12-13 03:32:27 UTC,"Prevent SQL Injection in custom channel handling, by azazel. Closes #704

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,2,2,1,1,44
AshamaneProject/AshamaneCore,3beb4595e035c62f27d61a948b1cc285791f80a7,spp,2009-12-13 03:32:27 UTC,"Prevent SQL Injection in custom channel handling, by azazel. Closes #704

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,2,2,1,1,44
TrinityCore/TrinityCore,839e5624c4dfa26cffed76905864a9d761099cea,spp,2009-12-13 03:32:27 UTC,"Prevent SQL Injection in custom channel handling, by azazel. Closes #704

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,2,2,1,1,44
ElunaLuaEngine/ElunaTrinityWotlk,839e5624c4dfa26cffed76905864a9d761099cea,spp,2009-12-13 03:32:27 UTC,"Prevent SQL Injection in custom channel handling, by azazel. Closes #704

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,2,2,1,1,44
OCSInventory-NG/OCSInventory-ocsreports,92ebec88f9ab931427cc5984af33b3851fee723d,Erwan Goalou,2009-04-02 05:40:24 UTC,"fix sql injection

",true,false,false,false,false,false,false,false,1,1,1,1,2
OCSInventory-NG/OCSInventory-Server,41e99aadf2c33c97b171db328a3d4ef3200f861f,Erwan Goalou,2009-04-02 05:40:24 UTC,"fix sql injection

",true,false,false,false,false,false,false,false,1,1,1,1,2
Azure/azure-quickstart-templates,6fc296ccb70f84033f8d3d850a4809c15187f775,Brian Moore,2018-08-03 19:43:50 UTC,"Merge pull request #4930 from AvyanConsultingCorp/sql+xss

added xxs attack and sql injection scenario",false,true,false,false,false,false,false,false,99,99,0,0,8163
Azure/azure-quickstart-templates,ea219985c5c6e5db220319076781167a2550e186,Brian Moore,2018-08-10 16:29:42 UTC,"Merge pull request #5039 from AvyanConsultingCorp/master

removed identity property from sql server templates in sql injection and xss attack scenarios.",false,false,false,false,false,false,false,false,6,6,0,0,0
yiisoft/yii2-framework,255989a732a3e819fa22020f5333139b6f0fb836,SilverFire - Dmitry Naumenko,2018-02-20 09:21:57 UTC,"Fixed possible SQL injection through `ActiveRecord::findOne()`
",true,false,false,false,false,false,false,false,5,5,3,3,1019
yiisoft/yii2,b37f361ad74e531a8e3e1f34cfd17b3e0b7d8e69,SilverFire - Dmitry Naumenko,2018-02-20 09:21:57 UTC,"Fixed possible SQL injection through `ActiveRecord::findOne()`
",true,false,false,false,false,false,false,false,7,6,4,3,1019
akrherz/iem,1eb2bc2cb820c022cd94e40aec325d30b0aab0c6,akrherz,2008-11-17 16:19:30 UTC,"get rid of sql injection

",false,false,false,false,false,false,false,false,1,1,0,0,8
akrherz/iem,cb9f962827d33cc0f7b0f54aab831c124950ef1f,akrherz,2008-11-17 15:28:17 UTC,"get rid of sql injection and place header correctly

",true,false,false,false,false,false,false,false,1,1,1,1,9
akrherz/iem,444cb311c93b148d3c229aed4a700958b346f5f0,akrherz,2008-11-17 16:08:11 UTC,"sql injection free for now

",false,false,false,false,false,false,false,false,1,1,1,1,4
akrherz/iem,1bd857eaba7e32c4caa0036199317fbffe0337cc,akrherz,2008-11-17 15:45:54 UTC,"rid thyself of sql injection

",false,false,false,false,false,false,false,false,1,1,1,1,4
akrherz/iem,8e4975f569b80dcf26aafcd9f1721724bb933344,akrherz,2008-11-17 15:34:50 UTC,"rid us of sql injection

",false,false,false,false,false,false,false,false,1,1,1,1,6
akrherz/iem,71ceccdaaf6809ebc8bd60a502ffe905a061651f,akrherz,2008-11-17 16:03:55 UTC,"get rid of sql injection

",false,false,false,false,false,false,false,false,1,1,1,1,3
akrherz/iem,f8b55d3f82876f36b07167a511203f48c2ca0473,akrherz,2008-11-17 16:00:41 UTC,"rid of sql injection again :)

",false,false,false,false,false,false,false,false,1,1,1,1,3
akrherz/iem,897ef5d2f8462cd907c26d95537bfa323eac0cad,akrherz,2008-11-14 18:37:31 UTC,"rid of sql injection and all_locs

",false,false,false,false,false,false,false,false,1,1,1,1,28
akrherz/iem,f4098707c4d1d3f104e95ddf9ab11bfa816f4f72,akrherz,2008-11-17 15:13:26 UTC,"no more sql injection and wrap it with a banner for self promotion please

",false,false,false,false,false,false,false,false,1,1,1,1,73
akrherz/iem,05ed2f8d17bc0479e25f0ff0ade70fd401e967a2,akrherz,2008-11-17 15:40:56 UTC,"now featuring less sql injection :)

",false,false,false,false,false,false,false,false,1,1,1,1,6
westnordost/StreetComplete,2ca5c2ae0c77231d469d22429746bd4dc868380d,Tobias Zwick,2020-04-17 12:47:11 UTC,"simplify and make safe against possible SQL injection

Currently the function is only used with string constants, so it is not
a vulnerability, but since it is a generic function, it might be used
differently in the future
",false,false,true,true,false,false,false,false,1,1,0,0,5887
moodle/moodle,e5e02e46861f9c1b88782cb1ef8737253412be33,gbateson,2008-07-01 10:49:22 UTC,"MDL-15184: fix sql injection vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,15109
projectestac/agora_moodle2,e5e02e46861f9c1b88782cb1ef8737253412be33,gbateson,2008-07-01 10:49:22 UTC,"MDL-15184: fix sql injection vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,15109
iomad/iomad,e5e02e46861f9c1b88782cb1ef8737253412be33,gbateson,2008-07-01 10:49:22 UTC,"MDL-15184: fix sql injection vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,15109
bywatersolutions/bws-package,8b679f8d814974f5ddd4a410474267af2fa30fe5,Andrew Moore,2008-07-25 20:31:11 UTC,"Bug 1953: refactoring C4::Koha::get_itemtypeinfos_of to eliminate potential SQL injection

C4::Koha::get_itemtypeinfos_of was not using plceholders, opening itself up to
potential SQL injection attacks. This patch refactors it to use placeholders to
bind parameters.
I also had to extend C4::koha::get_infos_of to allow us to pass bind parameters into it.
I'm including a test module for C4::Koha::get_itemtypeinfos_of.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,215
colinsc/koha,9ecd632001b994a45a48e78b2dd7fcb7ff9dd088,Andrew Moore,2008-07-29 16:42:46 UTC,"Bug 1953 [2/6]: refactoring SQL in C4::Koha::displayServers to use placeholders.

The SQL call in displayServers was not using placeholders, leaving itself open
to potential SQL injection attacks. I've rewritten it to use placeholders.

Signed-off-by: Galen Charlton <9287d636b1018cebee0f553be1637a33e3ce3f5c@liblime.com>
Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,0
bywatersolutions/ByWater-KOHA,8b679f8d814974f5ddd4a410474267af2fa30fe5,Andrew Moore,2008-07-25 20:31:11 UTC,"Bug 1953: refactoring C4::Koha::get_itemtypeinfos_of to eliminate potential SQL injection

C4::Koha::get_itemtypeinfos_of was not using plceholders, opening itself up to
potential SQL injection attacks. This patch refactors it to use placeholders to
bind parameters.
I also had to extend C4::koha::get_infos_of to allow us to pass bind parameters into it.
I'm including a test module for C4::Koha::get_itemtypeinfos_of.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,215
bywatersolutions/ByWater-KOHA,9ecd632001b994a45a48e78b2dd7fcb7ff9dd088,Andrew Moore,2008-07-29 16:42:46 UTC,"Bug 1953 [2/6]: refactoring SQL in C4::Koha::displayServers to use placeholders.

The SQL call in displayServers was not using placeholders, leaving itself open
to potential SQL injection attacks. I've rewritten it to use placeholders.

Signed-off-by: Galen Charlton <9287d636b1018cebee0f553be1637a33e3ce3f5c@liblime.com>
Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,0
bywatersolutions/bws-package,22d9133268b90ceabffa51fca072fd2828de9e25,Andrew Moore,2008-07-25 16:55:12 UTC,"Bug 1953 [2/3]: refactoring SQL in C4::Items::GetItemsForInventory to use placeholders

The SQL in C4::Items::GetItemsForInventory wasn't using placeholders and
bind parameters, possibly leaving itself open ot SQL injection attacks. This
patch changes that.
I've also incliuded a test module for C4::items::GetItemsForInventory.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,0
LMSCloud/Koha-LMSCloud,551b95284ef1cc49016b2f5ebdf8c6e3993a7f2c,Andrew Moore,2008-07-23 19:27:55 UTC,"bug 1953 [1/2]: fixing SQL injection problem in C4::Context->preference

C4::Context->preference was not using placeholders and was potentially vulnerable to
a SQL injectin attack. This patch refactors the method to use placeholders.

Added some tests for C4::Context.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,true,false,false,false,false,3,1,3,1,67
LMSCloud/Koha-LMSCloud,8b679f8d814974f5ddd4a410474267af2fa30fe5,Andrew Moore,2008-07-25 20:31:11 UTC,"Bug 1953: refactoring C4::Koha::get_itemtypeinfos_of to eliminate potential SQL injection

C4::Koha::get_itemtypeinfos_of was not using plceholders, opening itself up to
potential SQL injection attacks. This patch refactors it to use placeholders to
bind parameters.
I also had to extend C4::koha::get_infos_of to allow us to pass bind parameters into it.
I'm including a test module for C4::Koha::get_itemtypeinfos_of.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,215
bywatersolutions/ByWater-KOHA,551b95284ef1cc49016b2f5ebdf8c6e3993a7f2c,Andrew Moore,2008-07-23 19:27:55 UTC,"bug 1953 [1/2]: fixing SQL injection problem in C4::Context->preference

C4::Context->preference was not using placeholders and was potentially vulnerable to
a SQL injectin attack. This patch refactors the method to use placeholders.

Added some tests for C4::Context.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,true,false,false,false,false,3,1,3,1,67
colinsc/koha,551b95284ef1cc49016b2f5ebdf8c6e3993a7f2c,Andrew Moore,2008-07-23 19:27:55 UTC,"bug 1953 [1/2]: fixing SQL injection problem in C4::Context->preference

C4::Context->preference was not using placeholders and was potentially vulnerable to
a SQL injectin attack. This patch refactors the method to use placeholders.

Added some tests for C4::Context.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,true,false,false,false,false,3,1,3,1,67
LMSCloud/Koha-LMSCloud,22d9133268b90ceabffa51fca072fd2828de9e25,Andrew Moore,2008-07-25 16:55:12 UTC,"Bug 1953 [2/3]: refactoring SQL in C4::Items::GetItemsForInventory to use placeholders

The SQL in C4::Items::GetItemsForInventory wasn't using placeholders and
bind parameters, possibly leaving itself open ot SQL injection attacks. This
patch changes that.
I've also incliuded a test module for C4::items::GetItemsForInventory.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,0
colinsc/koha,8b679f8d814974f5ddd4a410474267af2fa30fe5,Andrew Moore,2008-07-25 20:31:11 UTC,"Bug 1953: refactoring C4::Koha::get_itemtypeinfos_of to eliminate potential SQL injection

C4::Koha::get_itemtypeinfos_of was not using plceholders, opening itself up to
potential SQL injection attacks. This patch refactors it to use placeholders to
bind parameters.
I also had to extend C4::koha::get_infos_of to allow us to pass bind parameters into it.
I'm including a test module for C4::Koha::get_itemtypeinfos_of.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,215
Koha-Community/Koha,22d9133268b90ceabffa51fca072fd2828de9e25,Andrew Moore,2008-07-25 16:55:12 UTC,"Bug 1953 [2/3]: refactoring SQL in C4::Items::GetItemsForInventory to use placeholders

The SQL in C4::Items::GetItemsForInventory wasn't using placeholders and
bind parameters, possibly leaving itself open ot SQL injection attacks. This
patch changes that.
I've also incliuded a test module for C4::items::GetItemsForInventory.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,0
colinsc/koha,22d9133268b90ceabffa51fca072fd2828de9e25,Andrew Moore,2008-07-25 16:55:12 UTC,"Bug 1953 [2/3]: refactoring SQL in C4::Items::GetItemsForInventory to use placeholders

The SQL in C4::Items::GetItemsForInventory wasn't using placeholders and
bind parameters, possibly leaving itself open ot SQL injection attacks. This
patch changes that.
I've also incliuded a test module for C4::items::GetItemsForInventory.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,0
bywatersolutions/bws-package,9ecd632001b994a45a48e78b2dd7fcb7ff9dd088,Andrew Moore,2008-07-29 16:42:46 UTC,"Bug 1953 [2/6]: refactoring SQL in C4::Koha::displayServers to use placeholders.

The SQL call in displayServers was not using placeholders, leaving itself open
to potential SQL injection attacks. I've rewritten it to use placeholders.

Signed-off-by: Galen Charlton <9287d636b1018cebee0f553be1637a33e3ce3f5c@liblime.com>
Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,0
LMSCloud/Koha-LMSCloud,9ecd632001b994a45a48e78b2dd7fcb7ff9dd088,Andrew Moore,2008-07-29 16:42:46 UTC,"Bug 1953 [2/6]: refactoring SQL in C4::Koha::displayServers to use placeholders.

The SQL call in displayServers was not using placeholders, leaving itself open
to potential SQL injection attacks. I've rewritten it to use placeholders.

Signed-off-by: Galen Charlton <9287d636b1018cebee0f553be1637a33e3ce3f5c@liblime.com>
Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,0
Koha-Community/Koha,551b95284ef1cc49016b2f5ebdf8c6e3993a7f2c,Andrew Moore,2008-07-23 19:27:55 UTC,"bug 1953 [1/2]: fixing SQL injection problem in C4::Context->preference

C4::Context->preference was not using placeholders and was potentially vulnerable to
a SQL injectin attack. This patch refactors the method to use placeholders.

Added some tests for C4::Context.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,true,false,false,false,false,3,1,3,1,67
Koha-Community/Koha,9ecd632001b994a45a48e78b2dd7fcb7ff9dd088,Andrew Moore,2008-07-29 16:42:46 UTC,"Bug 1953 [2/6]: refactoring SQL in C4::Koha::displayServers to use placeholders.

The SQL call in displayServers was not using placeholders, leaving itself open
to potential SQL injection attacks. I've rewritten it to use placeholders.

Signed-off-by: Galen Charlton <9287d636b1018cebee0f553be1637a33e3ce3f5c@liblime.com>
Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,0
bywatersolutions/bws-package,551b95284ef1cc49016b2f5ebdf8c6e3993a7f2c,Andrew Moore,2008-07-23 19:27:55 UTC,"bug 1953 [1/2]: fixing SQL injection problem in C4::Context->preference

C4::Context->preference was not using placeholders and was potentially vulnerable to
a SQL injectin attack. This patch refactors the method to use placeholders.

Added some tests for C4::Context.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,true,false,false,false,false,3,1,3,1,67
Koha-Community/Koha,8b679f8d814974f5ddd4a410474267af2fa30fe5,Andrew Moore,2008-07-25 20:31:11 UTC,"Bug 1953: refactoring C4::Koha::get_itemtypeinfos_of to eliminate potential SQL injection

C4::Koha::get_itemtypeinfos_of was not using plceholders, opening itself up to
potential SQL injection attacks. This patch refactors it to use placeholders to
bind parameters.
I also had to extend C4::koha::get_infos_of to allow us to pass bind parameters into it.
I'm including a test module for C4::Koha::get_itemtypeinfos_of.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,215
bywatersolutions/ByWater-KOHA,22d9133268b90ceabffa51fca072fd2828de9e25,Andrew Moore,2008-07-25 16:55:12 UTC,"Bug 1953 [2/3]: refactoring SQL in C4::Items::GetItemsForInventory to use placeholders

The SQL in C4::Items::GetItemsForInventory wasn't using placeholders and
bind parameters, possibly leaving itself open ot SQL injection attacks. This
patch changes that.
I've also incliuded a test module for C4::items::GetItemsForInventory.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,2,1,2,1,0
etf-sarajevo/zamger,4b492abd74bff0c176ee6fe5e689937efad8aa88,Vedran Ljubovic,2008-07-03 14:18:36 UTC,"Spajam razne izmjene koje sam pravio na zamger.etf.unsa.ba:
- Totalno promijenjen nacin unosa ocjena (AJAH tabela slicna kao za 
prijemni)
- ID a.k.a redni broj je studentskoj jako vazan podatak preko kojeg sve 
prate. Zato je omogucen izbor IDa prilikom unosa ili izmjena IDa, u svim 
spiskovima i pregledima kandidata se prikazuje ID umjesto rednog broja, 
u pregledu omoguceno sortiranje po IDu ili po prezimeno
- Unos bodova sa prijemnog: skracen HR, dodana kolona sa brojem bodova 
iz srednje skole (trazila Nihada)
- Popravljen moguci SQL injection kod brisanja podataka
- Dodano polje ""student generacije""
- Popravljeni bugovi: dvostruko parsiranje godine, tretiranje godine 
""90"" kao ""1090""
- Malo usavrsena ispravka u prethodnom commit-u tako sto je default 
vrijednost za prijemni_ispit postavljena u bazu

",false,false,false,false,false,false,false,false,1,1,1,1,311
MyCoRe-Org/mycore,82c243eb823037d677264298308af7c80565ff02,Jens Kupferschmidt,2012-10-04 09:35:47 UTC,"fix bug if the user name is empty or an sql injection

git-svn-id: 5c3a6088a260de08063aa573fa0e2db6520eb9b6@25042 7089d063-bc14-496d-ac90-53de1872eb6c
",true,false,false,false,false,false,false,false,1,1,1,1,83575
spinnaker/clouddriver,1e9f44d6626b5363a6ee42225469565df36590ca,Matt Santa,2020-08-17 17:41:38 UTC,"fix(cats/sql): Fixes CloudDriver SQL Cache from failing due to id or agent being too long to be stored.  (#4755)

* fix(cats/sql): Reverting temporary fix when agent is too long for SQL table.

This temporary fix can still have issues when the type in the agent is longer than 127 characters, so I'm reverting it in favor of a proper long-term fix. This reverts commit fae18a1ad60582210a8158717aef248698ec817e.

* fix(cats/sql): Adding cats v2 template tables.

* fix(cats/sql): Fixes CloudDriver SQL Cache from failing due to id or agent being too long to be stored.

Fixes github.com/spinnaker/spinnaker/issues/5600. The theoretical max length of an id or agent is much larger than we can store in columns that are primary or index keys. Therefore, in order to solve the issue I moved away from storing the id and agent in key columns. I've introduced new columns that will be used as keys that store hashes of the ids and agents instead. I made no changes to the contracts between the SQL Cache and those who depend on it, all the changes are internal to the SQL Cache.

I also took the liberty of adding more javadoc style comments to some of the functions in the SQL Cache. Even though some of them are simple, I still think it's beneficial to introduce it since if the functions do become more complex then whoever updates them will need to update the comment.

* fix(cats/sql): Add drop tables by version to CATS SQL Admin Controller.

* Address first set of PR comments.

* Fix Kotlin spotless check issues

* Fix NPE due to null ids, move persistence logic out of admin controller, and prevent harmful SQL injection in sql admin controller.

* Add id index on cats v2 resource template. Will unfortunately limit id to 768 characters, but is necessary to avoid performance regression on the SqlCache filterIdentifiers function.

Co-authored-by: mergify[bot] <b09a6ee808b67e98a221404e7aaa52e0398a4954@users.noreply.github.com>",true,true,true,false,false,true,true,true,13,11,0,0,
bywatersolutions/ByWater-KOHA,e8da5f250da1dbf39891cc81b0075458c48938fa,Andrew Moore,2008-04-09 20:46:45 UTC,"bug 1953: removing potential SQL injection in C4::Acquisition::GetParcels

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,false,false,false,false,false,false,1,1,1,1,310
colinsc/koha,e8da5f250da1dbf39891cc81b0075458c48938fa,Andrew Moore,2008-04-09 20:46:45 UTC,"bug 1953: removing potential SQL injection in C4::Acquisition::GetParcels

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,false,false,false,false,false,false,1,1,1,1,310
bywatersolutions/ByWater-KOHA,49be89c735c34f6e17b26bb183a23f935bb491d0,Andrew Moore,2008-04-11 16:32:58 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetHistory

I think this is the last sub in this module that needs to be changed.
there should be no functionality or no documentation changes with this patch.
http://bugs.koha.org/cgi-bin/bugzilla/show_bug.cgi?id=1953

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,false,false,false,false,false,1,1,1,1,1243
LMSCloud/Koha-LMSCloud,e8da5f250da1dbf39891cc81b0075458c48938fa,Andrew Moore,2008-04-09 20:46:45 UTC,"bug 1953: removing potential SQL injection in C4::Acquisition::GetParcels

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,false,false,false,false,false,false,1,1,1,1,310
LMSCloud/Koha-LMSCloud,2df965f4ead8719892400aacbeac1d8391250557,Andrew Moore,2008-04-10 19:49:39 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetLateOrders

I decided to not make chagnes the the query that's executed on databases other than MySQL as I have no good way to test that.
This change provides no functinality change and requires no documentation change.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,1382
bywatersolutions/ByWater-KOHA,2df965f4ead8719892400aacbeac1d8391250557,Andrew Moore,2008-04-10 19:49:39 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetLateOrders

I decided to not make chagnes the the query that's executed on databases other than MySQL as I have no good way to test that.
This change provides no functinality change and requires no documentation change.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,1382
bywatersolutions/bws-package,49be89c735c34f6e17b26bb183a23f935bb491d0,Andrew Moore,2008-04-11 16:32:58 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetHistory

I think this is the last sub in this module that needs to be changed.
there should be no functionality or no documentation changes with this patch.
http://bugs.koha.org/cgi-bin/bugzilla/show_bug.cgi?id=1953

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,false,false,false,false,false,1,1,1,1,1243
Koha-Community/Koha,49be89c735c34f6e17b26bb183a23f935bb491d0,Andrew Moore,2008-04-11 16:32:58 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetHistory

I think this is the last sub in this module that needs to be changed.
there should be no functionality or no documentation changes with this patch.
http://bugs.koha.org/cgi-bin/bugzilla/show_bug.cgi?id=1953

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,false,false,false,false,false,1,1,1,1,1243
bywatersolutions/bws-package,e8da5f250da1dbf39891cc81b0075458c48938fa,Andrew Moore,2008-04-09 20:46:45 UTC,"bug 1953: removing potential SQL injection in C4::Acquisition::GetParcels

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,false,false,false,false,false,false,1,1,1,1,310
LMSCloud/Koha-LMSCloud,49be89c735c34f6e17b26bb183a23f935bb491d0,Andrew Moore,2008-04-11 16:32:58 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetHistory

I think this is the last sub in this module that needs to be changed.
there should be no functionality or no documentation changes with this patch.
http://bugs.koha.org/cgi-bin/bugzilla/show_bug.cgi?id=1953

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,false,false,false,false,false,1,1,1,1,1243
colinsc/koha,49be89c735c34f6e17b26bb183a23f935bb491d0,Andrew Moore,2008-04-11 16:32:58 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetHistory

I think this is the last sub in this module that needs to be changed.
there should be no functionality or no documentation changes with this patch.
http://bugs.koha.org/cgi-bin/bugzilla/show_bug.cgi?id=1953

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,true,true,false,false,false,false,false,1,1,1,1,1243
Koha-Community/Koha,e8da5f250da1dbf39891cc81b0075458c48938fa,Andrew Moore,2008-04-09 20:46:45 UTC,"bug 1953: removing potential SQL injection in C4::Acquisition::GetParcels

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,false,false,false,false,false,false,1,1,1,1,310
Koha-Community/Koha,2df965f4ead8719892400aacbeac1d8391250557,Andrew Moore,2008-04-10 19:49:39 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetLateOrders

I decided to not make chagnes the the query that's executed on databases other than MySQL as I have no good way to test that.
This change provides no functinality change and requires no documentation change.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,1382
bywatersolutions/bws-package,2df965f4ead8719892400aacbeac1d8391250557,Andrew Moore,2008-04-10 19:49:39 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetLateOrders

I decided to not make chagnes the the query that's executed on databases other than MySQL as I have no good way to test that.
This change provides no functinality change and requires no documentation change.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,1382
colinsc/koha,2df965f4ead8719892400aacbeac1d8391250557,Andrew Moore,2008-04-10 19:49:39 UTC,"bug 1953: removing possible SQL injections from C4::Acquisition::GetLateOrders

I decided to not make chagnes the the query that's executed on databases other than MySQL as I have no good way to test that.
This change provides no functinality change and requires no documentation change.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,false,true,true,false,false,false,false,1,1,1,1,1382
unxs0/unxsVZ,c405c385ed29851ca70603586c3a5cb0e91d2df9,Gary,2010-03-22 21:58:06 UTC,"unxsVZ tweaking search SQL injection paths. Fixing tClient and tAuthorize minor issues. Added some comments
and a clean exit to Hugo's nice perl script.
",true,false,false,false,false,true,false,false,5,5,1,1,245
Cacti/cacti,83cc93132f624ae281d1ecdd9e94c667a25ea773,Tony Roman,2011-09-26 00:09:25 UTC,"Fix SQL injection issue in login form

git-svn-id: 1c0139d5a254bbfdc7488bad8ff35377293b87b3@6807 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,2,2,1,1,18761
bcit-ci/CodeIgniter,0e857631f5c6f38c5715450ea3f6ff514ac65b2c,kenjis,2011-09-01 23:41:17 UTC,"fixes potential SQL injection vector in Active Record offset()
",true,false,false,false,false,false,false,false,1,1,1,1,11389
bcit-ci/CodeIgniter,7b5e924f10273af9bfb80ad251ea354a2141e95a,Phil Sturgeon,2011-09-03 17:11:53 UTC,"Merge pull request #370 from kenjis/ar_offset

fixes potential SQL injection vector in Active Record offset()",true,true,false,false,false,false,false,false,1,1,1,1,3879
zaproxy/zap-extensions,046bb1b4c2eb5b0cdcaff44825f5d6c7d54c048e,colm.p.oflaherty@gmail.com,2012-10-02 20:23:01 UTC,"Deploy SQL Injection, and keep targets in alphabetical order.",false,false,false,false,false,false,false,false,1,1,0,0,1570
textpattern/textpattern,34d85f63968dd62c9972d24ba7d72b497ac8a668,Jukka Svahn,2012-10-12 12:49:48 UTC,"Use UTF-8 as the character set in the config template.

Accidentally ending up using different character set is
dangerous. Would potentially allow SQL injections, even
when values are properly escaped.

git-svn-id: 91c40ec25a9b4cdbd1187431dc3c881881b299e6@4242 2fea6a4d-a838-0410-917b-93a53c48e9d2
",false,false,false,false,false,false,true,false,1,1,1,1,20
FreshRSS/FreshRSS,8f1bad60d0b7bd0d0a05bcdcf3c6834e39c0c6eb,Kevin Papst,2018-05-24 19:53:47 UTC,"Add Fever API and user documentation (#1836)

* added fever api and documentation

* spaces to tabs

* fixed code format

* added links

* added utf8 to header

* removed XML support

* removed before check, as we have to convert it afterwards

* added sandboxed setting (currently disabled)
added support for extensions using entry_before_display

* listFeedsOrderUpdate LIMIT

https://github.com/FreshRSS/FreshRSS/pull/1836/files#r175287881

* removed custom sql by using FreshRSS_FeedDAO::listFeedsOrderUpdate()

* fixed mark all as read

* replaced custom sql for getUnread() and getStarred() with dao functions

* removed sanitization functions

* Rework fever login

* Fix config bug

Plus documentation

* Fix array syntax

For compatibility with PHP 5.3

* Disable cookies and session for API

* Fix currentUser

* added response header and error log

* adjusted phpdoc to match new authentication

* Mechanism to delete old keys

* replace PHP_INT_MAX with zero to disable limit

* replace method_exists with check for explicit methods

* removed Press support and smaller refactoring + updated docu

* Rewrite bindParamArray

Avoid one of the SQL injection risks

* Docs and readme

* Fix API link

* Simplify reverse key check

Using userConfig
",true,true,true,true,false,false,false,false,14,14,8,8,69181
tgstation/tgstation,45097c959790c74a79b615ccf3253f8eb75631c5,Aranclanos,2014-08-08 07:39:00 UTC,"Merge pull request #4375 from MrStonedOne/fastestmergeever

SQL injection fix.",true,true,false,false,false,false,false,false,1,1,0,0,2737
tgstation/-tg-station,45097c959790c74a79b615ccf3253f8eb75631c5,Aranclanos,2014-08-08 07:39:00 UTC,"Merge pull request #4375 from MrStonedOne/fastestmergeever

SQL injection fix.",true,true,false,false,false,false,false,false,1,1,0,0,2737
tgstation/-tg-station,c00a76beab17afad67261024b5901d85551abd4a,MrStonedOne,2014-08-08 07:15:33 UTC,"SQL injection fix.
Google sanitizing sql input. almost every single article explains why you should never attempt to roll your own function to do this.
",true,false,false,false,false,false,false,false,1,1,0,0,110422
tgstation/tgstation,c00a76beab17afad67261024b5901d85551abd4a,MrStonedOne,2014-08-08 07:15:33 UTC,"SQL injection fix.
Google sanitizing sql input. almost every single article explains why you should never attempt to roll your own function to do this.
",true,false,false,false,false,false,false,false,1,1,0,0,110422
zaproxy/zap-extensions,87543b8f9771fd070c27ffc39e8489170cf59f07,70pointer@gmail.com,2014-08-01 14:11:33 UTC,"Implement AbstractAppParamPlugin in the Oracle SQL Injection scanner, so that it can scan XML parameters in the POST body.  Note: this interface was not available when this scanner was written.",false,true,true,false,false,false,false,false,4,4,3,3,3868
CompassionCH/compassion-switzerland,668d7b9f7b5946fee4add6e2abce2b40e652ef7a,Theyiot,2019-06-17 10:21:27 UTC,"CO-2615 Provide defense mechanism against SQL injection (#897)

* CO-2615 Provide defence mechanism against SQL injection

* CO-2615 Remove unused import

* CO-2615 Fix two minor flake8 errors
",true,false,true,true,false,false,false,false,1,1,1,1,14183
MariaDB/server,b8a19c228ce93ff5e57d7d122d8d5a74236670f6,unknown,2007-11-26 16:09:37 UTC,"Bug#29592 SQL Injection issue

Remove the mysql_odbc_escape_string() function. The function
has multi-byte character escaping issues, doesn't honor the
NO_BACKSLASH_ESCAPES mode and is not used anymore by the
Connector/ODBC as of 3.51.17.


include/mysql.h:
  Remove mysql_odbc_escape_string() prototype.
include/mysql_h.ic:
  Update abi check file, mostly line changes and mysql_odbc_escape_string
  removal.
libmysql/libmysql.c:
  Remove mysql_odbc_escape_string() body.
libmysql/libmysql.def:
  Remove mysql_odbc_escape_string()
libmysqld/libmysqld.def:
  Remove mysql_odbc_escape_string()
",true,false,false,false,false,false,false,false,5,5,1,1,
Cacti/cacti,82b94f84dbb4aa6c48b253ea5ebfdc472490a4f9,Larry Adams,2007-11-01 01:33:19 UTC,"-security#0001059: SQL injection 

git-svn-id: 1c0139d5a254bbfdc7488bad8ff35377293b87b3@4289 860744bd-22fc-0310-8c96-e9fe5004b5ca
",false,false,false,false,false,false,false,false,2,2,1,1,57
facebook/mysql-5.6,cdad8669dfcc82515a83e188627d58f702a54aa5,davi@mysql.com/endora.local,2007-11-26 16:09:37 UTC,"Bug#29592 SQL Injection issue

Remove the mysql_odbc_escape_string() function. The function
has multi-byte character escaping issues, doesn't honor the
NO_BACKSLASH_ESCAPES mode and is not used anymore by the
Connector/ODBC as of 3.51.17.
",true,false,false,false,false,false,false,false,5,5,1,1,10
MariaDB/server,cdad8669dfcc82515a83e188627d58f702a54aa5,davi@mysql.com/endora.local,2007-11-26 16:09:37 UTC,"Bug#29592 SQL Injection issue

Remove the mysql_odbc_escape_string() function. The function
has multi-byte character escaping issues, doesn't honor the
NO_BACKSLASH_ESCAPES mode and is not used anymore by the
Connector/ODBC as of 3.51.17.
",true,false,false,false,false,false,false,false,5,5,1,1,10
GoogleCloudPlatform/gcp-token-broker,c5608ec16a579061dadd59a1b5b15a89b0eaffb2,Julien Phalip,2020-01-23 02:13:02 UTC,"Use prepared statements in JDBC backend to protect against SQL injections
",false,false,false,false,false,false,false,false,1,1,1,1,109
zaproxy/zap-extensions,7390feff5251a94e1e7d5f26cda7af1ef8457e52,colm.p.oflaherty@gmail.com,2012-08-30 00:06:08 UTC,"First cut. Does Error based, Boolean Based, and Union Based SQL Injection testing.  Stacked and Time based methods are left to RDBMS specific implementations such as the MySQL implementation ",true,false,false,false,false,false,false,false,1,1,1,1,33333
zaproxy/zap-extensions,9fb668d052ba9416a4f14dcd6df4c1fb37e36bf9,colm.p.oflaherty@gmail.com,2012-08-30 00:08:35 UTC,"First cut. Does Time based methods using MySQL-specific techniques / functions. Stacked based checking is not yet implemented, but should be straightfoward.  Error based, Boolean Based, and Union Based SQL Injection testing is done via the generic SQLInjection extension, since these techniques do not require RDBMS-specific functionality or syntax.    ",true,false,false,false,false,false,false,false,1,1,1,1,2
rails/rails,99e9faeda8f039d34e9eeab319e8adc13cb9bc86,Jamis Buck,2006-07-27 18:29:49 UTC,"Patch sql injection vulnerability when using integer or float columns.


git-svn-id: afc9fed30c1a09d8801d1e4fbe6e01c29c67d11f@4626 5ecf4fe2-1ee6-0310-87b1-e25e094e27de
",true,false,false,false,false,false,false,false,3,2,2,1,178
salilab/saliweb,a1f5326db9e21abe934e5c47d9cadcd492430148,Ben Webb,2009-10-14 18:28:13 UTC,"- Use SQL placeholders to avoid SQL injection attack.
- Handle the case where no matching row is found in the user database.

",true,false,false,false,false,false,false,false,1,1,1,1,72
GridProtectionAlliance/openPDC,1be9b24ac02ab8766bdc3f83ef83655761a1d0d4,mthakkar,2009-10-06 17:57:15 UTC,"Synchrophasor: openPDCManager - Completed node filtering logic and also modified data layer to use prepared statements to avoid SQL injection.

git-tfs-id: [https://tfs.codeplex.com/tfs/TFS07]$/openpdc/Synchrophasor/Current Version;C31204
",false,false,false,false,false,false,false,false,15,15,13,13,2900
JetBrains/intellij-community,156c1a368c7b49ff955e29dd378fdf5d6443855d,Sergey Karashevich,2017-05-02 18:12:00 UTC,"[cfml] added SQL injection support in CFML language; optimize splitted injection places finder (find head from one attempt, do not loose CfmlLeafPsiElement); fix find common parent for one element; do not use DefaultInjector (in CfmlLanguageInjectionSupport) to avoid interference of MultiHostInjectors; extend CFML SQL injection tests coverage
",true,true,true,true,false,false,false,true,1,1,1,1,6084
GridProtectionAlliance/PQDashboard,eef4339f38fa3c92b47712dae5352baebc616cb1,JHYDER,2017-05-02 22:07:31 UTC,"Refined SQL injection in DataHub for Overview
",false,false,false,false,false,false,false,false,4,4,2,2,1478
GridProtectionAlliance/PQDashboard,8510c45931ed30db9ffe081a32b9ec2bde7182a3,JHYDER,2017-05-01 21:28:32 UTC,"Added protection against SQL injections in DataHub for Dashboard Overview
",false,true,false,false,false,false,false,false,4,4,3,3,4326
vanilla/vanilla,d1cc7916d504e488f0d502d4a4cc61e92a0e7cb0,Lincoln Russell,2018-05-22 14:23:04 UTC,"Merge pull request #245 from vanilla/fix/utility-sort

Fix SQL injection in UtilityController::sort",true,true,false,false,false,false,false,false,1,1,1,1,1038
vanilla/vanilla,a50c26d0b9ae111a63221537df0b88c86884571d,Lincoln Russell,2018-05-21 21:04:51 UTC,"Merge pull request #242 from vanilla/fix/delete-invitation

Fix SQL injection in ProfileController::deleteInvitation",true,true,false,false,false,false,false,false,1,1,1,1,5851
vanilla/vanilla,ed150a2dd61b7a663c04787c3ca7d1aa506dfb25,Lincoln Russell,2018-05-26 19:36:35 UTC,"Merge pull request #260 from vanilla/fix/dba-validate-tables

Fix SQL injection in /dba/fixurlcodes and /dba/fixinsertuserid",true,true,false,false,false,false,false,false,2,2,2,2,3094
subes/invesdwin-nowicket,0ea1e774112ef31bb26e7cdc2652242eb727e9ca,subes,2018-05-09 22:58:24 UTC,"remove sql injection validator and clean up documentation, sql injection
should be handled in data layer, not presentation layer anyway",false,false,true,false,false,false,false,false,11,11,5,5,472
alchemy-fr/Phraseanet,40b894367aab24a4df4acd49f2565f6f8a826bd3,Benoît Burnichon,2015-03-06 16:56:06 UTC,"Fix caption_field class

Possible SQL injection
Proper looping when renaming big bunch of metadata.

/!\ Big refactoring in progress
",true,false,true,true,false,false,false,false,1,1,1,1,16
alchemy-fr/Phraseanet,932ab09dc01cb626f8a7ab1a19e5f2045aa067e1,Benoît Burnichon,2015-03-06 10:48:48 UTC,"Remove some possible SQL injections by using IN (:parameter) prepared statements
",false,false,false,false,false,false,false,false,1,1,1,1,29
alchemy-fr/Phraseanet,82815e0fb5029bbff20cb233fb00f02525f805a9,Benoît Burnichon,2015-03-06 16:39:20 UTC,"Possible SQL injection in base box class
",false,false,false,false,false,false,false,false,1,1,1,1,38
alchemy-fr/Phraseanet,3205d0e1b6fc0e530f034c1ee7c00f28800a4dbd,Benoît Burnichon,2015-03-06 17:42:38 UTC,"Fix databox for SQL injections.
",true,false,false,false,false,false,false,false,1,1,1,1,46
alchemy-fr/Phraseanet,51a3ff25b57a7fedc4e4ad0b24247e8a7157de1a,Benoît Burnichon,2015-03-06 10:19:31 UTC,"Change string to array parameter to prevent SQL injections
",false,true,false,false,false,false,false,false,1,1,1,1,30
alchemy-fr/Phraseanet,43bc4dd9bb5942a8d9d0da7d44d58603acd4b573,Benoît Burnichon,2015-03-09 21:37:37 UTC,"More SQL Injection prevention.
",false,false,false,false,false,false,false,false,5,5,5,5,43
terraform-providers/terraform-provider-aws,eacece22d6b9d50a5af695128aedd6e8dbfdb733,Radek Simko,2017-05-19 15:59:15 UTC,"provider/aws: Allow updating tuples in WAF SQLInjectionMatchSet + no tuples (#14667)

* provider/aws: Allow updating tuples in WAF SQL Injection Match Set

* provider/aws: Allow WAF SQL Injection match set with no tuples
",false,true,false,false,false,false,false,false,2,1,2,1,118
vulhub/vulhub,2fd383bb9debfc3af20875eb466f8008e0a17fe9,phithon,2017-05-23 15:21:38 UTC,"Merge pull request #3 from stayliv3/master

add mybatis  orderby sql injection",false,true,false,false,false,false,false,false,17,17,2,2,
vladmihalcea/high-performance-java-persistence,9bd2a669905393b504a7d61967afed3d38e60be2,Vlad Mihalcea,2017-05-31 09:44:10 UTC,"Add tests to check if Unicode SQL injection is possible
",false,true,false,false,false,false,false,false,4,0,4,0,1102
tablexi/nucore-open,be981cc5c96f4707f9d19b92a83a4b5d93324d3a,Jason Hanggi,2017-05-11 19:25:48 UTC,"[#136246] Fix order detail sorting for accessories in oracle (#1012)

* [#136081] Fix order detail sorting for accessories in oracle

In Oracle, nulls are ordered differently than they are in MySQL. This
was causing accessories to appear before their parent in the order show
view.

| Order | Oracle         | MySQL       |
| ASC   | NULLs last  | NULLs first |
| DESC | NULLs first | NULLs last |

Reference: http://www.sqlines.com/oracle-to-mysql/null_order_by

If we ever do Postgres support we might need to revisit this.

* Prevent SQL injection warnings (though no vulnerability should exist)

The field should always be coming from code, not user input, but better safe than sorry.",true,false,true,false,false,false,false,false,4,4,4,4,50
FH-Complete/FHC-Core,e2b75bcca9c93a8ba665eb7b8ff65a26a51089c0,alex,2019-12-13 15:37:33 UTC,"- system/Variablenname_model getDefaults: replaced string concatenation of variable names in query by ci parameter replacement to prevent SQL injections
",false,false,true,true,false,false,false,false,1,1,1,1,1
IESMonterroso/intranet,678190bee1dfd64b54a2b0e88abfd009e78adce8,LockedByte,2019-12-18 16:07:29 UTC,"SQL Injection in $_GET['dni_profe'] - ""config/cargos.php""

Filters for SQL Injection in $_GET['dni_profe']",false,false,false,false,false,false,false,false,1,1,1,1,272
IESMonterroso/intranet,cb5b547df6f7fa655e673fbfe80cf5775cee9d95,Rubén López,2019-12-22 11:56:30 UTC,"Merge pull request #46 from lockedbyte/patch-12

SQL Injection in $_GET['dni_profe'] - ""config/cargos.php""",false,true,false,false,false,false,false,false,1,1,1,1,35
IESMonterroso/intranet,3bd9c4d9392b075da70d2759d0ca7006ad08dc1a,rubenlh91,2019-12-22 11:20:35 UTC,"Corrección vulnerabilidades SQL injection en login
",false,false,false,false,false,false,false,false,7,7,7,7,29
bestpractical/rt,90041d856eb8709ff92f4a0222fde961263b08ac,Alex Vandiver,2011-03-28 22:33:47 UTC,"Restrict PrimaryGroupBy to only the explicit options that we offer

Not limiting the PrimaryGroupBy allows:

 * SQL injection; the ""Group By"" clause is not escaped when inserted
   into the generated SQL.  Use of DBI's prepared statements disallows
   the attacker from running more than one SQL statement, thus
   precluding destructive queries such as ""DELETE FROM"" or ""DROP TABLE"",
   but complex data extraction is still feasable.

 * Information leakage; we blindly allow grouping even by valid columns
   such as 'Subject', which allows an attacker to see the subjects of
   tickets they do not otherwise have permission to view.
   $UseSQLForACLChecks protects against this by pre-limiting the
   resultset to tickets the current user has access to.
",false,false,false,false,false,false,false,false,3,3,0,0,190
bestpractical/rt,97127fb9551fb3b71243a203b904e31322f64e61,Alex Vandiver,2011-03-28 22:33:47 UTC,"Restrict PrimaryGroupBy to only the explicit options that we offer

Not limiting the PrimaryGroupBy allows:

 * SQL injection; the ""Group By"" clause is not escaped when inserted
   into the generated SQL.  Use of DBI's prepared statements disallows
   the attacker from running more than one SQL statement, thus
   precluding destructive queries such as ""DELETE FROM"" or ""DROP TABLE"",
   but complex data extraction is still feasable.

 * Information leakage; we blindly allow grouping even by valid columns
   such as 'Subject', which allows an attacker to see the subjects of
   tickets they do not otherwise have permission to view.
   $UseSQLForACLChecks protects against this by pre-limiting the
   resultset to tickets the current user has access to.
",false,false,false,false,false,false,false,false,3,3,0,0,190
bestpractical/rt,b6d14dc41fccb5ed1874771e6ce5b7150bec2891,Thomas Sibley,2011-03-28 23:27:48 UTC,"Test that values for IS and IS NOT are forced to NULL

This is a SQL injection vulnerability since DBIx::SearchBuilder doesn't
quote values when the IS and IS NOT operators are used.  Our TicketSQL
parsing doesn't enforce NULL either, so arbitrary strings make it into
the generated SQL.  At best this results in broken queries; at worst,
attacks allowing complex data extraction.  The use of DBI's prepared
statements disallows an attacker from running more than one SQL
statement, thus precluding destructive queries such as ""DELETE FROM"" or
""DROP TABLE"".

Right now the added tests fail, but a fix is forthcoming.
",true,true,false,false,false,false,true,false,1,1,0,0,14673
bestpractical/rt,dc5c15d849c1ef06cd7fd9341147e0b2abae222f,Thomas Sibley,2011-03-28 23:27:48 UTC,"Test that values for IS and IS NOT are forced to NULL

This is a SQL injection vulnerability since DBIx::SearchBuilder doesn't
quote values when the IS and IS NOT operators are used.  Our TicketSQL
parsing doesn't enforce NULL either, so arbitrary strings make it into
the generated SQL.  At best this results in broken queries; at worst,
attacks allowing complex data extraction.  The use of DBI's prepared
statements disallows an attacker from running more than one SQL
statement, thus precluding destructive queries such as ""DELETE FROM"" or
""DROP TABLE"".

Right now the added tests fail, but a fix is forthcoming.
",true,true,false,false,false,false,true,false,1,1,0,0,14673
catmaid/CATMAID,097c147b2fe6d8e8f086de09dc8118be5a95cf6f,Mark Longair,2011-03-19 16:16:42 UTC,"Fix another potential SQL injection attack
",true,false,false,false,false,false,false,false,1,1,1,1,49
catmaid/CATMAID,ef828861c98f941bff7af4f5de13fe2ff1b3a77e,Mark Longair,2011-03-22 11:11:01 UTC,"Fix an SQL injection attack
",true,false,false,false,false,false,false,false,1,1,1,1,9
catmaid/CATMAID,3ed43b9b150e8adbc86051cd37ebe238d0d9e449,Mark Longair,2011-03-22 15:33:42 UTC,"Fix a possible SQL injection attack
",true,false,false,false,false,false,false,false,1,1,1,1,0
catmaid/CATMAID,7e27e936db51ac76486835f60a1aa9c5b9f0913d,Mark Longair,2011-03-22 11:01:31 UTC,"Fix an SQL injection attack
",true,false,false,false,false,false,false,false,1,1,1,1,29823
catmaid/CATMAID,6a849838e7cac60d66aa47fb716ec4f0905c4837,Mark Longair,2011-03-22 15:33:57 UTC,"Fix another SQL injection attack
",true,false,false,false,false,false,false,false,1,1,1,1,0
catmaid/CATMAID,10a9fa7352fad54ecabb6f7df3bf14a815976e84,Mark Longair,2011-03-22 15:33:17 UTC,"Fix a possible SQL injection attack
",true,false,false,false,false,false,false,false,1,1,1,1,2
bestpractical/rt,78830a59954371e5c8d7d229d0171915b2b39f75,Alex Vandiver,2011-03-30 20:53:30 UTC,"Lock down possible OCFV columns to the two that we use

The only codepath which uses the CF.{foo}.Content form is
_CustomFieldLimit itself, which calls into itself for IP address ranges.
However, this provides a SQL injection, since it does not check the
column given, nor does SearchBuilder escape it.  Limit it to the only
two valid column types.
",false,false,false,false,false,false,false,false,1,1,1,1,1465
bestpractical/rt,007046d1c5bc9392cccdfa1ebb8e968e1d674b80,Alex Vandiver,2011-03-30 20:53:30 UTC,"Lock down possible OCFV columns to the two that we use

The only codepath which uses the CF.{foo}.Content form is
_CustomFieldLimit itself, which calls into itself for IP address ranges.
However, this provides a SQL injection, since it does not check the
column given, nor does SearchBuilder escape it.  Limit it to the only
two valid column types.
",false,false,false,false,false,false,false,false,1,1,1,1,1465
bestpractical/rt,7824737c6e3a43f79f374f3f310c77ba36421f0a,Thomas Sibley,2011-03-30 16:10:35 UTC,"Limit watcher subfields to a valid subset

Previously you could search on user fields which shouldn't be
accessible, such as Comments and Password.  Unfortunately we can't build
the valid list of fields from RT::User's accessible hashes since search
historically lets you limit on fields which aren't publically
accessible.

This also closes a SQL injection vulnerability which allowed you access
to the WHERE clause, potentially returning data not normally available.
The vulnerability exploited that everything after the first dot (.) in a
watcher TicketSQL clause was passed in to Limit as FIELD.

Like other TicketSQL methods, we die to throw an error on invalid
subfields.
",true,false,true,false,false,false,true,false,2,2,1,1,20
bestpractical/rt,e3646bc826680bb1b81ca00e581e4028368bae15,Thomas Sibley,2011-03-28 23:57:51 UTC,"Override Limit further to force values to NULL for IS and IS NOT

Values for IS and IS NOT aren't quoted by DBIx::SearchBuilder's Limit.
This leads to a SQL injection vulnerability when user provided values
are passed into Limit, such as through TicketSQL.  Forcing to NULL
closes this vulnerability and prevents accidental invalid SQL across RT.
",true,false,false,false,false,false,false,false,1,1,1,1,30
bestpractical/rt,104271918a70389a2f1f824451083555666fb79f,Thomas Sibley,2011-03-30 16:10:35 UTC,"Limit watcher subfields to a valid subset

Previously you could search on user fields which shouldn't be
accessible, such as Comments and Password.  Unfortunately we can't build
the valid list of fields from RT::User's accessible hashes since search
historically lets you limit on fields which aren't publically
accessible.

This also closes a SQL injection vulnerability which allowed you access
to the WHERE clause, potentially returning data not normally available.
The vulnerability exploited that everything after the first dot (.) in a
watcher TicketSQL clause was passed in to Limit as FIELD.

Like other TicketSQL methods, we die to throw an error on invalid
subfields.
",true,false,true,false,false,false,true,false,2,2,1,1,20
bestpractical/rt,a9ea4c1be2206e95605e784d12f3ebed3abe0cbf,Thomas Sibley,2011-03-28 23:57:51 UTC,"Override Limit further to force values to NULL for IS and IS NOT

Values for IS and IS NOT aren't quoted by DBIx::SearchBuilder's Limit.
This leads to a SQL injection vulnerability when user provided values
are passed into Limit, such as through TicketSQL.  Forcing to NULL
closes this vulnerability and prevents accidental invalid SQL across RT.
",true,false,false,false,false,false,false,false,1,1,1,1,30
catmaid/CATMAID,ea8e1a2de2eb5bcb664b2214b33dc15f7e4959e7,Mark Longair,2011-03-22 15:31:12 UTC,"Fix possible SQL injection attacks in connector.list.php and treenode.table.list.php
",true,false,false,false,false,false,false,false,2,2,2,2,0
bestpractical/rt,a19c0edd65fdb8d7181c18a14fded91fd2baeef7,Alex Vandiver,2011-03-29 14:52:56 UTC,"Disallow SQL injection in FIELD argument to OrderBy

A number of locations blindly pass OrderBy clauses from the user into
the FIELD of OrderByCols, which provides no escaping or sanity checking.
As a short-term fix, limit the FIELD to /^[a-zA-Z0-9_]*$/ at the
RT::SearchBuilder level.

There is one place which injects logic into the ORderByCols FIELD;
namely, the ""PAW sort"" feature, which sorts the current user's tickets,
followed by unowned tickets, followed by all other tickets.  Allow this
codepath by adding a FUNCTION field to OrderByCols which steps around
the limit mentioned above.  This particular use is safe because no
user-specified data is used in the function which is built.

The severity of this SQL injection is limited by the ability to create a
single dangerous statement by appending to a ""SELECT ... FROM ... ORDER
BY main."" statement.  The lack of parens around the SELECT statement
precludes a UNION attack, and the use of DBI prepared statements
disallows the attacker from running more than one SQL statement, thus
precluding destructive queries such as ""DELETE FROM"" or ""DROP TABLE"".
",true,true,false,false,false,false,true,false,2,2,2,2,979
bestpractical/rt,75d1edd176cfa33db49421de2375c4abfac80559,Alex Vandiver,2011-03-29 14:52:56 UTC,"Disallow SQL injection in FIELD argument to OrderBy

A number of locations blindly pass OrderBy clauses from the user into
the FIELD of OrderByCols, which provides no escaping or sanity checking.
As a short-term fix, limit the FIELD to /^[a-zA-Z0-9_]*$/ at the
RT::SearchBuilder level.

There is one place which injects logic into the ORderByCols FIELD;
namely, the ""PAW sort"" feature, which sorts the current user's tickets,
followed by unowned tickets, followed by all other tickets.  Allow this
codepath by adding a FUNCTION field to OrderByCols which steps around
the limit mentioned above.  This particular use is safe because no
user-specified data is used in the function which is built.

The severity of this SQL injection is limited by the ability to create a
single dangerous statement by appending to a ""SELECT ... FROM ... ORDER
BY main."" statement.  The lack of parens around the SELECT statement
precludes a UNION attack, and the use of DBI prepared statements
disallows the attacker from running more than one SQL statement, thus
precluding destructive queries such as ""DELETE FROM"" or ""DROP TABLE"".
",true,true,false,false,false,false,true,false,2,2,2,2,979
smrealms/smr,64047bd7cb001fb3570ab8e6eed18478a37c18c8,mkunze,2011-07-25 13:51:18 UTC,"sql injection fix
",true,false,false,false,false,false,false,false,1,1,0,0,0
urweb/debian-urweb,eb38a363003afe9571a0e88a6b88219825e08267,Adam Chlipala,2011-07-08 17:33:26 UTC,"Fix manual syntax for SQL injection
",false,false,false,false,false,false,false,false,1,1,0,0,3131
urweb/debian-urweb,da1f8066caeac8c68de52d36da831762eae97ccd,Adam Chlipala,2011-07-08 17:33:26 UTC,"Fix manual syntax for SQL injection
",false,false,false,false,false,false,false,false,1,1,0,0,3131
rails/rails,6dc749596c328c44c80f898d5fa860fff6cab783,Pete Campbell,2011-07-28 13:44:51 UTC,"Explicitly included hashes in sentence regarding SQL-injection-safe forms
",false,false,false,false,false,false,false,false,1,1,1,1,
rails/rails,3c3f8087647a15a5e88dd18a45d41358eacce142,Pete Campbell,2011-07-28 13:44:51 UTC,"Explicitly included hashes in sentence regarding SQL-injection-safe forms
",false,false,false,false,false,false,false,false,1,1,1,1,
nikrou/phyxo,56c3d59a7ca720917dc6d7873b485d52a682ebeb,plg,2010-09-13 20:52:47 UTC,"merge r6905 from branch 2.1 to trunk

bug 1849 fixed: protect $_GET keys against SQL injections before parsing URL.



git-svn-id: 07d450c9015c98804e48b520a2aeaa7bff74be0c@6906 68402e56-0260-453c-a942-63ccdbb3a9ee
",true,true,false,false,false,false,false,false,1,1,1,1,131
moodle/moodle,20a79b431683fbe7c0b18e566b90c79db80b7397,Petr Skoda,2010-09-04 13:02:49 UTC,"MDL-24079 fixed potential SQL injection in tablelib
",true,false,false,false,false,false,false,false,1,1,1,1,12
moodle/moodle,4287c1c2a043f3f0447730ced74e0ddb1b6004eb,Petr Skoda,2010-09-02 12:16:24 UTC,"MDL-24058 fixed sql injection, addslashes must not be used any more
",true,false,false,false,false,false,false,false,1,1,1,1,111
iomad/iomad,20a79b431683fbe7c0b18e566b90c79db80b7397,Petr Skoda,2010-09-04 13:02:49 UTC,"MDL-24079 fixed potential SQL injection in tablelib
",true,false,false,false,false,false,false,false,1,1,1,1,12
iomad/iomad,4287c1c2a043f3f0447730ced74e0ddb1b6004eb,Petr Skoda,2010-09-02 12:16:24 UTC,"MDL-24058 fixed sql injection, addslashes must not be used any more
",true,false,false,false,false,false,false,false,1,1,1,1,111
projectestac/agora_moodle2,4287c1c2a043f3f0447730ced74e0ddb1b6004eb,Petr Skoda,2010-09-02 12:16:24 UTC,"MDL-24058 fixed sql injection, addslashes must not be used any more
",true,false,false,false,false,false,false,false,1,1,1,1,111
projectestac/agora_moodle2,20a79b431683fbe7c0b18e566b90c79db80b7397,Petr Skoda,2010-09-04 13:02:49 UTC,"MDL-24079 fixed potential SQL injection in tablelib
",true,false,false,false,false,false,false,false,1,1,1,1,12
UNINETT/nav,0c67ce5ef8f2a5a86c6cea848815b19358636218,Morten Brekkevold,2010-09-21 09:28:15 UTC,"(handler): wrap long SQL statements and use prepared statements
(for reduced glaring-SQL-injection)
",false,false,false,false,false,false,false,false,1,1,1,1,8
iomad/iomad,5642a8e51586df7a129b14904ea4f558fd704e9d,Aaron Barnes,2010-09-08 02:32:43 UTC,"MDL-24081 completion Fixing sql injections and use of sql_ilike()
",true,false,false,false,false,false,false,false,3,3,3,3,17198
projectestac/agora_moodle2,5642a8e51586df7a129b14904ea4f558fd704e9d,Aaron Barnes,2010-09-08 02:32:43 UTC,"MDL-24081 completion Fixing sql injections and use of sql_ilike()
",true,false,false,false,false,false,false,false,3,3,3,3,17198
moodle/moodle,5642a8e51586df7a129b14904ea4f558fd704e9d,Aaron Barnes,2010-09-08 02:32:43 UTC,"MDL-24081 completion Fixing sql injections and use of sql_ilike()
",true,false,false,false,false,false,false,false,3,3,3,3,17198
uclouvain/osis,66d3662986469f543f95324aaf2868465de2bd24,Bastien Mottiaux,2019-02-01 08:28:33 UTC,"prevent query from sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,950
uclouvain/OSIS-Louvain,66d3662986469f543f95324aaf2868465de2bd24,Bastien Mottiaux,2019-02-01 08:28:33 UTC,"prevent query from sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,950
wielebenwir/commons-booking,c628b5e4e1947e22edb7c8ce9a000cd8d737af20,Markus Voge,2019-05-04 16:28:49 UTC,"Reomve $wpdb->prepare() where not needed, fixes #176. Add some SQL injection protection.
",false,false,false,false,false,false,false,false,1,1,1,1,333738
Cacti/cacti,4e4dd6784adfc07b6011da999809d86a06f0f4e5,cigamit,2015-06-17 12:05:53 UTC,"improve the processing of selected_items

improve the processing of selected_items to guard against sql injections
",false,false,true,true,false,false,false,false,27,27,27,27,74
FriendsOfCake/search,c81070893fc13e68781298ae9c9713059f96a8c9,Jose Lorenzo Rodriguez,2015-06-30 15:31:35 UTC,"Adding a param filtering method to avoid accidental SQL injections
",false,true,false,false,false,false,false,false,3,2,2,1,174
Cacti/cacti,d4275efd8973ce2ec1d0cf26a9a3124d49e84370,Tony Roman,2015-06-08 16:04:45 UTC,"bug#0002572: SQL injection in graph templates
",true,false,false,false,false,false,false,false,2,2,1,1,11
Koha-Community/Koha,57b01fb655955ac630d6018d03f4d134e7e3e25a,Chris Cormack,2015-06-18 20:35:07 UTC,"Bug 14412: SQL injection possible

There is a SQL Injection vulnerability in the
/cgi-bin/koha/opac-tags_subject.pl script.

By manipulating the variable 'number', the database can be accessed
via time-based blind injections.

The following string serves as an example:

/cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)

To exploit the vulnerability, no authentication is needed

To test
1/ Turn on mysql query logging
2/ Hit /cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
3/ Check the logs notice something like
  SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1
  PROCEDURE ANALYSE
  (EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
4/ Apply patch
5/ Hit the url again
6/ Notice the log now only has
   SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@koha-community.org>
Signed-off-by: Katrin Fischer <eb5a7ed6178886f9a3c70794f3de5f89db9dcb5f@bsz-bw.de>
Confirmed the problem and the fix for it.
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,false,true,false,false,false,true,false,1,1,1,1,92839
LMSCloud/Koha-LMSCloud,57b01fb655955ac630d6018d03f4d134e7e3e25a,Chris Cormack,2015-06-18 20:35:07 UTC,"Bug 14412: SQL injection possible

There is a SQL Injection vulnerability in the
/cgi-bin/koha/opac-tags_subject.pl script.

By manipulating the variable 'number', the database can be accessed
via time-based blind injections.

The following string serves as an example:

/cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)

To exploit the vulnerability, no authentication is needed

To test
1/ Turn on mysql query logging
2/ Hit /cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
3/ Check the logs notice something like
  SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1
  PROCEDURE ANALYSE
  (EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
4/ Apply patch
5/ Hit the url again
6/ Notice the log now only has
   SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@koha-community.org>
Signed-off-by: Katrin Fischer <eb5a7ed6178886f9a3c70794f3de5f89db9dcb5f@bsz-bw.de>
Confirmed the problem and the fix for it.
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,false,true,false,false,false,true,false,1,1,1,1,92839
Koha-Community/Koha,d8bccd612638c4728f561972daf7f70d49d263a5,Jonathan Druart,2015-06-22 08:56:26 UTC,"Bug 14426: Escape or use placeholders for sql parameters

Does this patch enough to prevent sql injection in borrowers_out.pl?

====================================================================
1. ""Criteria"" Parameter, Payload: ELT(1=1,'evil') / ELT(1=2,'evil')
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=2,'evil')""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=1,'evil')""
| nc testbox 9002

====================================================================
2. ""Filter"" Parameter, Payload: P_COM'+AND+'a'='a / P_COM'+AND+'a'='b
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='a""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='b""
| nc testbox 9002

====================================================================

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@theke.io>
",false,false,false,false,false,false,true,false,1,1,1,1,31
LMSCloud/Koha-LMSCloud,d8bccd612638c4728f561972daf7f70d49d263a5,Jonathan Druart,2015-06-22 08:56:26 UTC,"Bug 14426: Escape or use placeholders for sql parameters

Does this patch enough to prevent sql injection in borrowers_out.pl?

====================================================================
1. ""Criteria"" Parameter, Payload: ELT(1=1,'evil') / ELT(1=2,'evil')
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=2,'evil')""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=1,'evil')""
| nc testbox 9002

====================================================================
2. ""Filter"" Parameter, Payload: P_COM'+AND+'a'='a / P_COM'+AND+'a'='b
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='a""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='b""
| nc testbox 9002

====================================================================

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@theke.io>
",false,false,false,false,false,false,true,false,1,1,1,1,31
Cacti/cacti,de61c854f60714be997909e72a45f68e668fd4d3,Tony Roman,2015-06-08 15:53:03 UTC,"bug#0002571: SQL Injection and Location header injection from cdef id CVE-2015-4342
",true,false,false,false,false,false,false,false,3,3,2,2,92683
OCA/maintainer-tools,4cf5fae1ced237b9533c34e2c7705fffe02c1d5c,Pedro M. Baeza,2016-03-11 08:18:55 UTC,"Merge pull request #182 from vauxoo-dev/master-oca-no-sql-moy

[REF] CONTRIBUTING.md: Add no-sql-injection",false,true,true,false,false,false,false,false,1,1,0,0,29754
OCA/maintainer-tools,f2616656bb23b8242f3858c132c1812ff40fe0da,Moisés López,2016-03-11 03:08:51 UTC,"[REF] CONTRIBUTING.md: Add no-sql-injection
https://doc.odoo.com/contribute/15_guidelines/coding_guidelines_framework/#no-sql-injections-please
",false,false,true,false,false,false,false,false,1,1,0,0,161289
ChurchCRM/CRM,cd6a23e481e8716d5fda0de1256a67a4e814f7f2,crossan007,2016-03-23 02:06:42 UTC,Address SQL Injection concerns by @DawoudIO,false,false,false,false,false,false,false,false,1,1,1,1,23
Cacti/cacti,6dd52a43d478a71e23caec9243715716db0063bc,cigamit,2016-03-20 13:49:41 UTC,"remove developer debug message prevent sql injection
",false,true,false,false,false,false,false,false,1,1,1,1,0
Azure/azure-quickstart-templates,320e6c8a0cc1d6e00895a2ed28babab3b6fe4708,Siddhant Gosavi,2018-07-17 09:06:11 UTC,"added xxs attack and sql injection scenario
",false,true,false,false,false,false,false,false,73,73,0,0,7338
DanWin/hosting,5753ca2cee5dfbd07ff125d0d6889742a7ffc997,teikakki,2018-11-28 14:26:55 UTC,"Disabling emulated parameters

Emulated parameters can be vulnerable to SQL injection.
Take also a look here: https://stackoverflow.com/questions/134099/are-pdo-prepared-statements-sufficient-to-prevent-sql-injection",false,true,false,false,false,false,false,false,1,1,1,1,
BuddyForms/BuddyForms,dbbe9cc7e8f29e944cfc9cdf3f431583a89beeed,Guillermo Figueroa,2018-11-01 11:07:16 UTC,"Adding prepare to queries to avoid sql injection.
",false,true,false,false,false,false,false,false,2,2,2,2,24354
librenms/librenms,f334e90fa78988656d7da132d7d0639242a4794b,Tom Laermans,2011-05-04 14:00:02 UTC,"make mac search work, fix sql injection while we're at it

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@2242 61d68cd4-352d-0410-923a-c4978735b2b8
",true,false,false,false,false,false,false,false,1,1,1,1,6
xmacan/plugin_intropage,4e6f49a123e64603ca4c1378cc9f5ff4f57a2179,TheWitness,2021-01-18 22:16:45 UTC,"Fixing Issues #120 and #121

* Validation warnings and SQL Injection bug
* Iniial Poller poller run times out due to vary large tables causing crashes
* Add some more timeout settings
* Change the default to 1800 seconds
",true,true,false,false,false,false,false,false,2,2,2,2,154213
Admidio/admidio,5de297efeb3f3faf6b0a95ba4969054fec73d60a,Markus Faßbender,2012-09-12 19:42:23 UTC,"SQL-Injection bei Übergabe Boolean entfernt
",false,false,false,false,false,false,false,false,1,1,1,1,13769
BeWelcome/rox,17a5eaebc44a00978f9fbdf74831ef68907bff35,Christian Lerrahn,2012-09-29 01:52:31 UTC,"[1743] 		Thread visibility can now be set at group creation time
		Default for any group is now MembersOnly
[no ticket]	Fixed one case of possible SQL injection in groups
[no ticket]	Fixed warning on forum display
		(accessing non-existent property)
",false,false,false,false,false,false,false,false,4,4,4,4,963
thexerteproject/xerteonlinetoolkits,db7829eb43e71d2f705f0d57542194541977ec06,Dave Goodwin,2013-01-25 22:14:06 UTC,"remove pointless validation code from js - this does not protect from sql injection

git-svn-id: 17e300447cb4b020d428f438ce6532ae41087135@643 912cdd6b-5c7d-d5a7-a2ba-d0f0cdb91641
",false,false,false,false,false,false,false,false,1,1,1,1,601
thexerteproject/xerteonlinetoolkits,10cf5426e02691e0405a80532b1df06aae6c27a7,Dave Goodwin,2013-01-25 22:14:06 UTC,"remove pointless validation code from js - this does not protect from sql injection

git-svn-id: 17e300447cb4b020d428f438ce6532ae41087135@643 912cdd6b-5c7d-d5a7-a2ba-d0f0cdb91641
",false,false,false,false,false,false,false,false,1,1,1,1,601
thexerteproject/xerteonlinetoolkits,0c7991fa976f1219b83b4d89f9cb887c4e379de3,Dave Goodwin,2013-01-25 22:15:51 UTC,"remove pointless validation code from js - this does not protect from sql injection

git-svn-id: 17e300447cb4b020d428f438ce6532ae41087135@644 912cdd6b-5c7d-d5a7-a2ba-d0f0cdb91641
",false,false,false,false,false,false,false,false,1,1,1,1,1
thexerteproject/xerteonlinetoolkits,adf329baceb016300da73b70c10495fae6e76575,Dave Goodwin,2013-01-25 22:15:51 UTC,"remove pointless validation code from js - this does not protect from sql injection

git-svn-id: 17e300447cb4b020d428f438ce6532ae41087135@644 912cdd6b-5c7d-d5a7-a2ba-d0f0cdb91641
",false,false,false,false,false,false,false,false,1,1,1,1,1
zaproxy/zap-extensions,1b59f49383d4caf8b73524ad83affc835628794d,psiinon@gmail.com,2013-01-24 16:19:31 UTC," Issue 468: 	Upgrade SQL Injection rule to 'release'",false,true,false,false,false,false,false,false,3,3,1,1,1450
zaproxy/zap-extensions,62849b830a903f0b68b379b7a38706fa75c0ae6d,psiinon@gmail.com,2013-01-24 16:19:31 UTC," Issue 468: 	Upgrade SQL Injection rule to 'release'",false,true,false,false,false,false,false,false,5,3,3,1,1450
centreon/centreon,e1ff3c7f3bab47738794d577a8d434e03b72bc27,Julien Mathis,2009-02-23 09:39:46 UTC,"Add comments :

  - Credits to Julien CAYSSOL for SQL Injection bypass

git-svn-id: 25a0ac75d3222d69293b2750b310215dcabd6451@7584 6bcd3966-0018-0410-8128-fd23d134de7e
",false,false,true,false,false,false,false,false,1,1,1,1,5294
proftpd/proftpd,44e4b82d25e1b7aa174baefeb4882410bc8177e6,castaglia,2009-02-05 18:53:54 UTC,"
Bug#3173 - Encoding-dependent SQL injection vulnerability.
",true,false,false,false,false,false,false,false,3,3,2,2,2950
ManageIQ/manageiq,cc7b8585cf97351a6f7f0dbdbad88590e93b7198,d-m-u,2020-05-06 19:46:00 UTC,"fix the sql injection brakeman warning
",false,false,false,false,false,false,false,false,2,2,1,1,213
ManageIQ/manageiq,478901b51a537c08f1d3765759210aa1383de7f6,Jason Frey,2020-05-07 15:06:01 UTC,"Merge pull request #20132 from d-m-u/fixing_brakeman_sql_injection

fix sql injection brakeman warning in the aggregation mixin query",false,true,false,false,false,false,false,false,2,2,1,1,4014
Opmantek/open-audit,bb4944b4d4be94983ccdd6524acdb3d5915a105e,Mark Unwin,2020-05-10 21:57:21 UTC,"Fix - Correctly pass parameters to SQL query to avoid SQL injection.
",true,false,false,false,false,false,false,false,1,1,1,1,0
Opmantek/open-audit,b95d95b22000150f3a126e4eca606618f87a3bad,Mark Unwin,2020-05-10 21:57:38 UTC,"Fix - Correctly pass parameters to SQL query to avoid SQL injection.
",true,false,false,false,false,false,false,false,1,1,1,1,0
OpenSID/OpenSID,abc146e04c433c7c7540b27f66aacea81ac43b4e,Eddie Ridwan,2020-05-31 01:49:01 UTC,"#3122: Tutup celah sql injection di cetak surat. [security-fix]
",false,false,false,false,false,false,false,false,3,3,2,2,2728
nikrou/phyxo,726eca8929a92937adf32369b0713c2c3505a4c0,plg,2010-10-29 22:53:26 UTC,"merge r7489 from branch 2.1 to trunk

bug 1908 fixed: protect the uploaded photo filename against SQL injection.



git-svn-id: 07d450c9015c98804e48b520a2aeaa7bff74be0c@7490 68402e56-0260-453c-a942-63ccdbb3a9ee
",true,true,false,false,false,false,false,false,1,1,1,1,18
colinsc/koha,27bb768cadc6107d4004c723be2dfd7a5f07779b,Galen Charlton,2010-10-06 11:43:15 UTC,"bug 5086: fix setting claim date

Also removed a locus for SQL injection.

Signed-off-by: Galen Charlton <cbad4aa536c39e963e89269af6cd5196eac32048@gmail.com>
",true,false,false,false,false,false,false,false,1,1,1,1,30
bywatersolutions/ByWater-KOHA,27bb768cadc6107d4004c723be2dfd7a5f07779b,Galen Charlton,2010-10-06 11:43:15 UTC,"bug 5086: fix setting claim date

Also removed a locus for SQL injection.

Signed-off-by: Galen Charlton <cbad4aa536c39e963e89269af6cd5196eac32048@gmail.com>
",true,false,false,false,false,false,false,false,1,1,1,1,30
Koha-Community/Koha,27bb768cadc6107d4004c723be2dfd7a5f07779b,Galen Charlton,2010-10-06 11:43:15 UTC,"bug 5086: fix setting claim date

Also removed a locus for SQL injection.

Signed-off-by: Galen Charlton <cbad4aa536c39e963e89269af6cd5196eac32048@gmail.com>
",true,false,false,false,false,false,false,false,1,1,1,1,30
bywatersolutions/bws-package,27bb768cadc6107d4004c723be2dfd7a5f07779b,Galen Charlton,2010-10-06 11:43:15 UTC,"bug 5086: fix setting claim date

Also removed a locus for SQL injection.

Signed-off-by: Galen Charlton <cbad4aa536c39e963e89269af6cd5196eac32048@gmail.com>
",true,false,false,false,false,false,false,false,1,1,1,1,30
LMSCloud/Koha-LMSCloud,27bb768cadc6107d4004c723be2dfd7a5f07779b,Galen Charlton,2010-10-06 11:43:15 UTC,"bug 5086: fix setting claim date

Also removed a locus for SQL injection.

Signed-off-by: Galen Charlton <cbad4aa536c39e963e89269af6cd5196eac32048@gmail.com>
",true,false,false,false,false,false,false,false,1,1,1,1,30
indico/indico,81f040d68db6b46175e54e8443c8601a0f31f984,Jeremy Herr,2010-10-01 14:25:00 UTC,"[IMP] Rec Man adds Title and Creator to micala db

 - lectureTitle and lectureSpeakers were already to be found in Extra.js, I just added them in the necessary places to the other vars get
ting passed.
 - New method in micala.py: cleanSQLData() removes all but alphanumeric chars from title/author strings to prevent SQL injection
 - New method in micala.py: updateLectureInfo() sends UPDATE query to database with Title and Creator for given lecture
 - fixes #493
",true,true,true,false,false,false,false,false,4,4,4,4,1380
DarkstarProject/darkstar,026454986c0c7faf19b773d31f342b770b383fb0,Alex Goolsby,2017-03-22 13:25:39 UTC,"protect pcmd/acmd kick from packet+sql injection
",false,false,true,false,false,false,false,false,1,1,1,1,49
UNINETT/nav,4c685a8e4ef7117a807b218c322cdb6358e19878,Morten Brekkevold,2006-03-21 10:13:04 UTC,"BUGFIX: Check validity of IP addresses entered in the Machinetracker,
and output proper error messages.  Also sanitize input strings, to
avoid stuff like sql injection or XSS attacks.

 * subsystem/webFront/lib/nav/web/__init__.py
   (escape): New function

 * machinetracker/src/MachineTrackerTemplate.tmpl
   Add an error div to output any processing errors to the end user.
   Also enclosed several tag attributes values in quotes, omitting
   quotes is just bad form.

 * subsystem/machinetracker/src/machinetracker.py
   Drop the internal IP class, use the IPy module for IP address
   calculations and validity checking.  Output error messages in
   invalid user input.

",true,false,true,true,false,false,true,false,3,3,2,2,9
superdesk/web-publisher,415349367f822474fdc9dc3bb29b6af230183cbf,djbrd-sourcefabric,2016-08-22 06:53:30 UTC,"Prevented sql injection in ArticleLoader (#114)

",false,false,false,false,false,false,false,false,1,1,1,1,4037
OCA/openupgradelib,868dcc6bf6aa9edd3a48f0dd03e15b2fc0ab596a,Jairo Llopis,2019-08-20 08:24:00 UTC,"[FIX] Adapt `logged_query` to work with `psycopg2.sql.SQL` and similar helpers

I found the [`psycopg2.sql`](http://initd.org/psycopg/docs/sql.html) module with lots of great features for a SQL-composing library such as openupgradelib, and I'm using it in the new method being added.

However, you can't just do `query % args` as it was being done before, because these are sql-specific objects, not raw strings, and don't support that. BTW, that was misleading because the logged query was not exactly the query that was being sent to the database. [As explained in psycopg2 docs](http://initd.org/psycopg/docs/usage.html?highlight=never#sql-injection):

> Warning
> Never, **never, NEVER** use Python string concatenation (+) or string parameters interpolation (%) to pass variables to a SQL query string. Not even at gunpoint.

A few lines above there was another logger that did it more accurately: `logger.error('Error running %s' % cr.mogrify(query, args))`. This returns the same string that is sent to Postgres server, so it's a better candidate for debugging. The problem with that one is that under Python 3 it's a `bytes()` object, which means that the log is not properly formatted (basically it prints a raw `\n` instead of a real newline character, making it very hard to read by humans), and that's why I'm using `.decode()` at the end, which works fine both in Python 2 and 3.

Odoo cursors store last executed query information in `cr._obj.query`, and since this method is called a lot, I'm using that attribute instead of calling `cr.mogrify()` if possible, but since it's a hidden and undocumented attribute, I added a fallback to use `cr.mogrify()` just in case old or newer Odoo versions lack the attribute.
",true,false,true,true,false,true,false,false,1,1,1,1,9873
Cog-Creators/Red-DiscordBot,d1a46acc9a55f95f31303a32e1059354aec3258d,Toby Harradine,2019-08-27 02:02:26 UTC,"PostgreSQL driver, tests against DB backends, and general drivers cleanup (#2723)

* PostgreSQL driver and general drivers cleanup

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Make tests pass

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Add black --target-version flag in make.bat

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Rewrite postgres driver

Most of the logic is now in PL/pgSQL.

This completely avoids the use of Python f-strings to format identifiers into queries. Although an SQL-injection attack would have been impossible anyway (only the owner would have ever had the ability to do that), using PostgreSQL's format() is more reliable for unusual identifiers. Performance-wise, I'm not sure whether this is an improvement, but I highly doubt that it's worse.

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Reformat

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Fix PostgresDriver.delete_all_data()

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Clean up PL/pgSQL code

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* More PL/pgSQL cleanup

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* PL/pgSQL function optimisations

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Ensure compatibility with PostgreSQL 10 and below

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* More/better docstrings for PG functions

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Fix typo in docstring

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Return correct value on toggle()

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Use composite type for PG function parameters

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Fix JSON driver's Config.clear_all()

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Correct description for Mongo tox recipe

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Fix linting errors

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Update dep specification after merging bumpdeps

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Add towncrier entries

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Update from merge

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Mention [postgres] extra in install docs

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Support more connection options and use better defaults

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Actually pass PG env vars in tox

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>

* Replace event trigger with manual DELETE queries

Signed-off-by: Toby Harradine <acbb377a00596a75b70fba55ca7ed603ecd86ffb@gmail.com>
",true,true,true,true,false,false,true,false,36,34,23,21,35233
Azure/azure-sdk-for-python,8de236a52b6d7ebf456135c8a496e4fc2706665a,Yijun Xie,2019-08-06 20:15:31 UTC,"Eventhubs Python preview2 merge to master (#6660)

* Eventhubs conn (#6394)

* Shared connection (sync) draft

* Shared connection (sync) draft 2

* Shared connection (sync) test update

* Shared connection

* Fix an issue

* add retry exponential delay and timeout to exception handling

* put module method before class def

* fixed Client.get_properties error

* Improve send timeout (#6481)

* Add timeout information to the link prop during link creation process (#6485)

* Update optional parameters in public api into kwargs and update comments (#6510)

* Update optional parameters in public api into kwargs and update some comments

* Update more optional parameters into kwargs paramter

* create_batch feature implementation (#6256) (#6324)

* create_batch feature implementation (#6256)

* Init create batch event

* create_batch implementation

* Revert _set_partition_key method and update comment

* Refacor EventDataBatch class

* Revert logic when setting partition_key of event_data

* Misc fixes from code review

* Rename max_message_size to max_size
Other small fixes

* Warn if event_data is None when call try_add

* Create batch event update (#6509)

* Update according to the review

* Update comment

* Revert some kwargs backto optional parameters as it may cause breaking changes

* Small fixes (#6520)

* Change back to normal number writings as not supported by python under 3.6

* small fix

* Add missing return (#6522)

* Fix livetest (#6523)

* Eventhubs new EventProcessor (#6550)

* Shared connection (sync) draft

* Shared connection (sync) draft 2

* Shared connection (sync) test update

* Shared connection

* Fix an issue

* add retry exponential delay and timeout to exception handling

* put module method before class def

* fixed Client.get_properties error

* new eph (draft)

* new eph (draft2)

* remove in memory partition manager

* EventProcessor draft 3

* small format change

* Fix logging

* Add EventProcessor example

* use decorator to implement retry logic and update some tests (#6544)

* Update livetest (#6547)

* Remove legacy code and update livetest (#6549)

* Update livetest

* Remove legacy code and update livetest

* make sync longrunning multi-threaded

* small changes on async long running test

* reset retry_count for iterator

* Don't return early when open a ReceiveClient or SendClient

* type annotation change

* Update kwargs and remove unused import

* Misc changes from EventProcessor PR review

* raise asyncio.CancelledError out instead of supressing it.

* Update livetest and small fixed (#6594)

* Add missing close in livetest

* Update livetest to wait longer

* Close handler each time before retry

* Fix feedback from PR (1)

* Revert ""Merge branch 'eventhubs_dev' into eventhubs_eph""

This reverts commit 19a55392b9a4ea9afa97e29b601a4bc67e61c779, reversing
changes made to 9d18dd9dc6b9055915f1761895daf359672d0a87.

* Fix feedback from PR (2)

* Update code according to the review (#6623)

* Wait longer for reconnect op

* Raise authentication error when open timeout

* Optimize retry decorator

* Update code according to review

* Small fix

* Fix feedback from PR (3)

* small bug fixing

* Remove old EPH

*  Update decorator implementation (#6642)

* Update decorator implementation

* Remove old EPH pytest

* Revert ""Revert ""Merge branch 'eventhubs_dev' into eventhubs_eph""""

This reverts commit d688090f53e7d320b1d156b04b53d5e9502f87a0.

* Update sample codes and docstring (#6643)

* Check tablename to prevent sql injection

* PR review update

* Removed old EPH stuffs.
Added new EPH stuffs.

* Small fix (#6650)

* Draft for changelog

* Improve syntax for kwargs

* keep partition manager open for call restart() again

* Example to process async operations

* Update version to 5.0.0b2

* fix mypy problem

* fix small issue on max_retries

* compatible with python < 3.7

* Update docstring of event processor

* small changes on max_retries

* small changes on max_retries

* small changes

* new EventProcessor long-running live test

* change offset to text

* Updating docstings, docs, samples (#6673)

* Draft for updating documentations

* Small improvement

* Updating docstrings, docs and sample

* support 3.5 type hint

* fix 3.5 compatibility

* Update docs (#6678)

* Add a run_awhile example function

* small fix on example

* small fix on example

* Update documentations (#6694)

* Small update (#6696)
",true,true,true,false,false,false,false,true,103,78,100,75,59966
OWASP/OWASP-VWAD,e5daa334772a6c3f4d3cdff5c6897ede2018558c,raulsiles,2015-10-04 08:02:28 UTC,"Added the -SQL injection test environment- (from the SQLmap Project)
",false,true,false,false,false,false,false,false,2,2,0,0,
WillyXJ/facileManager,7b013e3248db465e3ba5544a28b3c159e3dd43f0,WillyXJ,2019-09-05 02:45:27 UTC,"core - password reset LPE and SQL injection fix
",true,false,false,false,false,false,false,false,3,3,2,2,465
WillyXJ/facileManager,b85cb7343ef814195c56ce30dee8437b79693559,WillyXJ,2019-09-06 20:30:34 UTC,"core - admin-servers sql injection fix
",true,false,false,false,false,false,false,false,3,3,2,2,1093
biow0lf/evemonk,8a363351a4f64603a56d42682ab2ef005c1e8159,Igor Zubkov,2016-12-14 22:31:30 UTC,"Add Rails SQL Injection and Swagger specification links to Guides section in README.md
",false,true,true,false,false,false,false,false,1,1,0,0,605
ekylibre/ekylibre,57444d7cda28fcf7d4d725d0fb354b899781a266,Jeremie Bonal,2016-12-06 10:28:58 UTC,"Sanitizing pattern before interpolating it into SQL string as to avoid SQL injection.
",false,false,false,false,false,false,false,false,1,1,1,1,1
librenms/librenms,dac063c0f6b06051d455ff7b40976914d8206149,Tom Laermans,2011-03-25 15:47:42 UTC,"clean up all known sql injection

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@1975 61d68cd4-352d-0410-923a-c4978735b2b8
",false,false,true,true,false,false,false,false,3,3,3,3,9
librenms/librenms,10b0bbe0102c7a298adb753733471f44c9c12d4a,Tom Laermans,2011-03-25 14:18:04 UTC,"fix 2 possible sql injections, make graph clickthrough work on the non-sensor blocks in the device overview too

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@1973 61d68cd4-352d-0410-923a-c4978735b2b8
",true,false,false,false,false,false,false,false,4,4,4,4,152
sequelize/sequelize,6394c5b660280cf32b6660b6f321d9f045597927,Sascha Depold,2011-03-27 08:18:31 UTC,some sql injection prevention + tests,false,false,false,false,false,false,false,false,4,2,4,2,710
pgjdbc/pgjdbc,17ad605cd797280682e6524444e863f40e75626a,Barry Lind,2003-08-07 04:03:13 UTC,"Sometimes the third time is the charm.  Third try to fix the sql injection
vulnerability.  This fix completely removes the ability (hack) of being able
to bind a list of values in an in clause.  It was demonstrated that by allowing
that functionality you open up the possibility for certain types of
sql injection attacks.  The previous fix attempts all focused on preventing
the insertion of additional sql statements (the semi-colon problem:
xxx; any new sql statement here).  But that still left the ability to
change the where clause on the current statement or perform a subselect
which can circumvent applicaiton security logic and/or allow you to call
any stored function.

 Modified Files:
 	jdbc/org/postgresql/jdbc1/AbstractJdbc1Statement.java
",true,true,false,false,false,true,false,false,1,1,1,1,1330
LMSCloud/Koha-LMSCloud,5d2fde5d587100e1c00e629c8cc21acb956aba6f,Andrew Moore,2008-05-13 17:00:55 UTC,"Bug 1953: removing potential SQL injections from C4::Calendar::_init

This patch changes the 4 select statements in C4::Calendar::_init.
tests for this method were included in a previous patch.

There are more potential problems in C4::Calendar::delete_holiday, but that
method seems to have deeper bugs than just these. I'll open another bug for
them if I can figure out how it's supposed to work.

No documentation changes necessary.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,false,false,false,false,false,1,1,1,1,0
LMSCloud/Koha-LMSCloud,56b9f5b8821b5824dae323a83840f5be6c29bd0e,Andrew Moore,2008-05-12 19:34:44 UTC,"bug 1953: fixing potential SQL injection problems in C4::Branch::GetBranches

I moved C4::Branch::GetBranches to use bind parameters and wrote some tests to demonstrate functionality.

No functional or documentation changes here.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,true,false,false,false,false,3,1,3,1,4288
bywatersolutions/ByWater-KOHA,56b9f5b8821b5824dae323a83840f5be6c29bd0e,Andrew Moore,2008-05-12 19:34:44 UTC,"bug 1953: fixing potential SQL injection problems in C4::Branch::GetBranches

I moved C4::Branch::GetBranches to use bind parameters and wrote some tests to demonstrate functionality.

No functional or documentation changes here.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,true,false,false,false,false,3,1,3,1,4288
Koha-Community/Koha,5d2fde5d587100e1c00e629c8cc21acb956aba6f,Andrew Moore,2008-05-13 17:00:55 UTC,"Bug 1953: removing potential SQL injections from C4::Calendar::_init

This patch changes the 4 select statements in C4::Calendar::_init.
tests for this method were included in a previous patch.

There are more potential problems in C4::Calendar::delete_holiday, but that
method seems to have deeper bugs than just these. I'll open another bug for
them if I can figure out how it's supposed to work.

No documentation changes necessary.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,false,false,false,false,false,1,1,1,1,0
bywatersolutions/bws-package,56b9f5b8821b5824dae323a83840f5be6c29bd0e,Andrew Moore,2008-05-12 19:34:44 UTC,"bug 1953: fixing potential SQL injection problems in C4::Branch::GetBranches

I moved C4::Branch::GetBranches to use bind parameters and wrote some tests to demonstrate functionality.

No functional or documentation changes here.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,true,false,false,false,false,3,1,3,1,4288
bywatersolutions/ByWater-KOHA,5d2fde5d587100e1c00e629c8cc21acb956aba6f,Andrew Moore,2008-05-13 17:00:55 UTC,"Bug 1953: removing potential SQL injections from C4::Calendar::_init

This patch changes the 4 select statements in C4::Calendar::_init.
tests for this method were included in a previous patch.

There are more potential problems in C4::Calendar::delete_holiday, but that
method seems to have deeper bugs than just these. I'll open another bug for
them if I can figure out how it's supposed to work.

No documentation changes necessary.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,false,false,false,false,false,1,1,1,1,0
bywatersolutions/bws-package,5d2fde5d587100e1c00e629c8cc21acb956aba6f,Andrew Moore,2008-05-13 17:00:55 UTC,"Bug 1953: removing potential SQL injections from C4::Calendar::_init

This patch changes the 4 select statements in C4::Calendar::_init.
tests for this method were included in a previous patch.

There are more potential problems in C4::Calendar::delete_holiday, but that
method seems to have deeper bugs than just these. I'll open another bug for
them if I can figure out how it's supposed to work.

No documentation changes necessary.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,false,false,false,false,false,1,1,1,1,0
colinsc/koha,56b9f5b8821b5824dae323a83840f5be6c29bd0e,Andrew Moore,2008-05-12 19:34:44 UTC,"bug 1953: fixing potential SQL injection problems in C4::Branch::GetBranches

I moved C4::Branch::GetBranches to use bind parameters and wrote some tests to demonstrate functionality.

No functional or documentation changes here.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,true,false,false,false,false,3,1,3,1,4288
colinsc/koha,5d2fde5d587100e1c00e629c8cc21acb956aba6f,Andrew Moore,2008-05-13 17:00:55 UTC,"Bug 1953: removing potential SQL injections from C4::Calendar::_init

This patch changes the 4 select statements in C4::Calendar::_init.
tests for this method were included in a previous patch.

There are more potential problems in C4::Calendar::delete_holiday, but that
method seems to have deeper bugs than just these. I'll open another bug for
them if I can figure out how it's supposed to work.

No documentation changes necessary.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,false,false,false,false,false,1,1,1,1,0
Koha-Community/Koha,56b9f5b8821b5824dae323a83840f5be6c29bd0e,Andrew Moore,2008-05-12 19:34:44 UTC,"bug 1953: fixing potential SQL injection problems in C4::Branch::GetBranches

I moved C4::Branch::GetBranches to use bind parameters and wrote some tests to demonstrate functionality.

No functional or documentation changes here.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",true,false,true,true,false,false,false,false,3,1,3,1,4288
LMSCloud/Koha-LMSCloud,20fd87d59ba0034969a4f546b950b839e8caffe3,Andrew Moore,2008-05-09 19:03:28 UTC,"Bug 2094: cleanup of lost items report

Just some code cleanup of C4::Items::GetLostItems and reports/itemslist.pl.
Some whitespace changes, perltidy, and documentation improvements.
Also, I rewrote and SQL statement to try to reduce possibilities of SQL injection attacks.

No documentation or functional changes necessary with this patch.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,true,true,false,false,false,false,2,2,2,2,0
Koha-Community/Koha,20fd87d59ba0034969a4f546b950b839e8caffe3,Andrew Moore,2008-05-09 19:03:28 UTC,"Bug 2094: cleanup of lost items report

Just some code cleanup of C4::Items::GetLostItems and reports/itemslist.pl.
Some whitespace changes, perltidy, and documentation improvements.
Also, I rewrote and SQL statement to try to reduce possibilities of SQL injection attacks.

No documentation or functional changes necessary with this patch.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,true,true,false,false,false,false,2,2,2,2,0
colinsc/koha,20fd87d59ba0034969a4f546b950b839e8caffe3,Andrew Moore,2008-05-09 19:03:28 UTC,"Bug 2094: cleanup of lost items report

Just some code cleanup of C4::Items::GetLostItems and reports/itemslist.pl.
Some whitespace changes, perltidy, and documentation improvements.
Also, I rewrote and SQL statement to try to reduce possibilities of SQL injection attacks.

No documentation or functional changes necessary with this patch.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,true,true,false,false,false,false,2,2,2,2,0
bywatersolutions/bws-package,20fd87d59ba0034969a4f546b950b839e8caffe3,Andrew Moore,2008-05-09 19:03:28 UTC,"Bug 2094: cleanup of lost items report

Just some code cleanup of C4::Items::GetLostItems and reports/itemslist.pl.
Some whitespace changes, perltidy, and documentation improvements.
Also, I rewrote and SQL statement to try to reduce possibilities of SQL injection attacks.

No documentation or functional changes necessary with this patch.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,true,true,false,false,false,false,2,2,2,2,0
bywatersolutions/ByWater-KOHA,20fd87d59ba0034969a4f546b950b839e8caffe3,Andrew Moore,2008-05-09 19:03:28 UTC,"Bug 2094: cleanup of lost items report

Just some code cleanup of C4::Items::GetLostItems and reports/itemslist.pl.
Some whitespace changes, perltidy, and documentation improvements.
Also, I rewrote and SQL statement to try to reduce possibilities of SQL injection attacks.

No documentation or functional changes necessary with this patch.

Signed-off-by: Joshua Ferraro <d80943125a911844a3c3deaf419ab4e1af1e85aa@liblime.com>
",false,true,true,true,false,false,false,false,2,2,2,2,0
hubzero/hubzero-cms,8b2f1c7f9c3f528b28b2be9ffd056cc6df7f5fc1,David Benham,2011-09-14 19:49:03 UTC,"host of fixes for XSS/SQL injection attacks
",true,false,false,false,false,false,false,false,19,19,19,19,38947
doctrine/dbal,82cc921447fde697bf3d9f5285d0f0b8587303d8,Guilherme Blanco,2011-09-13 04:55:52 UTC,"Fixed DBAL-164. Quoting identifier was SQL Injection prone.
",true,false,false,false,false,false,false,false,1,1,1,1,7560
sequelize/sequelize,c385994028e703fd589f266d55504d305b52a8a1,Michael Kaufman,2017-05-07 19:07:59 UTC,"7564 Ordering with JSON attributes (#7565)

* Two birds with one stone.  Adds support for ordering by JSON columns and removes vulnerability for injections on JSON attributes.

* Updates the changelog for the addition of json attributes.

* Fixes lint error with prefer arrow.

* Removes specific error because it may change depending on dialect and engine version.

* Removed duplicate tests and moved location of SQL injection test and find order test.

* Optimizes item.split performance by only performing the split once.

* Fixes test for sqlite dialect json.  JSON is handled differently in sqlite where the json value is extracted from a path.  If the path doesn't exist sqlite returns null instead of throwing an error like postgres.
",true,true,true,true,false,false,false,true,5,4,4,3,13175
platform9/fission,990d943f21eda078f4fb7899f7cc47facd819edc,Ta-Ching Chen,2017-05-30 21:19:22 UTC,"Retrieve function logs from controller (#207)

Establish a proxy server from the controller to the log database.

Redirect query commands send from client to database then proxy back the db response.

Use parameter binding instead of fmt.Sprintf to prevent SQL injection.
",false,false,true,true,false,false,false,false,7,7,6,6,99259
exponentcms/exponent-cms,fffb2038de4c603931b785a4c3ec69cfd06181ba,dleffler,2016-11-06 10:53:19 UTC,"fix sql injection security vulnerability; reported by Nicky [#1394 state:resolved] [#1395 state:resolved]
",true,false,false,false,false,false,false,false,1,1,1,1,589
exponentcms/exponent-cms,4327ea96b3de89440693e06d03038121aa1fdcea,dleffler,2016-11-06 01:04:06 UTC,"fix sql injection issue in notfound controller; reported by pang0lin
",true,false,false,false,false,false,false,false,1,1,1,1,332
exponentcms/exponent-cms,559792be727f4e731bfcb3935f5beec7749e9ce9,dleffler,2016-11-04 01:34:43 UTC,"fix sql injection security vulnerability which failed to account for sef urls adequately; reported by many, many users
",true,false,false,false,false,false,false,false,1,1,1,1,631
glpi-project/glpi,2ffc8a92eb7241370ea7fc04ccbc6628047aa614,Johan Cwiklinski,2016-11-04 07:04:25 UTC,"Fix possible SQL injection
",true,false,false,false,false,false,false,false,2,1,2,1,9673
FH-Complete/FHC-Core,7f8415e6dc78f1bd3fa8b1b8c6629f7ff2c43af1,alex,2020-02-06 13:52:26 UTC,"system/Variable_model: replaced concatenation of names array with ? (parameter replacement by CI) to prevent SQL injections
",false,false,true,true,false,false,false,false,2,2,2,2,2698
Azareal/Gosora,ea1037bd6365b0391892dc3896b0a758b7d34160,Azareal,2020-02-26 10:34:38 UTC,"track favicon stats
experiment with tracking average route performance
temporary error route stub
optimise dumprequest
add DisableAnalytics config setting
fix double hyphens in slugs being mistaken for sql injection
more querygen tests

You wil need to run the updater / patcher for this commit.
",true,true,false,false,false,false,false,true,19,18,15,14,1581
zaproxy/zap-extensions,234a288bc36bacb807b19ff2d044af8fd512093c,colm.p.oflaherty@gmail.com,2013-03-12 21:50:28 UTC,Some additional changes to make the SQL Injection scanner detect some additional scenarios in BodgeIT.,false,true,false,false,false,false,false,false,1,1,0,0,1
zaproxy/zap-extensions,0862d1dad5c880e643d3d51333313b53d27daa35,colm.p.oflaherty@gmail.com,2013-03-12 21:48:53 UTC,Some additional changes to make the SQL Injection scanner detect some additional scenarios in BodgeIT.,false,true,false,false,false,false,false,false,1,0,1,0,1806
akrherz/iem,ff1763a3afb50ed0974e2a14362f4f800f1e1a8e,akrherz,2009-05-01 13:15:10 UTC,"about all we can do is get rid of sql injection

",false,false,false,false,false,false,false,false,1,1,0,0,122
wikimedia/mediawiki-extensions-ProofreadPage,cf64b7a1d5be671e6ea4766ae4822ffd6ffee259,Tim Starling,2009-05-27 07:20:51 UTC,"* Double-validate integers to avoid SQL injection risk
* Handle images with zero pages gracefully, without SQL errors
",false,false,false,false,false,false,false,false,1,1,1,1,29
OCSInventory-NG/OCSInventory-ocsreports,9eb1bfa5790b717550f1ff6580d5c7e177339ce5,Erwan Goalou,2009-05-12 15:23:14 UTC,"thx to Nico Leidecker
 (sql injection and Unauthenticated Arbitrary File Read)

",false,false,false,false,false,false,false,false,2,2,2,2,58182
OCSInventory-NG/OCSInventory-Server,6ebceb983634284af6bfb862f52c041728dd3e6a,Erwan Goalou,2009-05-12 15:23:14 UTC,"thx to Nico Leidecker
 (sql injection and Unauthenticated Arbitrary File Read)

",false,false,false,false,false,false,false,false,2,2,2,2,58182
librenms/librenms,1ed4749f401ff748ca1245d096468169b55a2a33,Tom Laermans,2010-07-07 14:34:44 UTC,"move current to sensors table, plug some sql injection holes

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@1312 61d68cd4-352d-0410-923a-c4978735b2b8
",false,false,false,false,false,false,false,false,17,17,16,16,36
iomad/iomad,621f3ef519a298d02f974a4b5899d97252411b89,Jordi Piguillem,2010-07-30 10:49:41 UTC,"[MDL-23130]

Fixing sql code style and sql injection problems
",true,false,false,false,false,false,false,false,19,19,19,19,5800
moodle/moodle,621f3ef519a298d02f974a4b5899d97252411b89,Jordi Piguillem,2010-07-30 10:49:41 UTC,"[MDL-23130]

Fixing sql code style and sql injection problems
",true,false,false,false,false,false,false,false,19,19,19,19,5800
projectestac/agora_moodle2,621f3ef519a298d02f974a4b5899d97252411b89,Jordi Piguillem,2010-07-30 10:49:41 UTC,"[MDL-23130]

Fixing sql code style and sql injection problems
",true,false,false,false,false,false,false,false,19,19,19,19,5800
pallets/flask,b4b2f42f48684fbb4c2d56f4f83d01b2be421a39,Ron DuPlain,2010-07-15 17:18:20 UTC,"Warn about SQL injection in the tutorial.
",false,false,false,false,false,false,false,false,1,1,0,0,93119
moodle/moodle,a090554aaa7770bdaa2b8a1a6208f09a9b631de0,Petr Skoda,2010-07-03 14:33:48 UTC,"MDL-23067 fixed potential sql injection and improved SQL coding style
",true,false,false,false,false,false,false,false,1,1,1,1,56
iomad/iomad,a090554aaa7770bdaa2b8a1a6208f09a9b631de0,Petr Skoda,2010-07-03 14:33:48 UTC,"MDL-23067 fixed potential sql injection and improved SQL coding style
",true,false,false,false,false,false,false,false,1,1,1,1,56
projectestac/agora_moodle2,a090554aaa7770bdaa2b8a1a6208f09a9b631de0,Petr Skoda,2010-07-03 14:33:48 UTC,"MDL-23067 fixed potential sql injection and improved SQL coding style
",true,false,false,false,false,false,false,false,1,1,1,1,56
moodle/moodle,75b986e7f54d747e65aaae7568f255ad1af853d5,Jordi Piguillem,2010-07-30 12:10:18 UTC,"[MDL-23130]

Fixing problems of sql injection.
",true,true,false,false,false,false,false,false,1,1,1,1,57
iomad/iomad,9730c555b6f8a70e15953fc7d9efd92020d4f9d9,Jordi Piguillem,2010-07-30 11:12:33 UTC,"[MDL-23130]

Fixing sql code style and sql injection problems
",true,false,false,false,false,false,false,false,1,1,1,1,22
projectestac/agora_moodle2,75b986e7f54d747e65aaae7568f255ad1af853d5,Jordi Piguillem,2010-07-30 12:10:18 UTC,"[MDL-23130]

Fixing problems of sql injection.
",true,true,false,false,false,false,false,false,1,1,1,1,57
projectestac/agora_moodle2,9730c555b6f8a70e15953fc7d9efd92020d4f9d9,Jordi Piguillem,2010-07-30 11:12:33 UTC,"[MDL-23130]

Fixing sql code style and sql injection problems
",true,false,false,false,false,false,false,false,1,1,1,1,22
iomad/iomad,75b986e7f54d747e65aaae7568f255ad1af853d5,Jordi Piguillem,2010-07-30 12:10:18 UTC,"[MDL-23130]

Fixing problems of sql injection.
",true,true,false,false,false,false,false,false,1,1,1,1,57
moodle/moodle,9730c555b6f8a70e15953fc7d9efd92020d4f9d9,Jordi Piguillem,2010-07-30 11:12:33 UTC,"[MDL-23130]

Fixing sql code style and sql injection problems
",true,false,false,false,false,false,false,false,1,1,1,1,22
terraform-providers/terraform-provider-aws,8410f8cda5b22026128b895fff2cf30d7cc13a8e,Brian Flad,2020-11-12 13:40:41 UTC,"service/waf: Generate paginated list functions and implement all sweepers (#16150)

Reference: https://github.com/hashicorp/terraform-provider-aws/issues/16148

Output from sweeper in AWS Commercial:

```
2020/11/11 15:40:19 [DEBUG] Running Sweepers for region (us-west-2):
2020/11/11 15:40:19 [DEBUG] Running Sweeper (aws_waf_web_acl) in region (us-west-2)
2020/11/11 15:40:20 [DEBUG] Running Sweeper (aws_waf_rule_group) in region (us-west-2)
2020/11/11 15:40:20 [DEBUG] Running Sweeper (aws_waf_rate_based_rule) in region (us-west-2)
...
2020/11/11 15:40:22 [DEBUG] Running Sweeper (aws_waf_rule) in region (us-west-2)
...
2020/11/11 15:42:06 [DEBUG] Running Sweeper (aws_waf_sql_injection_match_set) in region (us-west-2)
...
2020/11/11 15:42:25 [DEBUG] Running Sweeper (aws_waf_regex_match_set) in region (us-west-2)
2020/11/11 15:42:25 [DEBUG] Running Sweeper (aws_waf_geo_match_set) in region (us-west-2)
2020/11/11 15:42:25 [DEBUG] Running Sweeper (aws_waf_byte_match_set) in region (us-west-2)
...
2020/11/11 15:42:59 [DEBUG] Running Sweeper (aws_waf_size_constraint_set) in region (us-west-2)
...
2020/11/11 15:43:21 [DEBUG] Running Sweeper (aws_waf_regex_pattern_set) in region (us-west-2)
...
2020/11/11 15:43:24 [DEBUG] Running Sweeper (aws_waf_ipset) in region (us-west-2)
...
2020/11/11 15:44:09 [DEBUG] Running Sweeper (aws_waf_xss_match_set) in region (us-west-2)
...
2020/11/11 15:44:25 Sweeper Tests ran successfully:
	- aws_waf_regex_match_set
	- aws_waf_geo_match_set
	- aws_waf_regex_pattern_set
	- aws_waf_xss_match_set
	- aws_waf_web_acl
	- aws_waf_rate_based_rule
	- aws_waf_rule
	- aws_waf_sql_injection_match_set
	- aws_waf_byte_match_set
	- aws_waf_size_constraint_set
	- aws_waf_ipset
	- aws_waf_rule_group
2020/11/11 15:44:25 [DEBUG] Running Sweepers for region (us-east-1):
2020/11/11 15:44:25 [DEBUG] Running Sweeper (aws_waf_web_acl) in region (us-east-1)
2020/11/11 15:44:26 [DEBUG] Running Sweeper (aws_waf_rule_group) in region (us-east-1)
2020/11/11 15:44:26 [DEBUG] Running Sweeper (aws_waf_rate_based_rule) in region (us-east-1)
2020/11/11 15:44:26 [DEBUG] Running Sweeper (aws_waf_rule) in region (us-east-1)
2020/11/11 15:44:26 [DEBUG] Running Sweeper (aws_waf_regex_pattern_set) in region (us-east-1)
2020/11/11 15:44:27 [DEBUG] Running Sweeper (aws_waf_ipset) in region (us-east-1)
2020/11/11 15:44:27 [DEBUG] Running Sweeper (aws_waf_xss_match_set) in region (us-east-1)
2020/11/11 15:44:27 [DEBUG] Running Sweeper (aws_waf_size_constraint_set) in region (us-east-1)
2020/11/11 15:44:27 [DEBUG] Running Sweeper (aws_waf_regex_match_set) in region (us-east-1)
2020/11/11 15:44:27 [DEBUG] Running Sweeper (aws_waf_geo_match_set) in region (us-east-1)
2020/11/11 15:44:27 [DEBUG] Running Sweeper (aws_waf_byte_match_set) in region (us-east-1)
2020/11/11 15:44:27 [DEBUG] Running Sweeper (aws_waf_sql_injection_match_set) in region (us-east-1)
2020/11/11 15:44:28 Sweeper Tests ran successfully:
	- aws_waf_geo_match_set
	- aws_waf_byte_match_set
	- aws_waf_rule
	- aws_waf_ipset
	- aws_waf_xss_match_set
	- aws_waf_regex_match_set
	- aws_waf_size_constraint_set
	- aws_waf_sql_injection_match_set
	- aws_waf_web_acl
	- aws_waf_rule_group
	- aws_waf_rate_based_rule
	- aws_waf_regex_pattern_set
ok  	github.com/terraform-providers/terraform-provider-aws/aws	255.497s
```

Output from sweeper in AWS GovCloud (US):

```
2020/11/11 15:44:47 [DEBUG] Running Sweepers for region (us-gov-west-1):
2020/11/11 15:44:47 [DEBUG] Running Sweeper (aws_waf_web_acl) in region (us-gov-west-1)
2020/11/11 15:44:50 [WARN] Skipping WAF Regional Web ACL sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:44:50 [DEBUG] Running Sweeper (aws_waf_rule_group) in region (us-gov-west-1)
2020/11/11 15:44:52 [WARN] Skipping WAF Rule Group sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:44:52 [DEBUG] Running Sweeper (aws_waf_rate_based_rule) in region (us-gov-west-1)
2020/11/11 15:44:53 [WARN] Skipping WAF Rate Based Rule sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:44:53 [DEBUG] Running Sweeper (aws_waf_rule) in region (us-gov-west-1)
2020/11/11 15:44:55 [WARN] Skipping WAF Rule sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:44:55 [DEBUG] Running Sweeper (aws_waf_regex_pattern_set) in region (us-gov-west-1)
2020/11/11 15:44:56 [WARN] Skipping WAF Regex Pattern Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:44:56 [DEBUG] Running Sweeper (aws_waf_regex_match_set) in region (us-gov-west-1)
2020/11/11 15:44:57 [WARN] Skipping WAF Regex Match Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:44:57 [DEBUG] Running Sweeper (aws_waf_sql_injection_match_set) in region (us-gov-west-1)
2020/11/11 15:44:59 [WARN] Skipping WAF SQL Injection Match Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:44:59 [DEBUG] Running Sweeper (aws_waf_geo_match_set) in region (us-gov-west-1)
2020/11/11 15:45:01 [WARN] Skipping WAF Geo Match Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:45:01 [DEBUG] Running Sweeper (aws_waf_byte_match_set) in region (us-gov-west-1)
2020/11/11 15:45:02 [WARN] Skipping WAF Byte Match Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:45:02 [DEBUG] Running Sweeper (aws_waf_ipset) in region (us-gov-west-1)
2020/11/11 15:45:04 [WARN] Skipping WAF IP Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:45:04 [DEBUG] Running Sweeper (aws_waf_xss_match_set) in region (us-gov-west-1)
2020/11/11 15:45:05 [WARN] Skipping WAF XSS Match Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:45:05 [DEBUG] Running Sweeper (aws_waf_size_constraint_set) in region (us-gov-west-1)
2020/11/11 15:45:06 [WARN] Skipping WAF Size Constraint Set sweep for us-gov-west-1: RequestError: send request failed
caused by: Post ""https://waf.us-gov-west-1.amazonaws.com/"": dial tcp: lookup waf.us-gov-west-1.amazonaws.com: no such host
2020/11/11 15:45:06 Sweeper Tests ran successfully:
	- aws_waf_sql_injection_match_set
	- aws_waf_byte_match_set
	- aws_waf_size_constraint_set
	- aws_waf_rule
	- aws_waf_regex_pattern_set
	- aws_waf_regex_match_set
	- aws_waf_geo_match_set
	- aws_waf_ipset
	- aws_waf_web_acl
	- aws_waf_rule_group
	- aws_waf_rate_based_rule
	- aws_waf_xss_match_set
ok  	github.com/terraform-providers/terraform-provider-aws/aws	21.532s
```",true,true,false,false,false,false,false,false,13,2,13,2,0
NavigateCMS/Navigate-CMS,d459b1d151350b401236e0a7f746c82a8fa80562,NavigateCMS,2020-06-19 13:46:55 UTC,"* items: prevent SQL Injection in items category order
",true,false,false,false,false,false,false,false,3,3,2,2,15
OpenSID/OpenSID,d8829ec8f1a799229dfabb268b7e585e0315202e,Eddie Ridwan,2020-06-01 07:15:21 UTC,"Perbaiki supay autocomplete menampilkan semua pilihan setelah ada teks cari aktif. Kembali tampilkan teks cari di kotak cari seperti pada halaman lainnya. Perbaiki tombol kembali ke daftar rincian. Gunakan penulisan variable session yg lebih sederhana. Escape teks cari menghindari sql injection. Perbaiki penulisan php di view.
",false,false,false,false,false,false,false,false,6,6,6,6,169
BeatButton/beattie-bot,ab36b2053ee09faf4cc9a279cf7a4c010864cb29,BeatButton,2017-02-08 03:01:44 UTC,"Protected from SQL injection.
",false,false,false,false,false,false,false,false,1,1,1,1,435
BeatButton/beattie,ab36b2053ee09faf4cc9a279cf7a4c010864cb29,BeatButton,2017-02-08 03:01:44 UTC,"Protected from SQL injection.
",false,false,false,false,false,false,false,false,1,1,1,1,435
Cvolton/GMDprivateServer,70decc224a292af7fee10418d995dccbc0de4713,Cvolton,2017-02-08 22:13:37 UTC,"sql injection exploit fix
",true,false,false,false,false,false,false,false,1,1,1,1,1
Cvolton/GMDprivateServer,1855da9247dce54c09472cbf7bb822f0f0661477,Cvolton,2017-02-04 12:44:56 UTC,"sql injection
",false,false,false,false,false,false,false,false,1,1,1,1,152
Cvolton/GMDprivateServer,d152693b027ce1d12d1d50d742c3731e6ed5acf5,Cvolton,2017-02-08 22:17:31 UTC,"sql injection
",false,false,false,false,false,false,false,false,1,1,1,1,1
Cvolton/GMDprivateServer,607113ef16271a2d8759dd655960a8ca23c9ebe8,Cvolton,2017-02-23 22:16:14 UTC,"sql injection patch
",false,false,false,false,false,false,false,false,1,1,1,1,1360
Cvolton/GMDprivateServer,1e7f0796056248b454d03bd17da0995ee52f9989,Cvolton,2017-02-08 22:15:50 UTC,"possible sql injection exploit patch
",false,false,false,false,false,false,false,false,1,1,1,1,2
Cvolton/GMDprivateServer,814ef0d2da3aacebda2e4e7f55bce3ded211fac1,Cvolton,2017-02-23 22:19:09 UTC,"sql injection patch
",false,false,false,false,false,false,false,false,1,1,1,1,2
Cvolton/GMDprivateServer,32701341ff6116c6d04b838441dc335ed626c08b,Cvolton,2017-02-08 22:12:05 UTC,"sql injection exploit patch
",false,false,false,false,false,false,false,false,1,1,1,1,2
Cvolton/GMDprivateServer,75a2c8b89fbf33bb026dfaa5c3c45c03759c6c7f,Cvolton,2017-02-03 16:08:16 UTC,"sql injection exploit fix
",true,false,false,false,false,false,false,false,2,2,2,2,0
mybb/mybb,d8ecb6239bb6d1fa07af29220a412481e6d9652a,Stefan-ST,2013-12-03 12:56:54 UTC,"Fixes SQL injection in admin/modules/config/smilies.php
",true,false,false,false,false,false,false,false,1,1,1,1,3
pouchdb/pouchdb,59b1f9e003b9858796bbbe7f5f476b3cba527c26,Nolan Lawson,2013-12-21 08:51:45 UTC,"(#1170) Escape startkey/endkey in WebSQL allDocs()

Properly escape the startkey/endkey to avoid SQL injection
vulnerabilities or problems with invalid characters.
",true,false,false,false,false,false,false,false,2,1,2,1,3582
librenms/librenms,9f5b42b028a0d1268455a0e5f83a523e4f276fc9,Maurice den Braber,2018-03-25 20:50:09 UTC,"webui: Allow full search on devices page (#8364)

* Update devices.inc.php

* Update devices.inc.php

* Replace $_POST with $vars

Better protection for SQL injection attempts; Need to verify other files for same issue.

* Fixed whitespace.

*sigh*

* More search options & sql injection fixes.

+Allow full search on devices page;
+Allow sysName search on alertlog page;
+Allow sysName search on alerts page;
+Allow sysName search on eventlog page;
+Allow sysName search on poll-log page;
+Allow sysName search on ports page;

*Replaced all occurrences of $_POST with $vars in librenms/html/includes/table. ($vars are sanity-checked).

* Whitespace fix

* Fixed $where & $param

* Add files via upload

* Whitespaces....

Sometimes you want'em, sometimes you hate'em.
",true,true,false,false,false,false,true,false,32,32,32,32,65171
MarkUsProject/Markus,a0540acbbc5f2671bacf3c9edc151a7e9d11082f,Varoquaux,2013-01-04 09:29:54 UTC,"Merge pull request #948 from benjaminvialle/RailsFix

Upgraded Rails version to fix SQL injection",true,true,false,false,false,false,false,false,2,2,0,0,277677
MarkUsProject/Markus,2efaf9d5d865b016c501e1987716584ede22196a,Benjamin Vialle,2013-01-03 19:10:15 UTC,"Upgraded Rails version to fix SQL injection
",true,true,false,false,false,false,false,false,2,2,0,0,177021
Growstuff/growstuff,03fd77b03e61e64669734d8699ba418726d40360,Miles Gould,2013-01-04 12:33:22 UTC,"Upgrade to Rails 3.2.10

 - there was a SQL injection bug in 3.2.8
 - also fixed the version of therubyracer, to avoid dependency on native
   v8.
 - we need therubyracer to build bootstrap stuff.
",true,false,false,false,false,false,false,false,2,2,0,0,9263
commons-app/apps-android-commons,384f3dd166c223328863b9f54ec9ea1d2be0799c,YuviPanda,2013-01-31 21:19:27 UTC,"Fix potential SQL Injection hole
",true,false,false,false,false,false,false,false,1,1,1,1,0
JetBrains/intellij-community,4925746bf715798c02297119c74eba83413019d7,Semyon Proshev,2016-05-11 11:01:24 UTC,"PY-19473 Fixed: Incorrect sql injection detected

Update ""COPY FROM/TO"" regexp to decrease false positives
",true,false,false,false,false,false,false,false,1,1,0,0,18279
CollegeSTAR/collegestar_org,f34dbc6223d1ca331e7b84a201ffa8b90b9969eb,Joel Tanner Jones,2016-05-17 21:03:47 UTC,"Update UdlModule to use parameterized queries

UdlMoudle#get_sections_by_page and UdlModule#get_page_seciton_count
where not using parameterized queries and therefore could have been
vulnerable to sql injection. This commit updates them to use
parameterized queries.
",false,true,true,true,false,false,false,false,1,1,1,1,8
CollegeSTAR/collegestar_org,41b7b34081c73e20197d3f35c601adbac7641f94,Joel Tanner Jones,2016-05-17 20:55:41 UTC,"Update Redesign Summary to use parameterized query

RedesignSummary#add_existing_attachments was not using parameterized
queries and was vulnerable to sql injections, it's not now.
",false,true,true,true,false,false,false,false,1,1,1,1,7
Cacti/cacti,0e127daa11249dc0501b55b26544241518d1db7a,cigamit,2016-05-08 14:43:07 UTC,"-bug:0002673: [CVE-2016-3659]Cacti graph_view.php SQL Injection Vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,4316
FOGProject/fogproject,7b5789f0b2ea08c1c234639d7cf4d2aea9986717,Tom Elliott,2016-05-20 13:05:30 UTC,"Start working on binding parameters so we are much more SQL Injection secure

git-svn-id: 2a7368e07a5e2e9069bfa1b4300f283a4e68c5f8@5508 71f96598-fa45-0410-b640-bcd6f8691b32
",false,false,false,false,false,false,false,false,3,3,3,3,149
FOGProject/fogproject,42a130aa7e894e47c384166c83d102d187ac0351,masterzune,2016-05-20 13:05:30 UTC,"Start working on binding parameters so we are much more SQL Injection secure

git-svn-id: 2a7368e07a5e2e9069bfa1b4300f283a4e68c5f8@5508 71f96598-fa45-0410-b640-bcd6f8691b32
",false,false,false,false,false,false,false,false,3,3,3,3,149
NovaFox161/DisCal-Discord-Bot,d2ba9b3f1c0a7fb9e21ef844b5614033393a50ba,NovaFox161,2019-01-17 21:37:06 UTC,"Fix possible SQL injection.
",true,false,false,false,false,false,false,false,1,1,1,1,54813
Impactstory/oadoi,4cde28ea869c921be917cd8726edb958b37d683a,Richard Orr,2019-01-19 23:37:26 UTC,"fix sql injection vulnerability in search endpoints
",true,false,false,false,false,false,false,false,1,1,1,1,1587
Impactstory/sherlockoa,4cde28ea869c921be917cd8726edb958b37d683a,Richard Orr,2019-01-19 23:37:26 UTC,"fix sql injection vulnerability in search endpoints
",true,false,false,false,false,false,false,false,1,1,1,1,1587
MushroomObserver/mushroom-observer,f3fb0c11ec3a18bc69d296836331fb1845e2c519,Nathan Wilson,2019-01-27 22:52:07 UTC,"Better fix for SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,5
MushroomObserver/mushroom-observer,8659b8b654188462ccb683dc9ce5d6ce557a865c,Nathan Wilson,2019-01-27 22:46:12 UTC,"Back off on SQL injection fix
",true,false,false,false,false,false,false,false,1,1,1,1,8
MushroomObserver/mushroom-observer,851a8c67f9e6465adb875bff3e27d4c7616b1afb,Nathan Wilson,2019-01-27 22:22:01 UTC,"Fix possible SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,17
IPGP/webobs,c0349fc2f90a405b24562bcc436dc90cecf53529,Xavier Béguin,2019-01-18 05:28:01 UTC,"Fix register.pl security and add changepassowrd.pl

Fix 4 security vulnerabilities in register.pl: 1 password leak, 2 arbitrary
command executions, and one SQL injection that be easily exploited as denial of
service.

This also adds the changepassword.pl scripts that allows users to change
their password in the web server password files.

Detailed changes:

CODE/cgi-bin/register.pl
  Multiple changes in this script, including correction for 4 security
  vulnerabilities (one being potentially exploitable by unauthenticated
  users):

  - updated the message displayed to the registering user after
    completion to an hopefully less ambiguous message (as I noticed
    users were often expecting an automated email):
    ""Your request will be processed asap. An administrator should notify
    you on $mailaddr for confirmation.""

  - added a (client-side) test of the length of the password before
    submitting the form

  - the way register.pl had been calling 'htpasswd' to get the encrypted
    password was introducing 2 security vulnerabilities:
    - using the shell to invoke 'htpasswd' with values provided by the
      user could lead to command execution (incomplete sanatization was
      mitigating this issue but a simple command could still be executed).
    - passing the password on the command line made it visible from any
      user/program on the system.
    The updated register.pl now invoques htpasswd using IPC::Open3
    (which uses execvp(3)), and the password is provided through its
    standard input.

  - register.pl was using the SHA-1 format to encrypt the password,
    which is a scheme vulnerable to rainbow table attacks. The
    encryption method can now be chosen between 'md5' and 'bcrypt' using
    the HTPASSWD_ENCRYPTION configuration variable. Use of 'md5' is
    advised as it allows for more compabitility with other webservers
    (in particular Nginx). Use bcrypt only if you really need 'very
    secure' passwords and don't care about portability.

  - register.pl was not sanitising the full name provided by the user
    before using it in a raw SQL query that was potentially indefinitely
    repeated.  This could easily be exploited to create a denial of
    service.  register.pl now uses a bound query to let DBI properly
    escape the values, and we limit the number of times the query is
    repeated (a better solution should be found on in the future).

CODE/cgi-bin/WebObs/Users.pm
   New helper functions htpasswd, htpasswd_update, htpasswd_verify,
   htpasswd_display that allow to call the 'htpasswd' command, used in
   register.pl and changepassword.pl.

CODE/cgi-bin/changepassword.pl
  New script that allows the current user to change their password.
  The current password is first verified, and a minimal length for the new
  passowrd can be enforced through the use of the ""HTPASSWORD_MIN_LENGTH""
  configuration variable.
  The password file must be designated by HTTP_PASSWORD_FILE, and the
  'htpasswd' binary by PRGM_HTPASSWD. htpasswd will use the encryption chosen
  in HTPASSWD_ENCRYPTION (md5 by default).
  Password change can be disabled by the administrator by setting
  ALLOW_HTPASSWORD_CHANGE to 0, and the 'guest' user is always forbidden to
  change their password.

SETUP/CONF/menunav.html
  Added link to /cgi-bin/changepassword.pl

SETUP/CONF/WEBOBS.rc
  Added new configuration variables for changepassword.pl and register.pl:

  # Authentication file for the web server
  HTTP_PASSWORD_FILE|${ROOT_CONF}/htpasswd
  # Minium length for user password
  HTPASSWORD_MIN_LENGTH|8
  # Whether to allow users to change their own password
  ALLOW_HTPASSWORD_CHANGE|0
  # Path to the htpasswd command
  PRGM_HTPASSWD|/usr/bin/htpasswd
  # Encryption format to use when creating/updating passwords:
  # ""md5"" for option -m or ""bcrypt"" for option -B to htpasswd.
  # ""md5"" is more portable while ""bcrypt"" is even more secure.
  HTPASSWD_ENCRYPTION|md5
",true,true,true,true,false,false,false,false,5,5,3,3,3
OCA/account-financial-reporting,91361ef042d16f3fda3ea8f09539a4a4baadd6d5,Wolfgang Pichler,2019-01-16 18:38:26 UTC,"[MIG] account_financial_report: Migration to 12.0

[IMP] Reformated one query to avoid one sql injection warning message - but no sql injection was possible here
",false,false,false,false,false,false,false,false,23,16,20,13,
interchange/interchange,90b150ad7eb15cb96e3aa5dd1390e38e82f96908,mike,2011-02-03 22:18:22 UTC,"Prevent possible SQL injection problem.
",true,false,false,false,false,false,false,false,1,1,1,1,
colinsc/koha,b0f60221f41041665c4fecacce35654fc8d45a01,Chris Nighswonger,2011-02-24 14:57:11 UTC,"Security Bugfix: Bug 1953 Adding Placeholders to SQL To Avoid Potential Injection Attacks

This patch addresses both security issues mentioned in the summary of the report
submitted by Frère Sébastien Marie included below.

---------------------------
The problem is here: 'C4/AuthoritiesMarc.pm' in the function 'DelAuthority':
The argument $authid is included directly (not via statement) in the SQL.

For the exploit of this problem, you can use 'authorities/authorities-home.pl'
with authid on the URL and op=delete (something like
""authorities/authorities-home.pl?op=delete&authid=xxx"").

This should successfully call DelAuthority, without authentification...
(DelAuthority is call BEFORE get_template_and_user, so before authentification
[This should be an issue also...]).

Please note that the problem isn't only that anyone can delete an authority of
this choose, it is more general: with ""authid=1%20or%1=1"" (after inclusion sql
will be like: ""delete from auth_header where authid=1 or 1=1"") you delete all
authorities ; with ""authid=1;delete%20from%xxx"" it is ""delete from auth_header
where authid=1;delete from xxx"" and so delete what you want...

SQL-INJECTION is very permissive: you can redirect the output in a file (with
some MySQL function), so write thea file of you choose in the server, in order
to create a backdoor, and compromise the server.

Signed-off-by: Frère Sébastien Marie <75bb7a385b394e76819a2e62a420b280277b72cb@latrappe.fr>
Signed-off-by: Chris Cormack <d7aa3da1d5912a8b3f7b831e4f9f40b8b3d7e8b1@catalyst.net.nz>
",true,true,true,false,false,false,false,false,2,2,2,2,149460
find-sec-bugs/find-sec-bugs,8780c7c16ac9ea2b2ff474637dd1be314801672f,h3xstream,2012-07-22 19:10:53 UTC,"Sql Injection detector added for JDO and JPA api
",false,true,false,false,false,false,false,false,13,5,12,4,46995
colinsc/koha,934a8a1156f20807c1c132b451c452d39569d1fe,Jonathan Druart,2012-07-10 14:00:54 UTC,"Bug 7955: Followup : Check the syspref value (avoid sql injection)

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>

Works as expected. Fields with disallowed characters do not show up.
Added 'if $debug' to an pseudo-unconditional warn.

Signed-off-by: Paul Poulain <eedb72edbb44448b1f14f12416a76acfd5e52f95@biblibre.com>
",false,false,false,false,false,false,false,false,2,2,2,2,8578
bywatersolutions/ByWater-KOHA,934a8a1156f20807c1c132b451c452d39569d1fe,Jonathan Druart,2012-07-10 14:00:54 UTC,"Bug 7955: Followup : Check the syspref value (avoid sql injection)

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>

Works as expected. Fields with disallowed characters do not show up.
Added 'if $debug' to an pseudo-unconditional warn.

Signed-off-by: Paul Poulain <eedb72edbb44448b1f14f12416a76acfd5e52f95@biblibre.com>
",false,false,false,false,false,false,false,false,2,2,2,2,8578
bywatersolutions/bws-package,934a8a1156f20807c1c132b451c452d39569d1fe,Jonathan Druart,2012-07-10 14:00:54 UTC,"Bug 7955: Followup : Check the syspref value (avoid sql injection)

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>

Works as expected. Fields with disallowed characters do not show up.
Added 'if $debug' to an pseudo-unconditional warn.

Signed-off-by: Paul Poulain <eedb72edbb44448b1f14f12416a76acfd5e52f95@biblibre.com>
",false,false,false,false,false,false,false,false,2,2,2,2,8578
privacyidea/privacyidea,1ea0318ee17f033ef150d79bcf6ade13bd64ac3f,Cornelius Kölbel,2016-12-21 16:01:04 UTC,"Avoid potential SQL injection.
",true,false,false,false,false,false,false,false,1,1,1,1,26
wikimedia/mediawiki-extensions-BlogPage,c57f671db220176e1c51030e20534e0782c9387b,Jack Phoenix,2016-12-17 17:19:21 UTC,"SQL injections, DOS vectors, XSS and oh my!

Bug: T152884
Change-Id: I5e8eb624ece7e9e6c584f99d07a3ec2b25022959
",true,false,false,false,false,false,false,false,3,3,3,3,9541
rails/rails,05ef038bb955d4a0c9cbda50bf7ff7eb259bdf59,Raimonds Simanovskis,2010-05-16 16:55:21 UTC,"Fixed adapter tests not to assert LIMIT and OFFSET in SQL strings

Fixed adapter test cases that were failing in oracle because the asserts were looking for the presence of offset and limit which are not available in oracle. Changed the tests to check that the sql injection is not present in the output so that the tests are database adapter agnostic.
",true,false,false,false,false,false,false,false,1,0,1,0,100928
TrinityCore/TrinityCore,f286f583fc211582d5dcf44648f300dc880040cc,Machiavelli,2010-05-13 16:25:32 UTC,"Prevent SQL injection in Player::_SaveEquipmentSets()

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,1,1,1,1,23
ElunaLuaEngine/ElunaTrinityWotlk,f286f583fc211582d5dcf44648f300dc880040cc,Machiavelli,2010-05-13 16:25:32 UTC,"Prevent SQL injection in Player::_SaveEquipmentSets()

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,1,1,1,1,23
AshamaneProject/AshamaneCore,1dd755358625dff0e125c2cf4ac3aa2305d716b2,Machiavelli,2010-05-13 16:25:32 UTC,"Prevent SQL injection in Player::_SaveEquipmentSets()

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,1,1,1,1,23
AshamaneProject/AshamaneCore,f286f583fc211582d5dcf44648f300dc880040cc,Machiavelli,2010-05-13 16:25:32 UTC,"Prevent SQL injection in Player::_SaveEquipmentSets()

--HG--
branch : trunk
",true,false,false,false,false,false,false,false,1,1,1,1,23
MaharaProject/mahara,08d8b8b14fff3e186cbca2a64c67484b13f22d17,Francois Marier,2010-05-25 05:04:45 UTC,"Cast an ID coming from user data before it hits a query

This is a security fix (SQL injection).

Signed-off-by: Francois Marier <5187da0b934cc25eb2201a3ec9206c24b13cb23b@catalyst.net.nz>
",true,false,false,false,false,false,false,false,1,1,1,1,5800
MaharaProject/mahara,d216a8c0f9970569fddf203d50ec69e14e428b2b,Francois Marier,2010-05-25 06:22:47 UTC,"Extra validation for search fields

This is not a security fix but rather a cleanup to harden this code
and make it harder to accidentally introduce a SQL injection in the
future.

Signed-off-by: Francois Marier <5187da0b934cc25eb2201a3ec9206c24b13cb23b@catalyst.net.nz>
",false,false,true,true,false,false,false,false,1,1,1,1,59
MaharaProject/mahara,dc04329d081e1b5e24b070471b47addee2c34549,Francois Marier,2010-05-25 05:23:12 UTC,"Rewrite a function parameter to avoid having to pass SQL

This is not a security fix but rather a cleanup to harden this code
and make it harder to accidentally introduce a SQL injection in the
future.

Signed-off-by: Francois Marier <5187da0b934cc25eb2201a3ec9206c24b13cb23b@catalyst.net.nz>
",false,false,true,true,false,false,false,false,2,2,2,2,18
Cacti/cacti,9aaea4c2a222a46d1e2230dda53b10aea02c698a,Larry Adams,2010-05-13 12:22:07 UTC,"-security:0001749: MOPS-2010-023: Cacti Graph Viewer SQL Injection Vulnerability 

git-svn-id: 1c0139d5a254bbfdc7488bad8ff35377293b87b3@5920 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,3,3,2,2,5460
backdrop-ops/backdrop-pantheon,526558401680f5d8b402823dbd5d40fd17620980,Dries Buytaert,2010-05-05 16:51:30 UTC,"- Patch #769554 by jpmckinney, Berdir, cha0s: fixed trivial SQL injection(s) with SelectQuery.
",true,false,false,false,false,false,false,false,5,4,1,1,9
MaharaProject/mahara,2e2f34abf7787b89305d7b4895cdbdee835984cb,Francois Marier,2010-05-26 00:29:07 UTC,"Remove the ability for blocktypes to inject straight SQL into a query

This was not exploitable, but will reduce the risk that a SQL injection
will be accidentally introduced in the future.

Signed-off-by: Francois Marier <5187da0b934cc25eb2201a3ec9206c24b13cb23b@catalyst.net.nz>
",false,false,false,false,false,false,false,false,9,9,9,9,1077
draios/falco,f64ea7def5337fd5a08ba82eeaebbcf15f2bce1a,Mark Stemm,2016-05-11 21:11:18 UTC,"Add addl groups of binary programs.

Add some new groups of binary programs as macros and start using them in
the set of rules:

 - docker_binaries: docker and exe (which is a temporary process name
   for processes like docker-proxy)
 - http_server_binaries: httpd, nginx, and similar
 - db_server_binaries: mysql for now, we'll add more later
 - server_binaries: all of the above
 - userexec_binaries: sudo and su.

Start using these groups in the rules. Most of the time, changing from
the inline lists of processes to macros was a no-op. There are some
actual changes, though:

 - docker and exe are now allowed to read 'sensitive' files. They may
   not actually do so, but it's not really harmful.
 - lighttpd is now allowed to read 'sensitive' files, via inclusion in
   http_server_binaries.
 - su, lighttpd, and docker can now setuid.
 - http-foreground is included as a http server wrt non-port 80/443 ports.

I'm going to use these macros in some of the following rules.

This actually prevents detection of mysql reading sensitive files, which
is one of the demo scenarios (sql injection). I plan on adding this
detection back in the next commit.
",false,true,false,false,false,false,false,false,1,1,0,0,206
draios/falco,c761218bfebf0000bd07554897e9b78f4f3a6640,Mark Stemm,2016-05-11 21:59:41 UTC,"Don't let databases spawn processes after startup.

This will detect the result of some sql injection attacks where the
injected query tries to spawn a process.

We don't include web servers in this list for now due to things like
mod_perl, mod_php, etc. Maybe we can add it once we make exceptions for
those modules.
",false,false,true,true,false,false,false,false,1,1,0,0,18
espinosaluis/TrackMeViewer,860e74d6bc49a5b2d4a8dfb7e3cd697f12cab297,Fabian Neundorf,2016-05-24 21:10:25 UTC,"Prepare requests to switch to PDO

Using PDO instead of mysql commands makes it possible to use other database
systems in the future. The mysql commands have also been removed in PHP 7 and
with PDO it is possible to avoid SQL injection.

This will only change the verification structure to PDO and only changes the
geticonlist action. Later patches can then change the more complicated queries
mostly independently.
",false,true,true,true,false,false,false,false,1,1,1,1,10253
espinosaluis/TrackMeViewer,e8a729096a9b9f4a5a880e6606daf49a35171f3b,Fabian Neundorf,2016-05-27 15:26:30 UTC,"Prepare requests to switch to PDO

Using PDO instead of mysql commands makes it possible to use other database
systems in the future. The mysql commands have also been removed in PHP 7 and
with PDO it is possible to avoid SQL injection.

This will only change the verification structure to PDO and only changes the
geticonlist action. Later patches can then change the more complicated queries
mostly independently.
",false,true,true,true,false,false,false,false,2,1,2,1,83
nigelhorne/CGI-Info,53425666e00a7cd64852365223173a910bc464f6,Nigel Horne,2016-01-05 13:22:56 UTC,"Log the IP address of client attempting SQL injection
",false,false,false,false,false,false,false,false,3,3,1,1,13547
palasthotel/grid,df976e6c00f5963ca5a1096cb9ea667f0b0e8233,Enno Welbers,2016-01-07 09:05:06 UTC,"closes a possible sql injection attack vector
",false,false,false,false,false,false,false,false,1,1,1,1,170085
Charcoal-SE/metasmoke,cdc1c8d5eac55c155aa03341b9300a6d6fb707c4,Undo1,2017-09-05 00:35:53 UTC,"Sanitize SQL LIKE operations taking user input

https://rorsecurity.info/portfolio/rails-sql-injection-like
",false,false,false,false,false,false,false,false,4,4,4,4,610
wikimedia/mediawiki-extensions-CheckUser,a021052d78039925221adf74b30e58f9b61e3494,John Du Hart,2011-10-20 00:45:32 UTC,"Followup r100165, fix SQL injections and conditions
",true,false,false,false,false,false,false,false,2,2,2,2,1489
thexerteproject/xerteonlinetoolkits,b8d8362238ed16ef28f6f2c3aae6ddc524629997,Dave Goodwin,2011-10-05 20:15:36 UTC,"reindentation; attempting to refactor slightly (replace sql injection prone db calls with db_query*(..); try and reduce nesting by exiting early if possible; these changes need testing and have not been yet (I will try and check them asap once they are commmitted so i can sync them to my other server)

git-svn-id: 17e300447cb4b020d428f438ce6532ae41087135@124 912cdd6b-5c7d-d5a7-a2ba-d0f0cdb91641
",false,false,true,true,false,false,false,false,6,6,6,6,2812
thexerteproject/xerteonlinetoolkits,282a91c9887cb2b184af83da4e50d8e2ad910390,Dave Goodwin,2011-10-05 20:15:36 UTC,"reindentation; attempting to refactor slightly (replace sql injection prone db calls with db_query*(..); try and reduce nesting by exiting early if possible; these changes need testing and have not been yet (I will try and check them asap once they are commmitted so i can sync them to my other server)

git-svn-id: 17e300447cb4b020d428f438ce6532ae41087135@124 912cdd6b-5c7d-d5a7-a2ba-d0f0cdb91641
",false,false,true,true,false,false,false,false,6,6,6,6,2812
joomla/joomla-cms,2e60ac283b0f9cf47321ffdaa0f789bfa955794d,Andrew Eddie,2011-01-11 03:44:44 UTC,"Fixed issue [#24232] SQL Injection can result in information disclosure (Ian MacLennan).

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@20267 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",true,false,false,false,false,false,false,false,36,36,35,35,1031
DinoTools/dionaea,4629be9a2570190f9b9945862ea05ab1bd9e1622,common,2011-01-24 22:02:16 UTC,"pg_backend - % vs. , - pypgsql makes it easy to allow sql injections ...
",false,false,false,false,false,false,false,false,1,1,1,1,18827
joomla/joomla-cms,ec92413d57505e3e5a860b40650f08fa118c7316,Andrew Eddie,2011-01-08 07:49:36 UTC,"Fixed issue [#24206] SQL Injection in templates in assignment of template styles to pages (Ian MacLennan).

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@20175 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",true,false,false,false,false,false,false,false,2,2,1,1,4
ChurchCRM/CRM,10a26ada66937cc7ad0036842cc1300fbe637678,mikewiltwork,2011-01-02 04:44:26 UTC,"Make sure things get defined before used, added FilterInput to prevent sql injection
",false,false,false,false,false,false,false,false,3,3,3,3,54860
exponentcms/exponent-cms,67a9c2f0229de120431f3eecb0f5017075517105,dleffler,2020-04-27 20:34:18 UTC,"fix sql injection issue
",true,false,false,false,false,false,false,false,1,1,1,1,14
cmu-delphi/delphi-epidata,a2d814c696ab963d36b18a7c000bb534e9d51e88,undefx,2020-04-15 06:43:54 UTC,"sanitize user input

- a **huge** thanks to Pedrito Maynard-Zhang (pedritom@amazon.com) for 
disclosing this vulnerability
- PoC confirms SQL injection at the wiki endpoint
- vulnerability is fixed by this change
",true,false,false,false,false,true,false,false,1,1,1,1,477
zaproxy/zap-extensions,bebedeaae6c6579715939bd9c011c0bd1f98e003,thc202,2020-03-30 12:44:18 UTC,"ascanrules: correct tech check in SQL Injection

Do not check the `Db` tech by reference since imported contexts use new
`Tech` instances.

Fix zaproxy/zaproxy#5918 - Skipped plugin TestSQLInjection with imported
Context

Signed-off-by: thc202 <43af82ef30812a20fbcf38b99a6f72cdd3a89ac1@gmail.com>
",true,true,false,false,false,false,false,false,3,1,2,0,4124
smrealms/smr,a2e803b756620598f632ff736c083e5d6f6559da,Dan Hemberger,2020-03-30 06:53:59 UTC,"Throw user error on invalid social login type (#837)

Because the social login type should be internally consistent between
the URL on the login page and the types accepted by the SocialLogin
class, we were raising an exception if the type passed in the URL to
the login_social_processing.php page was unknown. This helped ensure
that we would be notified (by bugs emails) if we accidentally broke
social logins.

Unfortunately, because the login_social_processing.php page is linked
on the public-facing login page, it has been added to a bunch of bot
databases. Most of the search engine spiders respect our robots.txt
file, but some do not, and SQL injection attacks obviously do not.

As a result, we get a lot of unwanted bugs emails where a bot uses an
outdated or malicious social login type. This is just too much noise,
and so we now redirect to error.php if the social login type is not
valid.",true,false,true,false,false,false,true,false,2,2,2,2,9836
zaproxy/zap-extensions,910dc37239f6056edcc324cbcfc027406a20702a,Simon Bennetts,2020-03-31 11:04:51 UTC,"Merge pull request #2348 from thc202/ascanrules/incorrect-tech-check

ascanrules: correct tech check in SQL Injection",true,true,false,false,false,false,false,false,3,1,2,0,1
terraform-providers/terraform-provider-aws,6aaca595533dd858bd78998ab847b81cf76da1e7,Pascal van Buijtene,2020-03-30 15:34:20 UTC,"Add sql injection match statement
",false,true,false,false,false,false,false,false,2,1,2,1,1020
Cacti/cacti,873eaff4eda510c78abadb84ca7eedbdd94c1cda,Tony Roman,2010-04-17 17:32:34 UTC,"Fix to reported sql injection security issue from Bonsai Information Security

git-svn-id: 1c0139d5a254bbfdc7488bad8ff35377293b87b3@5747 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,1,1,1,1,211043
osTicket/osTicket-1.8,70aca8937767bd2c0e99f76f8ec94910c7d38df8,Jared Hancock,2012-06-21 03:24:25 UTC,"Remove SQL injection vulnerabilities

Map each of the inputs from $_POST['ids'] into a separate, sanitized
database input (via the db_input() function), then implode() the array with
commas and build the SQL statement.
",true,true,true,true,false,false,false,false,15,15,15,15,
osTicket/osTicket,70aca8937767bd2c0e99f76f8ec94910c7d38df8,Jared Hancock,2012-06-21 03:24:25 UTC,"Remove SQL injection vulnerabilities

Map each of the inputs from $_POST['ids'] into a separate, sanitized
database input (via the db_input() function), then implode() the array with
commas and build the SQL statement.
",true,true,true,true,false,false,false,false,15,15,15,15,
neinteractiveliterature/intercode,a79b334b1f140314a10d1fb9e34a7cc16e570b7e,Nat Budin,2012-06-16 15:54:50 UTC,"Update Rails for SQL injection fix
",true,true,false,false,false,false,false,false,2,2,0,0,
shavitush/bhoptimer,0ba5f66065c322276a858168ae0c9328ec006748,shavitush,2016-06-13 16:46:33 UTC,"URGENT: Fix SQL injection
",true,false,false,false,false,false,false,false,2,2,0,0,7511
prestodb/presto,f3344958a9135d1358d2abf6efe25d011c4026b6,David Phillips,2016-06-27 22:32:49 UTC,"Fix SQL injection in Raptor ShardMetadataRecordCursor
",true,false,false,false,false,false,false,false,1,1,1,1,3978
stackforge/monasca-api,6f5898c58b8ea34e8eab0b013e47b51f87b7962c,Deklan Dieterly,2014-06-19 20:17:09 UTC,"Prevent SQL injection attacks.
",true,false,false,false,false,false,false,false,17,13,17,13,207
openstack/monasca-api,6f5898c58b8ea34e8eab0b013e47b51f87b7962c,Deklan Dieterly,2014-06-19 20:17:09 UTC,"Prevent SQL injection attacks.
",true,false,false,false,false,false,false,false,17,13,17,13,207
rails/rails,7df68a300c9395e3edf8c603b6fea3db9eaff003,Rafael Mendonça França,2014-06-05 17:08:40 UTC,"Fix SQL injection when querying against ranges and bitstrings

Fix CVE-2014-3483 and protect against CVE-2014-3482.
",true,false,false,false,false,false,false,false,3,2,3,2,1175
reportportal/commons-dao,4fb7ce6ee0bb1d1ff97e04b34c7c5326fb808a6d,Pavel Bortnik,2019-04-16 15:16:16 UTC,"Merge pull request #393 from reportportal/injection

[EPMRPP-38603] Potential Sql injection",false,true,false,false,false,false,false,false,1,1,1,1,3
shannah/xataface,eb4265e7188b715cc6c886f19f4332fd4b4346ca,Steve Hannah,2019-04-07 13:25:05 UTC,"Fixed SQL injection.
",true,false,false,false,false,false,false,false,1,1,1,1,8181
matrix-org/synapse,a33a5abc4cd0a73fdf851850da21d749d842ae32,Amber Brown,2019-04-04 13:21:16 UTC,"Clean up the database pagination code (#5007)

* rewrite & simplify

* changelog

* cleanup potential sql injection
",false,false,true,true,false,false,false,false,3,3,2,2,1693
catmaid/CATMAID,e9dfd6fc2d5b73f5e96c8addec0f5acfce9cd096,Andrew Champion,2015-07-30 19:32:38 UTC,"Merge branch 'hotfix/2015.7.17/annotationlist-sql-injection' into dev
",true,true,false,false,false,false,false,false,1,1,1,1,38
catmaid/CATMAID,355cb32a6011dd29dc35b679114a803cebe540ba,Andrew Champion,2015-07-30 17:38:52 UTC,"Skeleton: fix SQL injection vulnerability

Fix a vulnerability in annotation listing that allowed arbitrary SQL
injection.

Unsanitized input was introduced in 97274f6 and became exploitable in
3aa0b70.
",true,false,false,false,false,false,false,false,1,1,1,1,45
cakephp/cakephp,4c7ff422cdc595a2f93d02ca6dae433b1a633931,Ladislav Gallay,2015-07-01 21:22:19 UTC,Fix possible date_add SQL injection,true,true,false,false,false,false,false,false,1,1,1,1,2
bywatersolutions/bws-package,a72262a950aa701cebe460e2a3a7586edecd86be,David Cook,2015-07-13 04:06:46 UTC,"Bug 14521: SQL injection in local use system preferences

This patch fixes a SQL injection vulnerability in the local use
system preferences.

_TEST PLAN_

Before applying:

1) Go to Global System Preferences
2) Click on the ""Local use"" tab
3) Add a new preference with the value ""') or '1' = '1' -- ""
(be sure to include the space at the end after the comment --).
4) When the page refreshes, you should now see about 99 other system
preferences which shouldn't be showing up.

5) Apply the patch

6) Refresh the page
7) Note that you now only see a system preference for ""') or '1' = '1' -- ""
and the other actual local use system preferences.

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,true,true,false,false,false,false,false,1,1,1,1,28589
colinsc/koha,a72262a950aa701cebe460e2a3a7586edecd86be,David Cook,2015-07-13 04:06:46 UTC,"Bug 14521: SQL injection in local use system preferences

This patch fixes a SQL injection vulnerability in the local use
system preferences.

_TEST PLAN_

Before applying:

1) Go to Global System Preferences
2) Click on the ""Local use"" tab
3) Add a new preference with the value ""') or '1' = '1' -- ""
(be sure to include the space at the end after the comment --).
4) When the page refreshes, you should now see about 99 other system
preferences which shouldn't be showing up.

5) Apply the patch

6) Refresh the page
7) Note that you now only see a system preference for ""') or '1' = '1' -- ""
and the other actual local use system preferences.

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,true,true,false,false,false,false,false,1,1,1,1,28589
bywatersolutions/ByWater-KOHA,a72262a950aa701cebe460e2a3a7586edecd86be,David Cook,2015-07-13 04:06:46 UTC,"Bug 14521: SQL injection in local use system preferences

This patch fixes a SQL injection vulnerability in the local use
system preferences.

_TEST PLAN_

Before applying:

1) Go to Global System Preferences
2) Click on the ""Local use"" tab
3) Add a new preference with the value ""') or '1' = '1' -- ""
(be sure to include the space at the end after the comment --).
4) When the page refreshes, you should now see about 99 other system
preferences which shouldn't be showing up.

5) Apply the patch

6) Refresh the page
7) Note that you now only see a system preference for ""') or '1' = '1' -- ""
and the other actual local use system preferences.

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,true,true,false,false,false,false,false,1,1,1,1,28589
fpcorso/quiz_master_next,7478429084be1a0a05f4610176b4bf2da2cfd2b0,Frank Corso,2015-07-18 21:03:24 UTC,"Fixes the SQL Injection vulnerability possibility
",true,false,false,false,false,false,false,false,19,19,19,19,261
bkimminich/juice-shop,d61706ba749774bc449baf6af5a82d64e91df431,Björn Kimminich,2014-09-29 06:55:50 UTC,"""enabled"" SQL injection in search
",false,true,false,false,false,false,false,false,1,1,1,1,513
Alfresco/alfresco-repository,9895e145f77a292432ed2f0e9d66fe2e2f0b565d,Alan Davis,2014-09-18 17:20:08 UTC,"Merged HEAD-BUG-FIX (5.0/Cloud) to HEAD (5.0/Cloud)
   84017: Merged V4.2-BUG-FIX (4.2.4) to HEAD-BUG-FIX (5.0/Cloud)
      82509: Merged V4.1-BUG-FIX (4.1.10) to V4.2-BUG-FIX (4.2.4)
         82351: MNT-12272: Merged DEV to V4.1-BUG-FIX (4.1.10)
            82330: MNT-12272: Possible sql injection in /api/workflow-instances
               - Set exluded definitions for query using parameter binding


git-svn-id: 01653c09f76512ebba8fd589b05a699d8510a51f@84613 c4b6b30b-aa2e-2d43-bbcb-ca4b014f7261
",false,true,false,false,false,false,false,false,1,1,1,1,0
EUDAT-B2SHARE/b2share,e8b5611afd899ed172c1a47b6a0e40eec54c240b,Dennis Blommesteijn,2014-09-03 16:43:01 UTC,"Fix sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,21
beetbox/beets,4870d7e0fa881a1c3b302ca70255026f1db90df9,Adrian Sampson,2014-09-14 00:16:12 UTC,"Roll back fast flexible field sorts (#953)

Sad to see them go, but happy be rid of the SQL injection.
",false,false,false,false,false,true,true,true,5,3,5,3,1176
nikrou/phyxo,c237379af183d3426f73be1cba11aa92028cd1fe,rvelices,2008-08-23 01:18:13 UTC,"merge r2483 from branch 1.7
- security fix : when conf['question_mark_in_urls']=true , $_SERVER['PATH_INFO'] was not sanitized against sql injection
- mysql errors are now dumped using trigger_error instead of echo and die -> allow admins to see later on if someone tries funny stuff

git-svn-id: 07d450c9015c98804e48b520a2aeaa7bff74be0c@2484 68402e56-0260-453c-a942-63ccdbb3a9ee
",true,true,false,false,false,false,false,false,2,2,2,2,1445
MushroomObserver/mushroom-observer,1829b84f3677bac881ccd84b3ec216c18a3077a1,Joe Cohen,2019-03-18 17:18:30 UTC,"Use more efficient query

`pluck` instead of `select` + `map`
(I had forgotten about `pluck` when I originally fixed the sql injection problem on this line.)
",true,false,true,true,false,false,false,false,1,1,1,1,19
MushroomObserver/mushroom-observer,c1660129dc12bbf26ee97c27354d70616ce89408,Joe Cohen,2019-03-13 16:30:31 UTC,"Try fixing SQL issues with redundant `to_i`

I hope that all 4 SQL injection issues remaining after Commit #75a9132
are due to Brakeman not recognizing that  `Name.ranks[:xxx]` is an enum.

Attempted solution is adding a redundant `to_i`. So hopefully Brakeman will now know that it's dealing with an integer.
",true,false,false,false,false,false,false,false,2,2,2,2,48
MushroomObserver/mushroom-observer,81b5ba49cd9513b6ba2d819fddfe8d5eea203c4f,Joe Cohen,2019-03-17 01:34:34 UTC,"Try to fix Code Climate issues with Commit #7943c3f

- Try to fix SQL injection issue by using ActiveRecord query instead of SQL
- Fix ""Favor modiifier `while`"" offense
",true,false,true,true,false,false,false,false,2,2,2,2,229
MushroomObserver/mushroom-observer,ea873f8ee900948bf88c22f0c09b904bfad7fc1c,Joe Cohen,2019-03-14 04:03:00 UTC,"Remove Mushroom App code

This code was the source of all the ""new"" SQL injection issues in this branch.

As far as we've heard, and as far as the logs tell us from the 2018, Mushroom App is dead.

Bonuses:
- simplifies maintenance;
- gets rid of a bunch of uncovered code
- gets  rid of other Code Climate issues
",false,false,false,false,false,false,false,false,5,3,5,3,260
privacyidea/privacyidea,7ca3957d4645f381955ac7c5b4ce94d32a2c2196,Cornelius Kölbel,2015-11-06 11:21:05 UTC,"Fix possible SQL injections in privacyIDEA PAM

In case of offline usage there is the possibility for SQL
injections
",true,false,false,false,false,false,false,false,1,1,1,1,919
consulo/consulo,324fab4927f42cc72425a5a722942c0237115068,Serega Vasiliev,2011-08-23 10:29:11 UTC,"spring jdbc: sql injections
",false,false,false,false,false,false,false,false,1,1,0,0,47167
rails/rails,b537595665527b8ca5ebad97fc053fd102e16d32,Xavier Noria,2011-08-04 22:14:06 UTC,"Revert ""Explicitly included hashes in sentence regarding SQL-injection-safe forms""

Reason: The hash form is secure, and preferred over the array form if possible.

This reverts commit 6dc749596c328c44c80f898d5fa860fff6cab783.
",true,false,false,false,false,false,false,false,1,1,1,1,11
rails/rails,9e18380a323c7087b2079ec479d26ce899268b72,Xavier Noria,2011-08-04 22:14:06 UTC,"Revert ""Explicitly included hashes in sentence regarding SQL-injection-safe forms""

Reason: The hash form is secure, and preferred over the array form if possible.

This reverts commit 6dc749596c328c44c80f898d5fa860fff6cab783.
",true,false,false,false,false,false,false,false,1,1,1,1,11
propelorm/Propel2,698ce9b750a961a97a67edcef1332d2a276ec502,William DURAND,2011-08-11 08:50:14 UTC,"Improved the patch for MySQL driver (possibly subject to sql injections)
",false,false,true,true,false,false,false,false,3,2,3,2,98
propelorm/Propel2,cd547f23d5f95c7a794ab2a26c328e3604a6ee0e,William DURAND,2011-08-10 20:56:19 UTC,"MySQL Driver possibly subject to sql injections with PDO::quote()

Patch posted by Davud Zulke at
http://pastie.org/private/cl3raamde9jh1ldxar59a

See: http://www.propelorm.org/ticket/1360
",false,false,false,false,false,false,false,false,3,3,3,3,544
rails/rails,8a39f411dc3c806422785b1f4d5c7c9d58e4bf85,Aaron Patterson,2011-08-16 22:17:17 UTC,"prevent sql injection attacks by escaping quotes in column names
",true,false,false,false,false,false,false,false,4,3,4,3,0
propelorm/Propel2,68f1695792d51d5e91e70bdcedd6da06f2417f0d,William DURAND,2011-08-11 12:54:08 UTC,"Merge pull request #27 from willdurand/fix-mysql-driver-sql-injections

Fix mysql driver sql injections",true,true,false,false,false,false,false,false,4,3,4,3,243
FriendsOfPHP/security-advisories,b221626806cc5ba1c51cef4b8b4e37ac39afd294,Jon Hinks,2018-02-17 16:38:38 UTC,"First cut of security report for SQL injection issue
",false,false,false,false,false,false,false,false,1,1,0,0,
FriendsOfPHP/security-advisories,0b945f1d0199d085960c9023031a32b1a45e218f,Fabien Potencier,2018-02-20 15:56:11 UTC,"Merge pull request #253 from halfer/master

SQL injection vulns found in all versions of Propel in LIMIT statement",false,true,false,false,false,false,false,false,2,2,0,0,1825
MushroomObserver/mushroom-observer,e7b5bb6c155eed8a3707b1a291ffb952eba0bfd7,Joe Cohen,2018-02-22 17:11:29 UTC,"Fix `Possible SQL injection` Brakeman offense
",false,false,false,false,false,false,false,false,1,1,1,1,715
CESNET/perun,ad447371955dce54d9b1a03c51f155825c80e29d,Pavel Zlámal,2018-02-19 12:37:14 UTC,"REGISTRAR: Fixed possibility of SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,235
CESNET/perun,50a20122e0017dc6b2c47dd03a656e9892901808,Pavel Zlámal,2018-02-19 18:57:43 UTC,"Merge pull request #1763 from zlamalp/sql

REGISTRAR: Fixed possibility of SQL injection",true,true,false,false,false,false,false,false,1,1,1,1,1
TechEmpower/FrameworkBenchmarks,0ca0b2a85273af0909a947502c74ee5df6fa85dc,Michael Hixson,2018-02-09 15:30:40 UTC,"Fix web2py-optimized updates test implementation (#3281)

It was failing verification before because it wasn't actually making all
the expected updates in the database.  I think what was happening was
it was building up a single long query containing multiple statements
like this:

  ""UPDATE World SET randomNumber=4 WHERE id=5;UPDATE World SET randomNumber=1 WHERE id=2;...""

But the database driver was ignoring all but the first statement.  As far
as I know, most drivers prevent you from executing multiple statements in
one by default as a SQL injection countermeasure.

The revised implementation executes each UPDATE individually.  We've
learned from previous experiments in this project (with other
frameworks) that there isn't any way to execute a batch update against
the MySQL database that's faster than many individual updates.",true,true,true,true,false,false,false,true,2,2,2,2,1
jimmycleuren/fireping,52464eb67a8247576084378fc9b3acc8adcccdce,Jimmy Cleuren,2020-11-27 20:06:00 UTC,"Improving test coverage (#196)

* Bump symfony/translation from 5.0.8 to 5.1.0 (#222)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* phpstan fixes on datafixtures (#230)

* Bump phpstan/phpstan from 0.12.25 to 0.12.28 (#228)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.25 to 0.12.28.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.25...0.12.28)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpunit/phpunit from 9.1.5 to 9.2.2 (#225)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.1.5 to 9.2.2.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.2.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.1.5...9.2.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump php from 7.3.18-cli-stretch to 7.3.19-cli-stretch (#231)

Bumps php from 7.3.18-cli-stretch to 7.3.19-cli-stretch.

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/dotenv from 5.0.8 to 5.1.0 (#221)

* Bump symfony/dotenv from 5.0.8 to 5.1.0

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* recipe update for 5.1

* remove obsolete config/bootstrap.php

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Adminlte layout (#232)

* adminlte layout

* improving adminlte layout

* add sidebar

* adminlte layout

* improving adminlte layout

* add sidebar

* fix tests for new layout

* phpstan fix

* breadcrumb menu fix

* remove ""test"" from dashboard

* Bump symfony/flex from 1.7.1 to 1.8.1 (#236)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.7.1 to 1.8.1.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.7.1...v1.8.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.28 to 0.12.29 (#242)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.28 to 0.12.29.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.28...0.12.29)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump easycorp/easyadmin-bundle from 2.3.8 to 2.3.9 (#234)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 2.3.8 to 2.3.9.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v2.3.8...v2.3.9)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.1.0 to 5.1.1 (#233)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.1.0 to 5.1.1.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.1.0...v5.1.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/process from 5.1.0 to 5.1.1 (#235)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.0 to 5.1.1.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.0...v5.1.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/lock from 5.1.0 to 5.1.2 (#244)

Bumps [symfony/lock](https://github.com/symfony/lock) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/lock/releases)
- [Changelog](https://github.com/symfony/lock/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/lock/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Add new images for the new UI (#249)

* Replace dashboard_main_page.png.

* Change documentation that references fos:user:create

This was replaced by fireping:user:create which also does the user role promotion.

* Add note on creating the slave user.

* Replace the dashboard_overview.png file with new layout.

* Replaced dashboard_ping_traceroute_graph.png

* Remove domain_with_parent.png because the image has no replacement in the new layout.

* Replace slaves_added_list.png

* Replace dashboard_overview.png

* Replace adding_slave_user.png because UI changed

* Replace UIs

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Bump symfony/asset from 5.1.0 to 5.1.2 (#246)

Bumps [symfony/asset](https://github.com/symfony/asset) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/asset/releases)
- [Changelog](https://github.com/symfony/asset/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/asset/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/browser-kit from 5.1.0 to 5.1.2 (#245)

Bumps [symfony/browser-kit](https://github.com/symfony/browser-kit) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/browser-kit/releases)
- [Changelog](https://github.com/symfony/browser-kit/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/browser-kit/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/form from 5.1.0 to 5.1.2 (#247)

Bumps [symfony/form](https://github.com/symfony/form) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/form/releases)
- [Changelog](https://github.com/symfony/form/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/form/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/css-selector from 5.1.0 to 5.1.2 (#248)

Bumps [symfony/css-selector](https://github.com/symfony/css-selector) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/css-selector/releases)
- [Changelog](https://github.com/symfony/css-selector/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/css-selector/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Change summary graph image width to 100% of parent div (#256)

* Change summary graph image width to 100% of parent div

* Add max-width style instead of fixed 100% width.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/validator from 5.0.9 to 5.1.2 (#250)

Bumps [symfony/validator](https://github.com/symfony/validator) from 5.0.9 to 5.1.2.
- [Release notes](https://github.com/symfony/validator/releases)
- [Changelog](https://github.com/symfony/validator/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/validator/compare/v5.0.9...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Refresh the installation documentation (#259)

* Add docs/installation/database.md

* Change ""Getting started"" to ""Getting Started""

* Add templates for installation guides

* Add info to rrd-storage.md

* Add rrd-storage information

* Add templates

* Add redis section

* Add nginx installation documentation

* Add fireping installation docs

* Revert some changes to navigation.yml

* Add note on enabling and reloading nginx configuration.

* Add section on making sure redis-server is up and running.

* Add section on making sure mariadb-server is up and running.

* Update install docs for fireping and slave setups

* Add Gemfile.lock (from local build)

* update asset reference and update some files

* update refs, add templates, update links

* move master/slave.md to slave/fireping.md and update slave/getting-started.md

* Add supervisord section

* fix permalinks on supervisor and getting-started.md

* Change ""Debian 9"" to ""Debian""

* Add logrotate.md for slave/master.

* Rename ""Slaves"" to ""Fireping"" in slave documentation.

* Fix broken references

* Remove unused page.

* Add docker page and remove old unused pages.

* Remove old unused page.

* Remove old links from navigation.yml

* update refs

* Remove ansible.md

Why? Because this was essentially the same as the docker installation, just with more steps.

* Remove old unused file

* fix getting-started ref

* update pages

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/cache from 5.1.0 to 5.1.2 (#252)

Bumps [symfony/cache](https://github.com/symfony/cache) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/cache/releases)
- [Changelog](https://github.com/symfony/cache/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/cache/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/twig-bundle from 5.1.0 to 5.1.2 (#253)

Bumps [symfony/twig-bundle](https://github.com/symfony/twig-bundle) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/twig-bundle/releases)
- [Changelog](https://github.com/symfony/twig-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/twig-bundle/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.1.1 to 5.1.2 (#255)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.1.1 to 5.1.2.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.1.1...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/translation from 5.1.0 to 5.1.2 (#258)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Create CNAME

* Delete CNAME

* Fix install faults (#265)

* Make some changes based on feedback.

* Do not run composer scripts, run commands manually.

* Prepend sudo before reverse proxy commands

* Make sure the log file is writable by anyone (incl. the webserver user)

Else the application won't start and will only generate HTTP 500 responses.

* Make sure the log file is writable by anyone (incl. the webserver user)

Else the application won't start and will only generate HTTP 500 responses.

* Fix git clone documentation

* Don't run cache:clear and cache:warmup in prod on a slave...

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add chmod 777 to $INSTALL_DIR/var/rrd/ (#267)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add more robust mkdir failure detection. (#266)

* Add better mkdir failure detection.

* Add more robust mkdir handling

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/dotenv from 5.1.0 to 5.1.2 (#257)

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* SYMFONY_ENV is now APP_ENV (#269)

* Bump guzzlehttp/guzzle from 6.5.4 to 6.5.5 (#260)

Bumps [guzzlehttp/guzzle](https://github.com/guzzle/guzzle) from 6.5.4 to 6.5.5.
- [Release notes](https://github.com/guzzle/guzzle/releases)
- [Changelog](https://github.com/guzzle/guzzle/blob/6.5.5/CHANGELOG.md)
- [Commits](https://github.com/guzzle/guzzle/compare/6.5.4...6.5.5)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/flex from 1.8.1 to 1.8.4 (#264)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.8.1 to 1.8.4.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.8.1...v1.8.4)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Create Dependabot config file (#270)

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/process from 5.1.1 to 5.1.2 (#261)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.1 to 5.1.2.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.1...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpunit/phpunit from 9.2.2 to 9.2.3 (#262)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.2.2 to 9.2.3.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.2.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.2.2...9.2.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/security-bundle from 5.1.0 to 5.1.2 (#263)

Bumps [symfony/security-bundle](https://github.com/symfony/security-bundle) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/security-bundle/releases)
- [Changelog](https://github.com/symfony/security-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/security-bundle/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump sensio/framework-extra-bundle from 5.5.5 to 5.5.6 (#254)

Bumps [sensio/framework-extra-bundle](https://github.com/sensiolabs/SensioFrameworkExtraBundle) from 5.5.5 to 5.5.6.
- [Release notes](https://github.com/sensiolabs/SensioFrameworkExtraBundle/releases)
- [Changelog](https://github.com/sensiolabs/SensioFrameworkExtraBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/sensiolabs/SensioFrameworkExtraBundle/compare/v5.5.5...v5.5.6)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove files from legacy Symfony versions. (#271)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump doctrine/doctrine-migrations-bundle to ^3.0. (#272)

* Bump doctrine/doctrine-migrations-bundle to ^3.0.

Resolves deprecation notices.

* Regenerate composer.lock after merge

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Resolve deprecations and use latest flex recipes. (#273)

* Use latest symfony/framework-bundle recipe

This resolves a number of deprecations related to outdated Kernel functionality.

* Use latest doctrine/doctrine-bundle recipe

This requires master installs to explicitly add the serverVersion information to their DATABASE_URL. The install docs already mention that this is required.

I can pre-emptively update this on the fireping master to mariadb-10.1.26.

However, running database installs shouldn't be affected anyway as doctrine will try to guess the server version anyway.

* Force install new symfony/routes recipe.

* Force install new symfony/security-bundle recipe.

* Force install new symfony/security-bundle recipe.

* Force install new monolog recipe.

* Pin doctrine/inflector to <1.4

This is necessary to remove hundreds of deprecation notices being spammed into our log files continuously. This is a recent deprecation that won't be fixed until doctrine/orm:2.8.

After we've upgraded to doctrine/orm:2.8, we can safely remove this as a root requirement again.

I've already created an issue for this to remind us when the time comes.

Loading the index page now shows about 200 fewer deprecations.

* Regenerate composer.json, composer.lock after merge

* Trigger Travis rebuild...

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Resolve deprecations related to service_container alias and outdated indirect dependencies. (#275)

* update indirect dependencies

Resolves deprecations in symfony/property-info and symfony/property-access.

* Explicitly alias Psr\Container\ContainerInterface to @service_container

This default alias was deprecated in Symfony 5.1, but we were using it.

* Retrigger build?

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Create CNAME

* Update CNAME

* Update CNAME

* Bump easycorp/easyadmin-bundle from 2.3.9 to 3.0.0 (#277)

* Bump easycorp/easyadmin-bundle from 2.3.9 to 3.0.0

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 2.3.9 to 3.0.0.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v2.3.9...v3.0.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

* easyadmin upgrade changes

* easyadmin upgrade changes

* Add enabled BooleanField to new and edit User views.

* Add null-check to hashPassword.

This prevents the Admin controller from attempting to change the password when none is given.

* Change ROLE_USER to ROLE_API.

At the moment, we don't have a concept of ""ROLE_USER"" in Fireping.

* Add troubleshooting guide.

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>
Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Bump phpunit/phpunit from 9.2.3 to 9.2.5 (#282)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.2.3 to 9.2.5.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.2.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.2.3...9.2.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* phpstan level 5 (#278)

* Add note that the docker installation is an express install. (#281)

It's not necessary to do this if you already manually installed the application prior.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpstan/phpstan from 0.12.29 to 0.12.30 (#279)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.29 to 0.12.30.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.29...0.12.30)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/polyfill-apcu from 1.17.0 to 1.17.1 (#285)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.17.0 to 1.17.1.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.17.0...v1.17.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* remove unnecessary fields + actions (#286)

* Prevent modification of a Probe. (#283)

* Prevent changes to Step/Samples of Probe.

* Prevent any changes except the name.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Ensure broken results are discarded by the ProbeDispatcher. (#284)

* Add DirtyInputException.php

* Throw DirtyInputException instead of \Exception when input data is dirty.

Examples of such cases:

- Expected sample count and actual sample count mismatch
- Essential data missing from request

* Send an HTTP 409 Response for DirtyInputExceptions.

These occur for requests where the input data was dirty and could not be processed. These are irrecoverable since the slave will not be able to correct this. As a result of the current implementation, the probe dispatcher will continue to retry these transactions (because any request that triggers a non-200/non-409 response is retried forever.)

* Change test to assert for HTTP 409 instead of HTTP 500.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add missing details to install docs. (#287)

* Automatically determine the Debian release.

* Add sudo to create directory in /opt.

* Rename composer to composer.phar.

This is what you're left with after a default install.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Set storage.table_storage.table_name to migration_versions. (#288)

In the latest doctrine/doctrine-migrations-bundle release this defaults to doctrine_migration_versions.

You also need to run the following command on a master instance:

php bin/console doctrine:migrations:sync-metadata-storage

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add configuration details to rrd-storage.md (#294)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add more details to redis.md (#295)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add section on creating a dedicated Fireping user for your master installation. (#296)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Simplify the example configuration for supervisor.md (#293)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add information on setting the STORAGE driver in .env.local. (#289)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove all ""Created by PhpStorm."" file docblocks. (#298)

We don't do them consistently and they don't really add value anyway.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add latest version of symfony.lock. (#299)

For some reason (and I noticed this on other installs as well), the symfony.lock file changes when performing a composer install.

This is the latest version.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump easycorp/easyadmin-bundle from 3.0.0 to 3.0.1 (#301)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.0.0 to 3.0.1.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.0.0...v3.0.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Fix test flakiness in RrdCachedStorage by mounting the rrdcached filesystem locally. (#300)

* Mount a volume into ./var/rrd/test to test RrdCachedStorage.

This works locally, question is if it'll work on Travis. Basically, RrdCachedStorage *expects* the daemon to be running locally. Obviously, we aren't doing that on Travis nor on our local docker-compose stack, so this is a workaround. We first create a volume, then mount that named volume into both the php and rrdcached containers. As we create files into the rrdcached container, they'll be shared to the PHP container as-if they were local.

It took some blood, sweat and tears to get this working, and it's dirty as hell, but it works. We'll do something better at a later date. At least we don't have to remove the test this way just to stop it being flaky.

* Remove the quotation marks.

Looking at other examples online, this may not be necessary.

* Add echo on the TRAVIS_BUILD_DIR

* Try /tmp/fireping/rrd/test instead of cache map

* Change /var/rrd/test to /tmp/fireping/rrd.

This should avoid the issue of ruining the cache directory.

* Adjust the volume path to the correct one.

* Add debugs

* Add some debugging.

* Add some debugging.

* Add some debugging.

* Try to run rrdcached as root

* Try to run rrdcached as root

* Try to run rrdcached as root

* Try to run rrdcached as root

* Add some documentation to .travis.yml and remove dump statements.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add demo button. (#303)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Remove apiToken from User.php (#305)

Also remove the associated (albeit unused) TokenAuthenticator.php.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove base.html.twig (#314)

All of our templates extend from base-adminlte.html.twig, making this file obsolete.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove MenuExtension.php (#306)

This was used in the old UI but is not longer being used as far as I can tell.

Safe to remove this dead code.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove old OutputFormatters (#307)

These aren't being used and there are no plans of reintroducing them.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove TracerouteException.php (#308)

This is no longer being used.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove INSTALL from repository. (#309)

* Remove INSTALL from repository.

All installation instructions were moved to https://fireping.com and should be reference there.

* Remove ./config/fireping-slave.conf example.

This has moved to the installation documentation found on https://fireping.com.

* Remove config/logrotate/fireping-slave

This was part of the INSTALL instructions as well.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove Bower integration (#310)

Bower is no longer actively supported and they recommend migrating to yarn+webpack instead. Either way, we don't need this for the time being.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Remove public/config.php (#311)

This file was a part of sensio/distribution-bundle that is not compatible since Symfony 4/Flex. Safe to remove this file.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove twig_extensions.yaml (#312)

This was part of the twig/extensions library that we used to depend on, but no longer do.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove ansible/ directory. (#313)

This is unmaintained, not up-to-date, and all it does is start a docker container.

We might wish to reintroduce this at some point, but I don't want anyone to start depending on this before v1.0.

Besides, if we were ever to actively want to support this, we should extract it to its own repository apart from the main code repository.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Drop the fos_user table. (#304)

* Drop the fos_user table.

This was migrated in #116 but we never created the migration to remove the old table afterwards.

This now shows up when trying to generate new database migrations.

* Rename the class to match filename.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add a unique constraint to names within parents. (#316)

* Add a unique constraint to names within parents.

This adds two things:

- a database constraint preventing duplicate name entries within the same parent domain
- an application-level validation constraint that will generate error messages for attempts to do so.

Note that because for MySQL, two NULL values are -not- equal, this does not prevent multiple root domains with the same name on a database level (i.e. because of a race condition). We could avoid this by setting the parent_id column to NOT NULL and instead assuming the value 0 or -1 is ""root domain"".

That way, a created index would be 0-name or -1-name, which can constrained for uniqueness.

This closes #32 and #37.

* Add description to the generated migration.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpstan/phpstan from 0.12.30 to 0.12.31 (#317)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.30 to 0.12.31.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.30...0.12.31)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add FQDN to domains and a domain's parent. (#315)

* Add getFqdn() to Domain.php

This will construct a fully qualified domain name towards the root /.

Example structure:

- root (fqdn: /root)
 - var (fqdn: /root/var)
  - www (fqdn: /root/var/www)
   - fireping (fqdn: /root/var/www/fireping)
    - src (fqdn: /root/var/www/fireping/src)

* Add FQDN support to index/detail pages for domain and its parent.

* Change domain separators from ""/"" to "" > "".

This also removes the root domain separator prefix.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add hostname recognition to PingOutputFormatter.php (#320)

This closes #318

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* add reverse proxy steps (#322)

* add reverse proxy steps

* add reverse proxy steps

* php-cs-fixes (#323)

* Calculate time once per dispatching cycle. (#326)

* Use (int) typecasting instead of intval()

* Grab time() only once per cycle instead of for every individual task.

* Remove GUID from instruction, unused feature

* style fix

* Pass timestamp to workers

* Use timestamp from master

* Don't throw an Exception on Worker level.

It'll cause the process to exit.

* Remove the thrown exception.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Form/probe/better argument uis (#321)

* Add domain model PingArguments for arguments.

* Add PingArgumentsType form type model

* Add custom field rendering for probe arguments.

* Use ProbeArgumentsField.php for arguments instead of TextareaField

Also use a custom theme for the index and detail views.

* Add a PingArgumentsField

* Add interface and abstract implementation for ProbeArguments.php

This allows us to move the ArrayAccess implementation to just the abstract class.

* Extend PingArguments from ProbeArguments

* Add initial implementation for Http/TracerouteArguments

* Replace PingArguments with ProbeArgumentsInterface in Probe.php

* Add HttpArgumentsType.php and TracerouteArgumentsType.php

* Rename ping_arguments.html.twig to probe_arguments.twig

* Remove arguments from search fields

* Add ProbeArgumentsType.php

This will function as the parent for all implementing classes so that we can assign a general blockPrefix to it.

* Do not set the FormType on a ProbeArgumentsField.php

We need to override this after fields were initialized but before the form gets rendered.

* Remove Arguments from the Probe ""new"" view.

We can't dynamically determine the type at that point yet.

* Set the parent to ProbeArgumentsType on all ArgumentsTypes.

* Change ping_arguments_row to probe_arguments_row

This works now because we set the parent, which explicitly defines the block prefix as ""probe_arguments"".

* Add default type ping and arguments {}

* Add some default settings to HttpArguments.php

* Suffix probe_arguments.twig as probe_arguments.html.twig

* Render as an int field

NumberType renders as a text field (that specializes in number handling).

* Remove setArguments call in Fixtures

They're not setting any explicit arguments, so the default value works fine.

* Modify the arguments type prior to form creation.

* Add NullArguments.php

This represents ""nothing"" which is used in cases where the type of the probe is unrecognized.

Using a NullObject in this context means we don't have to throw an exception if we don't recognize the given type.

* Return NullArguments when type is unrecognized.

* Don't test with dirty fixtures.

* Create a default ProbeArgumentsType when type is unrecognized

* Use asArray function instead of manually decoding the arguments.

* Add type dummy back to dummy probe.

This was being used in some tests and doesn't need to be not-dummy anymore since reworking some other bits of the code.

* Move Arguments to their own Model\ProbeArgument namespace.

* Make *Arguments constructors private

* Remove test variables from HttpArguments.php

* Remove unnecessary children to HttpArgumentsType.php

* Add tests for *Arguments classes.

* Don't use NullArguments constructor

* Apply PHP-CS-Fixer fixes

* added http probe arguments

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Removing fireping subfolder from doc links (#327)

* Http probe (#302)

* http probe initial version

* http probe initial version

* throw correct exception

* http tests

* add gradients to http response graphs and add tests

* add new fetchall method

* implement fetchall for rrdcached

* fixing tests

* fixing last test

* http probe initial version

* throw correct exception

* http tests

* add gradients to http response graphs and add tests

* add new fetchall method

* implement fetchall for rrdcached

* fixing tests

* fixing last test

* additional tests

* remove obsolete exception

* remove obsolete comment

* arguments is not required anymore

* fixed a worker being released twice (#330)

* Bump easycorp/easyadmin-bundle from 3.0.1 to 3.0.2 (#329)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.0.1 to 3.0.2.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.0.1...v3.0.2)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Fix unordered ping arguments causing error (#332)

* fix unordered arguments causing error

* fixing test

* remove timestamp check (#333)

* is_array does not work for objects :) (#338)

* Bump phpstan/phpstan from 0.12.31 to 0.12.32 (#337)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.31 to 0.12.32.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.31...0.12.32)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump react/socket from 1.4.0 to 1.5.0 (#336)

Bumps [react/socket](https://github.com/reactphp/socket) from 1.4.0 to 1.5.0.
- [Release notes](https://github.com/reactphp/socket/releases)
- [Changelog](https://github.com/reactphp/socket/blob/master/CHANGELOG.md)
- [Commits](https://github.com/reactphp/socket/compare/v1.4.0...v1.5.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Master docker (#147)

* bump version and prepare for master docker container

* prepare for unified container

* unified docker file

* production docker setup

* update install doc

* update install doc

* update install doc

* Bump symfony/security-http from 4.4.5 to 4.4.7 (#148)

Bumps [symfony/security-http](https://github.com/symfony/security-http) from 4.4.5 to 4.4.7.
- [Release notes](https://github.com/symfony/security-http/releases)
- [Commits](https://github.com/symfony/security-http/compare/v4.4.5...v4.4.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Throw exception when worker process does not return data in time. This probably means the worker has crashed and the workermanager should release and terminate that worker permanently. (#151)

* Bump easycorp/easyadmin-bundle from 2.3.5 to 2.3.7 (#156)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 2.3.5 to 2.3.7.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v2.3.5...v2.3.7)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Enable php7.4 testing on travis (#153)

* add php 7.4 to travis

* initialize worker name correctly

* fixing php7.4 testing

* fix travis warnings

* Bump sensiolabs/security-checker from 5.0.3 to 6.0.3 (#160)

Bumps [sensiolabs/security-checker](https://github.com/sensiolabs/security-checker) from 5.0.3 to 6.0.3.
- [Release notes](https://github.com/sensiolabs/security-checker/releases)
- [Commits](https://github.com/sensiolabs/security-checker/compare/v5.0.3...v6.0.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump api-platform/api-pack from 1.2.1 to 1.2.2 (#155)

Bumps [api-platform/api-pack](https://github.com/api-platform/api-pack) from 1.2.1 to 1.2.2.
- [Release notes](https://github.com/api-platform/api-pack/releases)
- [Commits](https://github.com/api-platform/api-pack/compare/v1.2.1...v1.2.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpstan/phpstan from 0.10.9 to 0.12.19 (#157)

* Bump phpstan/phpstan from 0.10.9 to 0.12.19

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.10.9 to 0.12.19.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.10.9...0.12.19)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* add return statements to all commands
remove obsolete phpstan configuration

* correct return values

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump squizlabs/php_codesniffer from 3.5.4 to 3.5.5 (#161)

Bumps [squizlabs/php_codesniffer](https://github.com/squizlabs/PHP_CodeSniffer) from 3.5.4 to 3.5.5.
- [Release notes](https://github.com/squizlabs/PHP_CodeSniffer/releases)
- [Commits](https://github.com/squizlabs/PHP_CodeSniffer/compare/3.5.4...3.5.5)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump sensio/framework-extra-bundle from 5.5.3 to 5.5.4 (#163)

Bumps [sensio/framework-extra-bundle](https://github.com/sensiolabs/SensioFrameworkExtraBundle) from 5.5.3 to 5.5.4.
- [Release notes](https://github.com/sensiolabs/SensioFrameworkExtraBundle/releases)
- [Changelog](https://github.com/sensiolabs/SensioFrameworkExtraBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/sensiolabs/SensioFrameworkExtraBundle/compare/v5.5.3...v5.5.4)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/security-bundle from 4.4.5 to 4.4.8 (#170)

Bumps [symfony/security-bundle](https://github.com/symfony/security-bundle) from 4.4.5 to 4.4.8.
- [Release notes](https://github.com/symfony/security-bundle/releases)
- [Changelog](https://github.com/symfony/security-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/security-bundle/compare/v4.4.5...v4.4.8)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump doctrine/doctrine-fixtures-bundle from 3.3.0 to 3.3.1 (#167)

Bumps [doctrine/doctrine-fixtures-bundle](https://github.com/doctrine/DoctrineFixturesBundle) from 3.3.0 to 3.3.1.
- [Release notes](https://github.com/doctrine/DoctrineFixturesBundle/releases)
- [Changelog](https://github.com/doctrine/DoctrineFixturesBundle/blob/master/CHANGELOG-3.1.md)
- [Commits](https://github.com/doctrine/DoctrineFixturesBundle/compare/3.3.0...3.3.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/form from 4.4.5 to 4.4.8 (#165)

Bumps [symfony/form](https://github.com/symfony/form) from 4.4.5 to 4.4.8.
- [Release notes](https://github.com/symfony/form/releases)
- [Changelog](https://github.com/symfony/form/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/form/compare/v4.4.5...v4.4.8)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.19 to 0.12.22 (#171)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.19 to 0.12.22.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.19...0.12.22)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpunit/phpunit from 7.5.20 to 8.5.4 (#168)

* Bump phpunit/phpunit from 7.5.20 to 8.5.4

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 7.5.20 to 8.5.4.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-8.5.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/7.5.20...8.5.4)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* phpunit upgrade adjustments

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/polyfill-apcu from 1.14.0 to 1.15.0 (#174)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.14.0 to 1.15.0.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.14.0...v1.15.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump eightpoints/guzzle-bundle from 7.6.1 to 8.1.0 (#175)

Bumps [eightpoints/guzzle-bundle](https://github.com/8p/EightPointsGuzzleBundle) from 7.6.1 to 8.1.0.
- [Release notes](https://github.com/8p/EightPointsGuzzleBundle/releases)
- [Upgrade guide](https://github.com/8p/EightPointsGuzzleBundle/blob/master/UPGRADE.md)
- [Commits](https://github.com/8p/EightPointsGuzzleBundle/compare/v7.6.1...v8.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump snc/redis-bundle from 2.1.13 to 3.2.2 (#173)

Bumps [snc/redis-bundle](https://github.com/snc/SncRedisBundle) from 2.1.13 to 3.2.2.
- [Release notes](https://github.com/snc/SncRedisBundle/releases)
- [Changelog](https://github.com/snc/SncRedisBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/snc/SncRedisBundle/compare/2.1.13...3.2.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Replace fos user bundle (#116)

* removed fos-user bundle, added guard authenticator

* removed an entry from previous branch

* fixed security.yaml config mistake

* added missing template

* modded user fixture

* weird char escaping in migration

* fixing migration statements

* modified migration

* made a whoopsy

* trying to fix migs

* added user creation command

* removed unnecessary code

* add tostring method on user entity

* phpstan fix

Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Recreate #114: Remove our own dependency on the templating component (#152)

* Recreate #114

* remove templating component from mailtest

* Bump doctrine/doctrine-bundle from 1.12.7 to 2.0.8 (#164)

* Bump doctrine/doctrine-bundle from 1.12.7 to 2.0.8

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 1.12.7 to 2.0.8.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/1.12.7...2.0.8)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* Bump doctrine/doctrine-bundle from 1.12.7 to 2.0.8

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 1.12.7 to 2.0.8.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/1.12.7...2.0.8)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* fixing merge conflicts

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Symfony 5.0 upgrade (#181)

* update all recipes

* fix ident

* fix minimum php version

* move master-specific config the the config/master and include in the 3 relevant environments

* move master-specific config the the config/master and include in the 3 relevant environments

* still need the session key for the slave env

* Bump doctrine/doctrine-bundle from 1.12.7 to 2.0.8 (#164)

* Bump doctrine/doctrine-bundle from 1.12.7 to 2.0.8

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 1.12.7 to 2.0.8.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/1.12.7...2.0.8)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* Bump doctrine/doctrine-bundle from 1.12.7 to 2.0.8

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 1.12.7 to 2.0.8.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/1.12.7...2.0.8)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* fixing merge conflicts

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* update all recipes

* fix ident

* fix minimum php version

* move master-specific config the the config/master and include in the 3 relevant environments

* move master-specific config the the config/master and include in the 3 relevant environments

* still need the session key for the slave env

* update composer.json to symfony 5.0

* composer update to symfony 5.0

* changes for symfony 5.0

* fix tests

* woops

* fixing travis rrdcached

* fixing travis rrdcached

* fixing travis rrdcached

* minimum php version

* extra rrdcachedstorage test

* fix errors.xml location

* config is now located in framework.yaml, twig.yaml can be removed

* text fix

* restore command tagging

* handle unknown command as exception

* flush rrdcached first before reading the datasources

* flush before retrieving datasources and temporary test fix

* increase the timestamp by 1 every test to avoid conflicts

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump easycorp/easyadmin-bundle from 2.3.7 to 2.3.8 (#186)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 2.3.7 to 2.3.8.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v2.3.7...v2.3.8)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.22 to 0.12.23 (#187)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.22 to 0.12.23.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.22...0.12.23)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump guzzlehttp/guzzle from 6.5.2 to 6.5.3 (#185)

Bumps [guzzlehttp/guzzle](https://github.com/guzzle/guzzle) from 6.5.2 to 6.5.3.
- [Release notes](https://github.com/guzzle/guzzle/releases)
- [Changelog](https://github.com/guzzle/guzzle/blob/6.5.3/CHANGELOG.md)
- [Commits](https://github.com/guzzle/guzzle/compare/6.5.2...6.5.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump react/stream from 1.1.0 to 1.1.1 (#188)

Bumps [react/stream](https://github.com/reactphp/stream) from 1.1.0 to 1.1.1.
- [Release notes](https://github.com/reactphp/stream/releases)
- [Changelog](https://github.com/reactphp/stream/blob/master/CHANGELOG.md)
- [Commits](https://github.com/reactphp/stream/compare/v1.1.0...v1.1.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump react/socket from 1.3.0 to 1.4.0 (#184)

Bumps [react/socket](https://github.com/reactphp/socket) from 1.3.0 to 1.4.0.
- [Release notes](https://github.com/reactphp/socket/releases)
- [Changelog](https://github.com/reactphp/socket/blob/master/CHANGELOG.md)
- [Commits](https://github.com/reactphp/socket/compare/v1.3.0...v1.4.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/maker-bundle from 1.16.0 to 1.17.0 (#190)

Bumps [symfony/maker-bundle](https://github.com/symfony/maker-bundle) from 1.16.0 to 1.17.0.
- [Release notes](https://github.com/symfony/maker-bundle/releases)
- [Changelog](https://github.com/symfony/maker-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/maker-bundle/compare/v1.16.0...v1.17.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump doctrine/orm from 2.7.1 to 2.7.2 (#192)

Bumps [doctrine/orm](https://github.com/doctrine/orm) from 2.7.1 to 2.7.2.
- [Release notes](https://github.com/doctrine/orm/releases)
- [Commits](https://github.com/doctrine/orm/compare/v2.7.1...v2.7.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump sensio/framework-extra-bundle from 5.5.4 to 5.5.5 (#191)

Bumps [sensio/framework-extra-bundle](https://github.com/sensiolabs/SensioFrameworkExtraBundle) from 5.5.4 to 5.5.5.
- [Release notes](https://github.com/sensiolabs/SensioFrameworkExtraBundle/releases)
- [Changelog](https://github.com/sensiolabs/SensioFrameworkExtraBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/sensiolabs/SensioFrameworkExtraBundle/compare/v5.5.4...v5.5.5)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump twig/twig from 2.12.5 to 3.0.3 (#178)

* Bump twig/twig from 2.12.5 to 3.0.3

Bumps [twig/twig](https://github.com/twigphp/Twig) from 2.12.5 to 3.0.3.
- [Release notes](https://github.com/twigphp/Twig/releases)
- [Changelog](https://github.com/twigphp/Twig/blob/3.x/CHANGELOG)
- [Commits](https://github.com/twigphp/Twig/compare/v2.12.5...v3.0.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* fix return type

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/polyfill-apcu from 1.15.0 to 1.16.0 (#193)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.15.0 to 1.16.0.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.15.0...v1.16.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/flex from 1.6.2 to 1.6.3 (#194)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.6.2 to 1.6.3.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.6.2...v1.6.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.23 to 0.12.25 (#195)

* Bump phpstan/phpstan from 0.12.23 to 0.12.25

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.23 to 0.12.25.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.23...0.12.25)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* add return statement

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Slave stats (#189)

* initial statistics from slaves

* add ability to dynamically add sources to rrdstorage

* fix broken tests

* phpstan fixes

* initial statistics from slaves

* add ability to dynamically add sources to rrdstorage

* fix broken tests

* phpstan fixes

* add load and memory graphs

* add some tests

* make sure we have a second between the 2 updates

* adding successful posts as a metric

* test for successful posts

* consistent php version 7.3
remove 7.2 from travis config since it's no longer supported

* change json field to longtext, so we can support mysql 5.6 and mariadb < 10.2.3 (#197)

* Mysql 5.6 support (#198)

* change json field to longtext, so we can support mysql 5.6 and mariadb < 10.2.3

* limit unique columns to 180 characters for mysql 5.6 support

* correct slave memory display (#201)

* Bump symfony/polyfill-apcu from 1.16.0 to 1.17.0 (#200)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.16.0 to 1.17.0.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.16.0...v1.17.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpunit/phpunit from 8.5.4 to 9.1.4 (#199)

* Bump phpunit/phpunit from 8.5.4 to 9.1.4

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 8.5.4 to 9.1.4.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-8.5.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/8.5.4...9.1.4)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* update to phpunit 9.1

* fix deprecations in phpunit 9

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/maker-bundle from 1.17.0 to 1.18.0 (#203)

Bumps [symfony/maker-bundle](https://github.com/symfony/maker-bundle) from 1.17.0 to 1.18.0.
- [Release notes](https://github.com/symfony/maker-bundle/releases)
- [Changelog](https://github.com/symfony/maker-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/maker-bundle/compare/v1.17.0...v1.18.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/flex from 1.6.3 to 1.7.0 (#204)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.6.3 to 1.7.0.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.6.3...v1.7.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpunit/phpunit from 9.1.4 to 9.1.5 (#205)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.1.4 to 9.1.5.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.1.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.1.4...9.1.5)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump guzzlehttp/guzzle from 6.5.3 to 6.5.4 (#207)

Bumps [guzzlehttp/guzzle](https://github.com/guzzle/guzzle) from 6.5.3 to 6.5.4.
- [Release notes](https://github.com/guzzle/guzzle/releases)
- [Changelog](https://github.com/guzzle/guzzle/blob/6.5.4/CHANGELOG.md)
- [Commits](https://github.com/guzzle/guzzle/compare/6.5.3...6.5.4)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump doctrine/doctrine-bundle from 2.0.8 to 2.1.0 (#206)

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 2.0.8 to 2.1.0.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/2.0.8...2.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/flex from 1.7.0 to 1.7.1 (#208)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.7.0 to 1.7.1.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.7.0...v1.7.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump doctrine/orm from 2.7.2 to 2.7.3 (#209)

Bumps [doctrine/orm](https://github.com/doctrine/orm) from 2.7.2 to 2.7.3.
- [Release notes](https://github.com/doctrine/orm/releases)
- [Commits](https://github.com/doctrine/orm/compare/v2.7.2...v2.7.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/maker-bundle from 1.18.0 to 1.19.0 (#212)

Bumps [symfony/maker-bundle](https://github.com/symfony/maker-bundle) from 1.18.0 to 1.19.0.
- [Release notes](https://github.com/symfony/maker-bundle/releases)
- [Changelog](https://github.com/symfony/maker-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/maker-bundle/compare/v1.18.0...v1.19.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.0.8 to 5.1.0 (#210)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/form from 5.0.8 to 5.1.0 (#211)

Bumps [symfony/form](https://github.com/symfony/form) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/form/releases)
- [Changelog](https://github.com/symfony/form/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/form/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/lock from 5.0.8 to 5.1.0 (#213)

Bumps [symfony/lock](https://github.com/symfony/lock) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/lock/releases)
- [Changelog](https://github.com/symfony/lock/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/lock/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/browser-kit from 5.0.8 to 5.1.0 (#214)

Bumps [symfony/browser-kit](https://github.com/symfony/browser-kit) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/browser-kit/releases)
- [Changelog](https://github.com/symfony/browser-kit/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/browser-kit/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump snc/redis-bundle from 3.2.2 to 3.2.3 (#224)

Bumps [snc/redis-bundle](https://github.com/snc/SncRedisBundle) from 3.2.2 to 3.2.3.
- [Release notes](https://github.com/snc/SncRedisBundle/releases)
- [Changelog](https://github.com/snc/SncRedisBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/snc/SncRedisBundle/compare/3.2.2...3.2.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/validator from 5.0.8 to 5.0.9 (#220)

Bumps [symfony/validator](https://github.com/symfony/validator) from 5.0.8 to 5.0.9.
- [Release notes](https://github.com/symfony/validator/releases)
- [Changelog](https://github.com/symfony/validator/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/validator/compare/v5.0.8...v5.0.9)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/asset from 5.0.8 to 5.1.0 (#223)

Bumps [symfony/asset](https://github.com/symfony/asset) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/asset/releases)
- [Changelog](https://github.com/symfony/asset/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/asset/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/cache from 5.0.8 to 5.1.0 (#216)

Bumps [symfony/cache](https://github.com/symfony/cache) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/cache/releases)
- [Changelog](https://github.com/symfony/cache/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/cache/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/twig-bundle from 5.0.8 to 5.1.0 (#215)

Bumps [symfony/twig-bundle](https://github.com/symfony/twig-bundle) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/twig-bundle/releases)
- [Changelog](https://github.com/symfony/twig-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/twig-bundle/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/css-selector from 5.0.8 to 5.1.0 (#218)

Bumps [symfony/css-selector](https://github.com/symfony/css-selector) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/css-selector/releases)
- [Changelog](https://github.com/symfony/css-selector/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/css-selector/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/process from 5.0.8 to 5.1.0 (#217)

Bumps [symfony/process](https://github.com/symfony/process) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/security-bundle from 5.0.8 to 5.1.0 (#219)

Bumps [symfony/security-bundle](https://github.com/symfony/security-bundle) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/security-bundle/releases)
- [Changelog](https://github.com/symfony/security-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/security-bundle/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* remove deprecated logout redirection (#229)

* Bump symfony/translation from 5.0.8 to 5.1.0 (#222)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* phpstan fixes on datafixtures (#230)

* Bump phpstan/phpstan from 0.12.25 to 0.12.28 (#228)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.25 to 0.12.28.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.25...0.12.28)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpunit/phpunit from 9.1.5 to 9.2.2 (#225)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.1.5 to 9.2.2.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.2.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.1.5...9.2.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/dotenv from 5.0.8 to 5.1.0 (#221)

* Bump symfony/dotenv from 5.0.8 to 5.1.0

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.0.8 to 5.1.0.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.0.8...v5.1.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* recipe update for 5.1

* remove obsolete config/bootstrap.php

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Adminlte layout (#232)

* adminlte layout

* improving adminlte layout

* add sidebar

* adminlte layout

* improving adminlte layout

* add sidebar

* fix tests for new layout

* phpstan fix

* breadcrumb menu fix

* remove ""test"" from dashboard

* Bump symfony/flex from 1.7.1 to 1.8.1 (#236)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.7.1 to 1.8.1.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.7.1...v1.8.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.28 to 0.12.29 (#242)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.28 to 0.12.29.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.28...0.12.29)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump easycorp/easyadmin-bundle from 2.3.8 to 2.3.9 (#234)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 2.3.8 to 2.3.9.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v2.3.8...v2.3.9)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.1.0 to 5.1.1 (#233)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.1.0 to 5.1.1.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.1.0...v5.1.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/process from 5.1.0 to 5.1.1 (#235)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.0 to 5.1.1.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.0...v5.1.1)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/lock from 5.1.0 to 5.1.2 (#244)

Bumps [symfony/lock](https://github.com/symfony/lock) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/lock/releases)
- [Changelog](https://github.com/symfony/lock/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/lock/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Add new images for the new UI (#249)

* Replace dashboard_main_page.png.

* Change documentation that references fos:user:create

This was replaced by fireping:user:create which also does the user role promotion.

* Add note on creating the slave user.

* Replace the dashboard_overview.png file with new layout.

* Replaced dashboard_ping_traceroute_graph.png

* Remove domain_with_parent.png because the image has no replacement in the new layout.

* Replace slaves_added_list.png

* Replace dashboard_overview.png

* Replace adding_slave_user.png because UI changed

* Replace UIs

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Bump symfony/asset from 5.1.0 to 5.1.2 (#246)

Bumps [symfony/asset](https://github.com/symfony/asset) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/asset/releases)
- [Changelog](https://github.com/symfony/asset/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/asset/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/browser-kit from 5.1.0 to 5.1.2 (#245)

Bumps [symfony/browser-kit](https://github.com/symfony/browser-kit) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/browser-kit/releases)
- [Changelog](https://github.com/symfony/browser-kit/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/browser-kit/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/form from 5.1.0 to 5.1.2 (#247)

Bumps [symfony/form](https://github.com/symfony/form) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/form/releases)
- [Changelog](https://github.com/symfony/form/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/form/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/css-selector from 5.1.0 to 5.1.2 (#248)

Bumps [symfony/css-selector](https://github.com/symfony/css-selector) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/css-selector/releases)
- [Changelog](https://github.com/symfony/css-selector/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/css-selector/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Change summary graph image width to 100% of parent div (#256)

* Change summary graph image width to 100% of parent div

* Add max-width style instead of fixed 100% width.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/validator from 5.0.9 to 5.1.2 (#250)

Bumps [symfony/validator](https://github.com/symfony/validator) from 5.0.9 to 5.1.2.
- [Release notes](https://github.com/symfony/validator/releases)
- [Changelog](https://github.com/symfony/validator/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/validator/compare/v5.0.9...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Refresh the installation documentation (#259)

* Add docs/installation/database.md

* Change ""Getting started"" to ""Getting Started""

* Add templates for installation guides

* Add info to rrd-storage.md

* Add rrd-storage information

* Add templates

* Add redis section

* Add nginx installation documentation

* Add fireping installation docs

* Revert some changes to navigation.yml

* Add note on enabling and reloading nginx configuration.

* Add section on making sure redis-server is up and running.

* Add section on making sure mariadb-server is up and running.

* Update install docs for fireping and slave setups

* Add Gemfile.lock (from local build)

* update asset reference and update some files

* update refs, add templates, update links

* move master/slave.md to slave/fireping.md and update slave/getting-started.md

* Add supervisord section

* fix permalinks on supervisor and getting-started.md

* Change ""Debian 9"" to ""Debian""

* Add logrotate.md for slave/master.

* Rename ""Slaves"" to ""Fireping"" in slave documentation.

* Fix broken references

* Remove unused page.

* Add docker page and remove old unused pages.

* Remove old unused page.

* Remove old links from navigation.yml

* update refs

* Remove ansible.md

Why? Because this was essentially the same as the docker installation, just with more steps.

* Remove old unused file

* fix getting-started ref

* update pages

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/cache from 5.1.0 to 5.1.2 (#252)

Bumps [symfony/cache](https://github.com/symfony/cache) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/cache/releases)
- [Changelog](https://github.com/symfony/cache/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/cache/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/twig-bundle from 5.1.0 to 5.1.2 (#253)

Bumps [symfony/twig-bundle](https://github.com/symfony/twig-bundle) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/twig-bundle/releases)
- [Changelog](https://github.com/symfony/twig-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/twig-bundle/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.1.1 to 5.1.2 (#255)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.1.1 to 5.1.2.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.1.1...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/translation from 5.1.0 to 5.1.2 (#258)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Create CNAME

* Delete CNAME

* Fix install faults (#265)

* Make some changes based on feedback.

* Do not run composer scripts, run commands manually.

* Prepend sudo before reverse proxy commands

* Make sure the log file is writable by anyone (incl. the webserver user)

Else the application won't start and will only generate HTTP 500 responses.

* Make sure the log file is writable by anyone (incl. the webserver user)

Else the application won't start and will only generate HTTP 500 responses.

* Fix git clone documentation

* Don't run cache:clear and cache:warmup in prod on a slave...

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add chmod 777 to $INSTALL_DIR/var/rrd/ (#267)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add more robust mkdir failure detection. (#266)

* Add better mkdir failure detection.

* Add more robust mkdir handling

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/dotenv from 5.1.0 to 5.1.2 (#257)

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump guzzlehttp/guzzle from 6.5.4 to 6.5.5 (#260)

Bumps [guzzlehttp/guzzle](https://github.com/guzzle/guzzle) from 6.5.4 to 6.5.5.
- [Release notes](https://github.com/guzzle/guzzle/releases)
- [Changelog](https://github.com/guzzle/guzzle/blob/6.5.5/CHANGELOG.md)
- [Commits](https://github.com/guzzle/guzzle/compare/6.5.4...6.5.5)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/flex from 1.8.1 to 1.8.4 (#264)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.8.1 to 1.8.4.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.8.1...v1.8.4)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Create Dependabot config file (#270)

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>

* Bump symfony/process from 5.1.1 to 5.1.2 (#261)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.1 to 5.1.2.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.1...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpunit/phpunit from 9.2.2 to 9.2.3 (#262)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.2.2 to 9.2.3.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.2.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.2.2...9.2.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/security-bundle from 5.1.0 to 5.1.2 (#263)

Bumps [symfony/security-bundle](https://github.com/symfony/security-bundle) from 5.1.0 to 5.1.2.
- [Release notes](https://github.com/symfony/security-bundle/releases)
- [Changelog](https://github.com/symfony/security-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/security-bundle/compare/v5.1.0...v5.1.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump sensio/framework-extra-bundle from 5.5.5 to 5.5.6 (#254)

Bumps [sensio/framework-extra-bundle](https://github.com/sensiolabs/SensioFrameworkExtraBundle) from 5.5.5 to 5.5.6.
- [Release notes](https://github.com/sensiolabs/SensioFrameworkExtraBundle/releases)
- [Changelog](https://github.com/sensiolabs/SensioFrameworkExtraBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/sensiolabs/SensioFrameworkExtraBundle/compare/v5.5.5...v5.5.6)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove files from legacy Symfony versions. (#271)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump doctrine/doctrine-migrations-bundle to ^3.0. (#272)

* Bump doctrine/doctrine-migrations-bundle to ^3.0.

Resolves deprecation notices.

* Regenerate composer.lock after merge

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Resolve deprecations and use latest flex recipes. (#273)

* Use latest symfony/framework-bundle recipe

This resolves a number of deprecations related to outdated Kernel functionality.

* Use latest doctrine/doctrine-bundle recipe

This requires master installs to explicitly add the serverVersion information to their DATABASE_URL. The install docs already mention that this is required.

I can pre-emptively update this on the fireping master to mariadb-10.1.26.

However, running database installs shouldn't be affected anyway as doctrine will try to guess the server version anyway.

* Force install new symfony/routes recipe.

* Force install new symfony/security-bundle recipe.

* Force install new symfony/security-bundle recipe.

* Force install new monolog recipe.

* Pin doctrine/inflector to <1.4

This is necessary to remove hundreds of deprecation notices being spammed into our log files continuously. This is a recent deprecation that won't be fixed until doctrine/orm:2.8.

After we've upgraded to doctrine/orm:2.8, we can safely remove this as a root requirement again.

I've already created an issue for this to remind us when the time comes.

Loading the index page now shows about 200 fewer deprecations.

* Regenerate composer.json, composer.lock after merge

* Trigger Travis rebuild...

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Resolve deprecations related to service_container alias and outdated indirect dependencies. (#275)

* update indirect dependencies

Resolves deprecations in symfony/property-info and symfony/property-access.

* Explicitly alias Psr\Container\ContainerInterface to @service_container

This default alias was deprecated in Symfony 5.1, but we were using it.

* Retrigger build?

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Create CNAME

* Update CNAME

* Update CNAME

* Bump easycorp/easyadmin-bundle from 2.3.9 to 3.0.0 (#277)

* Bump easycorp/easyadmin-bundle from 2.3.9 to 3.0.0

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 2.3.9 to 3.0.0.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v2.3.9...v3.0.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

* easyadmin upgrade changes

* easyadmin upgrade changes

* Add enabled BooleanField to new and edit User views.

* Add null-check to hashPassword.

This prevents the Admin controller from attempting to change the password when none is given.

* Change ROLE_USER to ROLE_API.

At the moment, we don't have a concept of ""ROLE_USER"" in Fireping.

* Add troubleshooting guide.

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>
Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Bump phpunit/phpunit from 9.2.3 to 9.2.5 (#282)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.2.3 to 9.2.5.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.2.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.2.3...9.2.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* phpstan level 5 (#278)

* Add note that the docker installation is an express install. (#281)

It's not necessary to do this if you already manually installed the application prior.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpstan/phpstan from 0.12.29 to 0.12.30 (#279)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.29 to 0.12.30.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.29...0.12.30)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/polyfill-apcu from 1.17.0 to 1.17.1 (#285)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.17.0 to 1.17.1.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.17.0...v1.17.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* remove unnecessary fields + actions (#286)

* Prevent modification of a Probe. (#283)

* Prevent changes to Step/Samples of Probe.

* Prevent any changes except the name.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Ensure broken results are discarded by the ProbeDispatcher. (#284)

* Add DirtyInputException.php

* Throw DirtyInputException instead of \Exception when input data is dirty.

Examples of such cases:

- Expected sample count and actual sample count mismatch
- Essential data missing from request

* Send an HTTP 409 Response for DirtyInputExceptions.

These occur for requests where the input data was dirty and could not be processed. These are irrecoverable since the slave will not be able to correct this. As a result of the current implementation, the probe dispatcher will continue to retry these transactions (because any request that triggers a non-200/non-409 response is retried forever.)

* Change test to assert for HTTP 409 instead of HTTP 500.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add missing details to install docs. (#287)

* Automatically determine the Debian release.

* Add sudo to create directory in /opt.

* Rename composer to composer.phar.

This is what you're left with after a default install.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Set storage.table_storage.table_name to migration_versions. (#288)

In the latest doctrine/doctrine-migrations-bundle release this defaults to doctrine_migration_versions.

You also need to run the following command on a master instance:

php bin/console doctrine:migrations:sync-metadata-storage

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add configuration details to rrd-storage.md (#294)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Add more details to redis.md (#295)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add section on creating a dedicated Fireping user for your master installation. (#296)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Simplify the example configuration for supervisor.md (#293)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add information on setting the STORAGE driver in .env.local. (#289)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove all ""Created by PhpStorm."" file docblocks. (#298)

We don't do them consistently and they don't really add value anyway.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add latest version of symfony.lock. (#299)

For some reason (and I noticed this on other installs as well), the symfony.lock file changes when performing a composer install.

This is the latest version.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump easycorp/easyadmin-bundle from 3.0.0 to 3.0.1 (#301)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.0.0 to 3.0.1.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.0.0...v3.0.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Fix test flakiness in RrdCachedStorage by mounting the rrdcached filesystem locally. (#300)

* Mount a volume into ./var/rrd/test to test RrdCachedStorage.

This works locally, question is if it'll work on Travis. Basically, RrdCachedStorage *expects* the daemon to be running locally. Obviously, we aren't doing that on Travis nor on our local docker-compose stack, so this is a workaround. We first create a volume, then mount that named volume into both the php and rrdcached containers. As we create files into the rrdcached container, they'll be shared to the PHP container as-if they were local.

It took some blood, sweat and tears to get this working, and it's dirty as hell, but it works. We'll do something better at a later date. At least we don't have to remove the test this way just to stop it being flaky.

* Remove the quotation marks.

Looking at other examples online, this may not be necessary.

* Add echo on the TRAVIS_BUILD_DIR

* Try /tmp/fireping/rrd/test instead of cache map

* Change /var/rrd/test to /tmp/fireping/rrd.

This should avoid the issue of ruining the cache directory.

* Adjust the volume path to the correct one.

* Add debugs

* Add some debugging.

* Add some debugging.

* Add some debugging.

* Try to run rrdcached as root

* Try to run rrdcached as root

* Try to run rrdcached as root

* Try to run rrdcached as root

* Add some documentation to .travis.yml and remove dump statements.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add demo button. (#303)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Remove apiToken from User.php (#305)

Also remove the associated (albeit unused) TokenAuthenticator.php.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove base.html.twig (#314)

All of our templates extend from base-adminlte.html.twig, making this file obsolete.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove MenuExtension.php (#306)

This was used in the old UI but is not longer being used as far as I can tell.

Safe to remove this dead code.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove old OutputFormatters (#307)

These aren't being used and there are no plans of reintroducing them.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove TracerouteException.php (#308)

This is no longer being used.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove INSTALL from repository. (#309)

* Remove INSTALL from repository.

All installation instructions were moved to https://fireping.com and should be reference there.

* Remove ./config/fireping-slave.conf example.

This has moved to the installation documentation found on https://fireping.com.

* Remove config/logrotate/fireping-slave

This was part of the INSTALL instructions as well.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove Bower integration (#310)

Bower is no longer actively supported and they recommend migrating to yarn+webpack instead. Either way, we don't need this for the time being.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Remove public/config.php (#311)

This file was a part of sensio/distribution-bundle that is not compatible since Symfony 4/Flex. Safe to remove this file.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Remove ansible/ directory. (#313)

This is unmaintained, not up-to-date, and all it does is start a docker container.

We might wish to reintroduce this at some point, but I don't want anyone to start depending on this before v1.0.

Besides, if we were ever to actively want to support this, we should extract it to its own repository apart from the main code repository.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Drop the fos_user table. (#304)

* Drop the fos_user table.

This was migrated in #116 but we never created the migration to remove the old table afterwards.

This now shows up when trying to generate new database migrations.

* Rename the class to match filename.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add a unique constraint to names within parents. (#316)

* Add a unique constraint to names within parents.

This adds two things:

- a database constraint preventing duplicate name entries within the same parent domain
- an application-level validation constraint that will generate error messages for attempts to do so.

Note that because for MySQL, two NULL values are -not- equal, this does not prevent multiple root domains with the same name on a database level (i.e. because of a race condition). We could avoid this by setting the parent_id column to NOT NULL and instead assuming the value 0 or -1 is ""root domain"".

That way, a created index would be 0-name or -1-name, which can constrained for uniqueness.

This closes #32 and #37.

* Add description to the generated migration.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpstan/phpstan from 0.12.30 to 0.12.31 (#317)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.30 to 0.12.31.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.30...0.12.31)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: depe…

* remove newrelic calls, they are obsolete now (#343)

* use incoming ip on master for slaves, fixes #341 (#342)

Co-authored-by: Kevin R <0654d6203457d3ecaee3a452882cc3516f7e596b@users.noreply.github.com>

* Label the IP field as hostname. (#349)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* add notification on index page when database is empty (#350)

* Rework ProbeDispatcher and ProbeWorker (#335)

* Pass decoded array instead of raw data.

We're double-decoding for no reason, just pass the initially decoded data instead.

* Remove maxRuntime as a class property.

* Remove loop as a class property.

* Add more logging to Workers.

* Remove unused data from worker responses.

These are just taking up space when sending data across.

* Remove runtime usage from ProbeDispatcherCommand.php

This is better isolated within the worker as it's not being used for -anything- else in the dispatcher.

* Remove debug from worker responses and add pid.

* Add more informative logging

* Remove timestamp from the dispatcher-worker communication

* Refactor ProbeWorkerCommand.php

This PR reduces the amount of data that gets sent across between the dispatcher and the worker processes.

* Add more descriptive logs to dispatcher handleResponse.

* Remove sendResponse for exceptions

Just log the errors, it's fine.

* Remove useless handleResponse cases

Just logging a bit literally adds nothing.

* Remove PostStats and PostResults from Worker response handling

We don't do anything with it, so it's not needed.

* Add it back

* Remove status check and data cleaning step

We control both sides, there's literally no point in checking this.
We only return 200 as a status and the response is fixed.

* Default to expectedRuntime 60

We don't need a nullable parameter.

* Add more logs to dispatcher

* Remove unused minimumIdleWorkers property.

* Add more logging to dispatcher

* Remove unused $workerLimit property.

* Add final bit of logging

* Exit to output instead of log.

* Add sendResponse() calls back to error handling.

* Add more logging to PostStatsHttpWorkerCommand.php

* Add more logging to PostResultsHttpWorkerCommand.php and PostStatsHttpWorkerCommand.php

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Fix long domain names crossing the sidebar (#357)

* Change findByParent to findBy.parent

* Add menu.html.twig macro override

* Add backported note

* Add sidebar/menu.html.twig override

* Extend SidebarController from AdminLTE\SidebarController and implement menuAction

* Override the sidebar_nav block

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Bump twig/twig from 3.0.3 to 3.0.4 (#356)

Bumps [twig/twig](https://github.com/twigphp/Twig) from 3.0.3 to 3.0.4.
- [Release notes](https://github.com/twigphp/Twig/releases)
- [Changelog](https://github.com/twigphp/Twig/blob/3.x/CHANGELOG)
- [Commits](https://github.com/twigphp/Twig/compare/v3.0.3...v3.0.4)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* DATABASE_URL is provided in .env (#358)

* Rename ShellCommand (#355)

* Consolidate App\ShellCommand and App\Probe into App\Slave\Task

* Rename Command to Task

* Rename to FetchConfiguration.php, PublishResults.php, PublishStatistics.php

* Rename CommandFactory variables to TaskFactory

* Rename app.slave.command to app.slave.task

* Rename more command-terminology to task

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add sorting on multiple places (#353)

* add sorting on multiple places

* sort search results as well

Co-authored-by: Kevin R <0654d6203457d3ecaee3a452882cc3516f7e596b@users.noreply.github.com>

* Bump symfony/maker-bundle from 1.19.0 to 1.19.1 (#360)

Bumps [symfony/maker-bundle](https://github.com/symfony/maker-bundle) from 1.19.0 to 1.19.1.
- [Release notes](https://github.com/symfony/maker-bundle/releases)
- [Changelog](https://github.com/symfony/maker-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/maker-bundle/compare/v1.19.0...v1.19.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump kevinpapst/adminlte-bundle from 3.2.3 to 3.2.4 (#359)

Bumps [kevinpapst/adminlte-bundle](https://github.com/kevinpapst/AdminLTEBundle) from 3.2.3 to 3.2.4.
- [Release notes](https://github.com/kevinpapst/AdminLTEBundle/releases)
- [Commits](https://github.com/kevinpapst/AdminLTEBundle/compare/3.2.3...3.2.4)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpspec/prophecy-phpunit from 2.0.0 to 2.0.1 (#361)

Bumps [phpspec/prophecy-phpunit](https://github.com/phpspec/prophecy-phpunit) from 2.0.0 to 2.0.1.
- [Release notes](https://github.com/phpspec/prophecy-phpunit/releases)
- [Changelog](https://github.com/phpspec/prophecy-phpunit/blob/master/CHANGES.md)
- [Commits](https://github.com/phpspec/prophecy-phpunit/compare/v2.0.0...v2.0.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* fix entrypoint permissions (#362)

* add coveralls support and remove code climate (#363)

* Feature/extra checks (#364)

* add extra ci checks

* fixing errors

* updating composer.lock

* php 7.3 should also work

* fix flaky test

* Remove the unnecessary equals sign. (#371)

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>

* Bump phpunit/phpunit from 9.2.5 to 9.2.6 (#366)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.2.5 to 9.2.6.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.2.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.2.5...9.2.6)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/maker-bundle from 1.19.1 to 1.20.0 (#367)

Bumps [symfony/maker-bundle](https://github.com/symfony/maker-bundle) from 1.19.1 to 1.20.0.
- [Release notes](https://github.com/symfony/maker-bundle/releases)
- [Changelog](https://github.com/symfony/maker-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/maker-bundle/compare/v1.19.1...v1.20.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/polyfill-apcu from 1.17.1 to 1.18.0 (#370)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.17.1 to 1.18.0.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.17.1...v1.18.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Add versions to slaves (#354)

* Add version column to Slave

* Add Version domain object

* Add VersionReaderInterface and GitVersionReader

* Set the version from the stats endpoint

* Add code to pass version data to StatsManager.php

* Pass version to StatsManager

* Add VersionTest.php

* Add GitVersionReaderTest.php

* Add a ProcessFactoryInterface.php and decouple from Symfony Processes

This allows us to test the individual components without relying on *actual* Processes or *actual* Git repositories.

* Add GitVersionReader.php and its test.

* Use SymfonyProcessFactory for GitVersionReader in ProbeDispatcherCommand.php

* Add tests for Process code

* Add versions to slave index/detail pages.

* Add version to SlaveCrudController index/detail pages

* Ensure getVersion is a VersionInterface

* Remove DEFAULT '' from the migration

Doctrine doesn't seem to recognize it very well and we already default it on the Entity anyway.

* Remove VersionInterface.php

* Remove some other unnecessary functionality

* Implement __toString() to fix admin index/detail views

* Remove unused import

* Add CacheVersionReader.php

CacheVersionReader.php is used to read the running version once and then save it in the database. This will cause an initial (extended) load time the first time this happens. Should this become an issue, we can write a CacheWarmer that loads this on cache:warmup/cache:clear.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/flex from 1.8.4 to 1.9.1 (#369)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.8.4 to 1.9.1.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.8.4...v1.9.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Kevin R <0654d6203457d3ecaee3a452882cc3516f7e596b@users.noreply.github.com>

* Bump easycorp/easyadmin-bundle from 3.0.2 to 3.1.1 (#365)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.0.2 to 3.1.1.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.0.2...v3.1.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Kevin R <0654d6203457d3ecaee3a452882cc3516f7e596b@users.noreply.github.com>

* Bump symfony/orm-pack from 1.0.8 to 2.0.0 (#368)

Bumps [symfony/orm-pack](https://github.com/symfony/orm-pack) from 1.0.8 to 2.0.0.
- [Release notes](https://github.com/symfony/orm-pack/releases)
- [Commits](https://github.com/symfony/orm-pack/compare/v1.0.8...v2.0.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Kevin R <0654d6203457d3ecaee3a452882cc3516f7e596b@users.noreply.github.com>

* Bump easycorp/easyadmin-bundle from 3.1.1 to 3.1.2 (#376)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.1.1 to 3.1.2.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.1.1...v3.1.2)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.32 to 0.12.33 (#375)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.32 to 0.12.33.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.32...0.12.33)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Add upgrade guides (#373)

* Add upgrade guides

* Add cache:warmup to docs

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Separate storage docs from master docs. (#372)

* Separate storage docs from master docs.

* Update getting-started.md

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Add purpose to README.md (#377)

* Bump easycorp/easyadmin-bundle from 3.1.2 to 3.1.3 (#378)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.1.2 to 3.1.3.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.1.2...v3.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/asset from 5.1.2 to 5.1.3 (#380)

Bumps [symfony/asset](https://github.com/symfony/asset) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/asset/releases)
- [Changelog](https://github.com/symfony/asset/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/asset/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/twig-bundle from 5.1.2 to 5.1.3 (#392)

Bumps [symfony/twig-bundle](https://github.com/symfony/twig-bundle) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/twig-bundle/releases)
- [Changelog](https://github.com/symfony/twig-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/twig-bundle/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/validator from 5.1.2 to 5.1.3 (#393)

Bumps [symfony/validator](https://github.com/symfony/validator) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/validator/releases)
- [Changelog](https://github.com/symfony/validator/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/validator/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/translation from 5.1.2 to 5.1.3 (#394)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/security-bundle from 5.1.2 to 5.1.3 (#381)

Bumps [symfony/security-bundle](https://github.com/symfony/security-bundle) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/security-bundle/releases)
- [Changelog](https://github.com/symfony/security-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/security-bundle/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/browser-kit from 5.1.2 to 5.1.3 (#384)

Bumps [symfony/browser-kit](https://github.com/symfony/browser-kit) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/browser-kit/releases)
- [Changelog](https://github.com/symfony/browser-kit/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/browser-kit/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/dotenv from 5.1.2 to 5.1.3 (#387)

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/form from 5.1.2 to 5.1.3 (#391)

Bumps [symfony/form](https://github.com/symfony/form) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/form/releases)
- [Changelog](https://github.com/symfony/form/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/form/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/lock from 5.1.2 to 5.1.3 (#388)

Bumps [symfony/lock](https://github.com/symfony/lock) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/lock/releases)
- [Changelog](https://github.com/symfony/lock/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/lock/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.1.2 to 5.1.3 (#386)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/css-selector from 5.1.2 to 5.1.3 (#385)

Bumps [symfony/css-selector](https://github.com/symfony/css-selector) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/css-selector/releases)
- [Changelog](https://github.com/symfony/css-selector/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/css-selector/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/process from 5.1.2 to 5.1.3 (#382)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/cache from 5.1.2 to 5.1.3 (#383)

Bumps [symfony/cache](https://github.com/symfony/cache) from 5.1.2 to 5.1.3.
- [Release notes](https://github.com/symfony/cache/releases)
- [Changelog](https://github.com/symfony/cache/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/cache/compare/v5.1.2...v5.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Add ON DELETE CASCADE constraints to ManyToMany JoinTables on Device and Domain (#390)

This will make sure that when any of the below are removed, their link is also automatically removed.

- an alert rule
- an alert destination
- a probe
- a slave group

Right now it just breaks.

Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: Jimmy Cleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump phpstan/phpstan from 0.12.33 to 0.12.34 (#395)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.33 to 0.12.34.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.33...0.12.34)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/polyfill-apcu from 1.18.0 to 1.18.1 (#397)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.18.0 to 1.18.1.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.18.0...v1.18.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.34 to 0.12.36 (#400)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.34 to 0.12.36.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.34...0.12.36)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump twig/twig from 3.0.4 to 3.0.5 (#399)

Bumps [twig/twig](https://github.com/twigphp/Twig) from 3.0.4 to 3.0.5.
- [Release notes](https://github.com/twigphp/Twig/releases)
- [Changelog](https://github.com/twigphp/Twig/blob/3.x/CHANGELOG)
- [Commits](https://github.com/twigphp/Twig/compare/v3.0.4...v3.0.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* fix possible sql injection (#396)

* Bump squizlabs/php_codesniffer from 3.5.5 to 3.5.6 (#402)

Bumps [squizlabs/php_codesniffer](https://github.com/squizlabs/PHP_CodeSniffer) from 3.5.5 to 3.5.6.
- [Release notes](https://github.com/squizlabs/PHP_CodeSniffer/releases)
- [Commits](https://github.com/squizlabs/PHP_CodeSniffer/compare/3.5.5...3.5.6)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.36 to 0.12.37 (#401)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.36 to 0.12.37.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.36...0.12.37)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/profiler-pack from 1.0.4 to 1.0.5 (#404)

Bumps [symfony/profiler-pack](https://github.com/symfony/profiler-pack) from 1.0.4 to 1.0.5.
- [Release notes](https://github.com/symfony/profiler-pack/releases)
- [Commits](https://github.com/symfony/profiler-pack/compare/v1.0.4...v1.0.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump predis/predis from 1.1.1 to 1.1.2 (#403)

Bumps [predis/predis](https://github.com/nrk/predis) from 1.1.1 to 1.1.2.
- [Release notes](https://github.com/nrk/predis/releases)
- [Changelog](https://github.com/nrk/predis/blob/v1.1/CHANGELOG.md)
- [Commits](https://github.com/nrk/predis/compare/v1.1.1...v1.1.2)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.37 to 0.12.40 (#413)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.37 to 0.12.40.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.37...0.12.40)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/flex from 1.9.1 to 1.9.2 (#410)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.9.1 to 1.9.2.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.9.1...v1.9.2)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump predis/predis from 1.1.2 to 1.1.3 (#406)

Bumps [predis/predis](https://github.com/predishq/predis) from 1.1.2 to 1.1.3.
- [Release notes](https://github.com/predishq/predis/releases)
- [Changelog](https://github.com/predis/predis/blob/v1.1.3/CHANGELOG.md)
- [Commits](https://github.com/predishq/predis/compare/v1.1.2...v1.1.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump doctrine/doctrine-bundle from 2.1.0 to 2.1.2 (#412)

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 2.1.0 to 2.1.2.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/2.1.0...2.1.2)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump react/socket from 1.5.0 to 1.6.0 (#415)

Bumps [react/socket](https://github.com/reactphp/socket) from 1.5.0 to 1.6.0.
- [Release notes](https://github.com/reactphp/socket/releases)
- [Changelog](https://github.com/reactphp/socket/blob/master/CHANGELOG.md)
- [Commits](https://github.com/reactphp/socket/compare/v1.5.0...v1.6.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/maker-bundle from 1.20.0 to 1.21.1 (#416)

Bumps [symfony/maker-bundle](https://github.com/symfony/maker-bundle) from 1.20.0 to 1.21.1.
- [Release notes](https://github.com/symfony/maker-bundle/releases)
- [Changelog](https://github.com/symfony/maker-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/maker-bundle/compare/v1.20.0...v1.21.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/dotenv from 5.1.3 to 5.1.4 (#425)

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.1.3 to 5.1.4.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.1.3...v5.1.4)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/twig-bundle from 5.1.3 to 5.1.5 (#429)

Bumps [symfony/twig-bundle](https://github.com/symfony/twig-bundle) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/twig-bundle/releases)
- [Changelog](https://github.com/symfony/twig-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/twig-bundle/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/css-selector from 5.1.3 to 5.1.5 (#432)

Bumps [symfony/css-selector](https://github.com/symfony/css-selector) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/css-selector/releases)
- [Changelog](https://github.com/symfony/css-selector/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/css-selector/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump sensio/framework-extra-bundle from 5.5.6 to 5.6.1 (#409)

Bumps [sensio/framework-extra-bundle](https://github.com/sensiolabs/SensioFrameworkExtraBundle) from 5.5.6 to 5.6.1.
- [Release notes](https://github.com/sensiolabs/SensioFrameworkExtraBundle/releases)
- [Changelog](https://github.com/sensiolabs/SensioFrameworkExtraBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/sensiolabs/SensioFrameworkExtraBundle/compare/v5.5.6...v5.6.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/dotenv from 5.1.4 to 5.1.5 (#437)

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.1.4 to 5.1.5.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.1.4...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpmd/phpmd from 2.8.2 to 2.9.0 (#438)

Bumps [phpmd/phpmd](https://github.com/phpmd/phpmd) from 2.8.2 to 2.9.0.
- [Release notes](https://github.com/phpmd/phpmd/releases)
- [Changelog](https://github.com/phpmd/phpmd/blob/master/CHANGELOG)
- [Commits](https://github.com/phpmd/phpmd/compare/2.8.2...2.9.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump easycorp/easyadmin-bundle from 3.1.3 to 3.1.4 (#436)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.1.3 to 3.1.4.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.1.3...v3.1.4)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/browser-kit from 5.1.3 to 5.1.5 (#431)

Bumps [symfony/browser-kit](https://github.com/symfony/browser-kit) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/browser-kit/releases)
- [Changelog](https://github.com/symfony/browser-kit/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/browser-kit/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/lock from 5.1.3 to 5.1.5 (#435)

Bumps [symfony/lock](https://github.com/symfony/lock) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/lock/releases)
- [Changelog](https://github.com/symfony/lock/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/lock/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/flex from 1.9.2 to 1.9.3 (#434)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.9.2 to 1.9.3.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.9.2...v1.9.3)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/security-bundle from 5.1.3 to 5.1.5 (#444)

Bumps [symfony/security-bundle](https://github.com/symfony/security-bundle) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/security-bundle/releases)
- [Changelog](https://github.com/symfony/security-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/security-bundle/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/form from 5.1.3 to 5.1.5 (#443)

Bumps [symfony/form](https://github.com/symfony/form) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/form/releases)
- [Changelog](https://github.com/symfony/form/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/form/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/translation from 5.1.3 to 5.1.5 (#442)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/validator from 5.1.3 to 5.1.5 (#447)

Bumps [symfony/validator](https://github.com/symfony/validator) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/validator/releases)
- [Changelog](https://github.com/symfony/validator/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/validator/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.40 to 0.12.42 (#446)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.40 to 0.12.42.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.40...0.12.42)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump predis/predis from 1.1.3 to 1.1.5 (#449)

Bumps [predis/predis](https://github.com/predis/predis) from 1.1.3 to 1.1.5.
- [Release notes](https://github.com/predis/predis/releases)
- [Changelog](https://github.com/predis/predis/blob/main/CHANGELOG.md)
- [Commits](https://github.com/predis/predis/compare/v1.1.3...v1.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/cache from 5.1.3 to 5.1.5 (#451)

Bumps [symfony/cache](https://github.com/symfony/cache) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/cache/releases)
- [Changelog](https://github.com/symfony/cache/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/cache/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/flex from 1.9.3 to 1.9.4 (#454)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.9.3 to 1.9.4.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.9.3...v1.9.4)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.1.3 to 5.1.5 (#441)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/asset from 5.1.3 to 5.1.5 (#440)

Bumps [symfony/asset](https://github.com/symfony/asset) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/asset/releases)
- [Changelog](https://github.com/symfony/asset/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/asset/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpunit/phpunit from 9.2.6 to 9.3.10 (#452)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.2.6 to 9.3.10.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.3.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.2.6...9.3.10)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump eightpoints/guzzle-bundle from 8.1.0 to 8.2.0 (#414)

Bumps [eightpoints/guzzle-bundle](https://github.com/8p/EightPointsGuzzleBundle) from 8.1.0 to 8.2.0.
- [Release notes](https://github.com/8p/EightPointsGuzzleBundle/releases)
- [Commits](https://github.com/8p/EightPointsGuzzleBundle/compare/v8.1.0...v8.2.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump api-platform/api-pack from 1.2.2 to 1.3.0 (#417)

Bumps [api-platform/api-pack](https://github.com/api-platform/api-pack) from 1.2.2 to 1.3.0.
- [Release notes](https://github.com/api-platform/api-pack/releases)
- [Commits](https://github.com/api-platform/api-pack/compare/v1.2.2...v1.3.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/process from 5.1.3 to 5.1.5 (#430)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.3 to 5.1.5.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.3...v5.1.5)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump predis/predis from 1.1.5 to 1.1.6 (#450)

Bumps [predis/predis](https://github.com/predis/predis) from 1.1.5 to 1.1.6.
- [Release notes](https://github.com/predis/predis/releases)
- [Changelog](https://github.com/predis/predis/blob/v1.1.6/CHANGELOG.md)
- [Commits](https://github.com/predis/predis/compare/v1.1.5...v1.1.6)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump flexihash/flexihash from 2.0.2 to 3.0.0 (#405)

Bumps [flexihash/flexihash](https://github.com/pda/flexihash) from 2.0.2 to 3.0.0.
- [Release notes](https://github.com/pda/flexihash/releases)
- [Changelog](https://github.com/pda/flexihash/blob/master/CHANGELOG.md)
- [Commits](https://github.com/pda/flexihash/compare/v2.0.2...v3.0.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump guzzlehttp/guzzle from 6.5.5 to 7.0.1 (#455)

Bumps [guzzlehttp/guzzle](https://github.com/guzzle/guzzle) from 6.5.5 to 7.0.1.
- [Release notes](https://github.com/guzzle/guzzle/releases)
- [Changelog](https://github.com/guzzle/guzzle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/guzzle/guzzle/compare/6.5.5...7.0.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.42 to 0.12.43 (#457)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.42 to 0.12.43.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.42...0.12.43)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpunit/phpunit from 9.3.10 to 9.3.11 (#461)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.3.10 to 9.3.11.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.3.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.3.10...9.3.11)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump guzzlehttp/guzzle from 7.0.1 to 7.1.0 (#458)

Bumps [guzzlehttp/guzzle](https://github.com/guzzle/guzzle) from 7.0.1 to 7.1.0.
- [Release notes](https://github.com/guzzle/guzzle/releases)
- [Changelog](https://github.com/guzzle/guzzle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/guzzle/guzzle/compare/7.0.1...7.1.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpmd/phpmd from 2.9.0 to 2.9.1 (#459)

Bumps [phpmd/phpmd](https://github.com/phpmd/phpmd) from 2.9.0 to 2.9.1.
- [Release notes](https://github.com/phpmd/phpmd/releases)
- [Changelog](https://github.com/phpmd/phpmd/blob/master/CHANGELOG)
- [Commits](https://github.com/phpmd/phpmd/compare/2.9.0...2.9.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.43 to 0.12.48 (#472)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.43 to 0.12.48.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.43...0.12.48)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/cache from 5.1.5 to 5.1.7 (#473)

Bumps [symfony/cache](https://github.com/symfony/cache) from 5.1.5 to 5.1.7.
- [Release notes](https://github.com/symfony/cache/releases)
- [Changelog](https://github.com/symfony/cache/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/cache/compare/v5.1.5...v5.1.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/process from 5.1.5 to 5.1.7 (#474)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.5 to 5.1.7.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.5...v5.1.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/validator from 5.1.5 to 5.1.7 (#475)

Bumps [symfony/validator](https://github.com/symfony/validator) from 5.1.5 to 5.1.7.
- [Release notes](https://github.com/symfony/validator/releases)
- [Changelog](https://github.com/symfony/validator/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/validator/compare/v5.1.5...v5.1.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/browser-kit from 5.1.5 to 5.1.7 (#476)

Bumps [symfony/browser-kit](https://github.com/symfony/browser-kit) from 5.1.5 to 5.1.7.
- [Release notes](https://github.com/symfony/browser-kit/releases)
- [Changelog](https://github.com/symfony/browser-kit/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/browser-kit/compare/v5.1.5...v5.1.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/dotenv from 5.1.5 to 5.1.7 (#484)

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.1.5 to 5.1.7.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.1.5...v5.1.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/translation from 5.1.5 to 5.1.7 (#477)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.1.5 to 5.1.7.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.1.5...v5.1.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/asset from 5.1.5 to 5.1.7 (#481)

Bumps [symfony/asset](https://github.com/symfony/asset) from 5.1.5 to 5.1.7.
- [Release notes](https://github.com/symfony/asset/releases)
- [Changelog](https://github.com/symfony/asset/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/asset/compare/v5.1.5...v5.1.7)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump easycorp/easyadmin-bundle from 3.1.4 to 3.1.6 (#479)

Bumps [easycorp/easyadmin-bundle](https://github.com/EasyCorp/EasyAdminBundle) from 3.1.4 to 3.1.6.
- [Release notes](https://github.com/EasyCorp/EasyAdminBundle/releases)
- [Commits](https://github.com/EasyCorp/EasyAdminBundle/compare/v3.1.4...v3.1.6)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.48 to 0.12.52 (#492)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.48 to 0.12.52.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.48...0.12.52)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/twig-bundle from 5.1.5 to 5.1.8 (#495)

Bumps [symfony/twig-bundle](https://github.com/symfony/twig-bundle) from 5.1.5 to 5.1.8.
- [Release notes](https://github.com/symfony/twig-bundle/releases)
- [Changelog](https://github.com/symfony/twig-bundle/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/twig-bundle/compare/v5.1.5...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/form from 5.1.5 to 5.1.8 (#494)

Bumps [symfony/form](https://github.com/symfony/form) from 5.1.5 to 5.1.8.
- [Release notes](https://github.com/symfony/form/releases)
- [Changelog](https://github.com/symfony/form/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/form/compare/v5.1.5...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/security-bundle from 5.1.5 to 5.1.8 (#493)

Bumps [symfony/security-bundle](https://github.com/symfony/security-bundle) from 5.1.5 to 5.1.8.
- [Release notes](https://github.com/symfony/security-bundle/releases)
- [Changelog](https://github.com/symfony/security-bundle/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/security-bundle/compare/v5.1.5...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/polyfill-apcu from 1.18.1 to 1.20.0 (#499)

Bumps [symfony/polyfill-apcu](https://github.com/symfony/polyfill-apcu) from 1.18.1 to 1.20.0.
- [Release notes](https://github.com/symfony/polyfill-apcu/releases)
- [Commits](https://github.com/symfony/polyfill-apcu/compare/v1.18.1...v1.20.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/validator from 5.1.7 to 5.1.8 (#498)

Bumps [symfony/validator](https://github.com/symfony/validator) from 5.1.7 to 5.1.8.
- [Release notes](https://github.com/symfony/validator/releases)
- [Changelog](https://github.com/symfony/validator/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/validator/compare/v5.1.7...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/asset from 5.1.7 to 5.1.8 (#497)

Bumps [symfony/asset](https://github.com/symfony/asset) from 5.1.7 to 5.1.8.
- [Release notes](https://github.com/symfony/asset/releases)
- [Changelog](https://github.com/symfony/asset/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/asset/compare/v5.1.7...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpunit/phpunit from 9.3.11 to 9.4.2 (#491)

Bumps [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) from 9.3.11 to 9.4.2.
- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)
- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-9.4.md)
- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.3.11...9.4.2)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/flex from 1.9.4 to 1.9.10 (#488)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.9.4 to 1.9.10.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.9.4...v1.9.10)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/monolog-bundle from 3.5.0 to 3.6.0 (#485)

Bumps [symfony/monolog-bundle](https://github.com/symfony/monolog-bundle) from 3.5.0 to 3.6.0.
- [Release notes](https://github.com/symfony/monolog-bundle/releases)
- [Changelog](https://github.com/symfony/monolog-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/monolog-bundle/compare/v3.5.0...v3.6.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/lock from 5.1.5 to 5.1.8 (#496)

Bumps [symfony/lock](https://github.com/symfony/lock) from 5.1.5 to 5.1.8.
- [Release notes](https://github.com/symfony/lock/releases)
- [Changelog](https://github.com/symfony/lock/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/lock/compare/v5.1.5...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump guzzlehttp/guzzle from 7.1.0 to 7.2.0 (#487)

Bumps [guzzlehttp/guzzle](https://github.com/guzzle/guzzle) from 7.1.0 to 7.2.0.
- [Release notes](https://github.com/guzzle/guzzle/releases)
- [Changelog](https://github.com/guzzle/guzzle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/guzzle/guzzle/compare/7.1.0...7.2.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump doctrine/orm from 2.7.3 to 2.7.4 (#480)

Bumps [doctrine/orm](https://github.com/doctrine/orm) from 2.7.3 to 2.7.4.
- [Release notes](https://github.com/doctrine/orm/releases)
- [Commits](https://github.com/doctrine/orm/compare/v2.7.3...2.7.4)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/maker-bundle from 1.21.1 to 1.23.0 (#504)

Bumps [symfony/maker-bundle](https://github.com/symfony/maker-bundle) from 1.21.1 to 1.23.0.
- [Release notes](https://github.com/symfony/maker-bundle/releases)
- [Changelog](https://github.com/symfony/maker-bundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/symfony/maker-bundle/compare/v1.21.1...v1.23.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump squizlabs/php_codesniffer from 3.5.6 to 3.5.8 (#502)

Bumps [squizlabs/php_codesniffer](https://github.com/squizlabs/PHP_CodeSniffer) from 3.5.6 to 3.5.8.
- [Release notes](https://github.com/squizlabs/PHP_CodeSniffer/releases)
- [Commits](https://github.com/squizlabs/PHP_CodeSniffer/compare/3.5.6...3.5.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/css-selector from 5.1.5 to 5.1.8 (#503)

Bumps [symfony/css-selector](https://github.com/symfony/css-selector) from 5.1.5 to 5.1.8.
- [Release notes](https://github.com/symfony/css-selector/releases)
- [Changelog](https://github.com/symfony/css-selector/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/css-selector/compare/v5.1.5...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/swiftmailer-bundle from 3.4.0 to 3.5.1 (#500)

Bumps [symfony/swiftmailer-bundle](https://github.com/symfony/swiftmailer-bundle) from 3.4.0 to 3.5.1.
- [Release notes](https://github.com/symfony/swiftmailer-bundle/releases)
- [Changelog](https://github.com/symfony/swiftmailer-bundle/blob/master/CHANGELOG)
- [Commits](https://github.com/symfony/swiftmailer-bundle/compare/v3.4.0...v3.5.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.52 to 0.12.53 (#501)

* Bump phpstan/phpstan from 0.12.52 to 0.12.53

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.52 to 0.12.53.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.52...0.12.53)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

* remove extra check that can never happen

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump doctrine/doctrine-fixtures-bundle from 3.3.1 to 3.3.2 (#448)

* Bump doctrine/doctrine-fixtures-bundle from 3.3.1 to 3.3.2

Bumps [doctrine/doctrine-fixtures-bundle](https://github.com/doctrine/DoctrineFixturesBundle) from 3.3.1 to 3.3.2.
- [Release notes](https://github.com/doctrine/DoctrineFixturesBundle/releases)
- [Changelog](https://github.com/doctrine/DoctrineFixturesBundle/blob/3.3.x/CHANGELOG-3.1.md)
- [Commits](https://github.com/doctrine/DoctrineFixturesBundle/compare/3.3.1...3.3.2)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

* fixing some phpstan errors

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: jimmycleuren <ac5b69622efadb879e29d1f669a9b56516adba4f@gmail.com>

* Bump symfony/cache from 5.1.7 to 5.1.8 (#515)

Bumps [symfony/cache](https://github.com/symfony/cache) from 5.1.7 to 5.1.8.
- [Release notes](https://github.com/symfony/cache/releases)
- [Changelog](https://github.com/symfony/cache/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/cache/compare/v5.1.7...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/dotenv from 5.1.7 to 5.1.8 (#514)

Bumps [symfony/dotenv](https://github.com/symfony/dotenv) from 5.1.7 to 5.1.8.
- [Release notes](https://github.com/symfony/dotenv/releases)
- [Changelog](https://github.com/symfony/dotenv/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/dotenv/compare/v5.1.7...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/process from 5.1.7 to 5.1.8 (#513)

Bumps [symfony/process](https://github.com/symfony/process) from 5.1.7 to 5.1.8.
- [Release notes](https://github.com/symfony/process/releases)
- [Changelog](https://github.com/symfony/process/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/process/compare/v5.1.7...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump twig/twig from 3.0.5 to 3.1.1 (#512)

Bumps [twig/twig](https://github.com/twigphp/Twig) from 3.0.5 to 3.1.1.
- [Release notes](https://github.com/twigphp/Twig/releases)
- [Changelog](https://github.com/twigphp/Twig/blob/3.x/CHANGELOG)
- [Commits](https://github.com/twigphp/Twig/compare/v3.0.5...v3.1.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/phpunit-bridge from 5.1.5 to 5.1.8 (#511)

Bumps [symfony/phpunit-bridge](https://github.com/symfony/phpunit-bridge) from 5.1.5 to 5.1.8.
- [Release notes](https://github.com/symfony/phpunit-bridge/releases)
- [Changelog](https://github.com/symfony/phpunit-bridge/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/phpunit-bridge/compare/v5.1.5...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/translation from 5.1.7 to 5.1.8 (#519)

Bumps [symfony/translation](https://github.com/symfony/translation) from 5.1.7 to 5.1.8.
- [Release notes](https://github.com/symfony/translation/releases)
- [Changelog](https://github.com/symfony/translation/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/translation/compare/v5.1.7...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/browser-kit from 5.1.7 to 5.1.8 (#518)

Bumps [symfony/browser-kit](https://github.com/symfony/browser-kit) from 5.1.7 to 5.1.8.
- [Release notes](https://github.com/symfony/browser-kit/releases)
- [Changelog](https://github.com/symfony/browser-kit/blob/5.x/CHANGELOG.md)
- [Commits](https://github.com/symfony/browser-kit/compare/v5.1.7...v5.1.8)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump phpstan/phpstan from 0.12.53 to 0.12.54 (#521)

Bumps [phpstan/phpstan](https://github.com/phpstan/phpstan) from 0.12.53 to 0.12.54.
- [Release notes](https://github.com/phpstan/phpstan/releases)
- [Commits](https://github.com/phpstan/phpstan/compare/0.12.53...0.12.54)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump symfony/flex from 1.9.10 to 1.10.0 (#522)

Bumps [symfony/flex](https://github.com/symfony/flex) from 1.9.10 to 1.10.0.
- [Release notes](https://github.com/symfony/flex/releases)
- [Commits](https://github.com/symfony/flex/compare/v1.9.10...v1.10.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Fixes #506 (#523)

* Correct some broken links on the docs page (#526)

* Remove root requirement for doctrine/inflector (#527)

* update dependencies for github pages (#528)

* Fixing coveralls integration (#529)

* fixing coveralls integration

* correct coveralls url

* Bump doctrine/doctrine-bundle from 2.1.2 to 2.2.0 (#532)

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 2.1.2 to 2.2.0.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/2.1.2...2.2.0)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Bump snc/redis-bundle from 3.2.3 to 3.2.4 (#533)

Bumps [snc/redis-bundle](https://github.com/snc/SncRedisBundle) from 3.2.3 to 3.2.4.
- [Release notes](https://github.com/snc/SncRedisBundle/releases)
- [Changelog](https://github.com/snc/SncRedisBundle/blob/master/CHANGELOG.md)
- [Commits](https://github.com/snc/SncRedisBundle/compare/3.2.3...3.2.4)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* This will generate a 404, which is the correct response (#524)

Co-authored-by: Kevin R <0654d6203457d3ecaee3a452882cc3516f7e596b@users.noreply.github.com>

* Display the correct label on slave graphs (#525)

* Bump doctrine/doctrine-bundle from 2.2.0 to 2.2.1 (#536)

Bumps [doctrine/doctrine-bundle](https://github.com/doctrine/DoctrineBundle) from 2.2.0 to 2.2.1.
- [Release notes](https://github.com/doctrine/DoctrineBundle/releases)
- [Commits](https://github.com/doctrine/DoctrineBundle/compare/2.2.0...2.2.1)

Signed-off-by: dependabot[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@github.com>

Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>

* Improve ci pipeline (#535)

* optimize ci pipeline

* restore phpunit files

* fix prophecy

* remove prophecytrait

* apply best prctices from https://symfony.com/doc/current/bundles/best_practices.html#continuous-integration

* fixing branch

* fix failing tests and remove obsolete ones

* test IndexController.php and speed up some tests

* restore database to previous state

* test workermanager

* test index page with a full database

* call release on the worker itself

* make httpgraph test less flaky

* add instruction test

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Kevin R <0654d6203457d3ecaee3a452882cc3516f7e596b@users.noreply.github.com>
Co-authored-by: Kevin R <5429ba91ce9e10a2e286f67d916b21ebd3536ca2@users.noreply.github.com>
Co-authored-by: dependabot[bot] <1c358da00a777d4e9898c1280ab801e2df165188@users.noreply.github.com>
Co-authored-by: Kenny Vanrusselt <6c6bb5a5211b664e9578c4587adeb2f7139c4c35@users.noreply.github.com>",true,false,true,true,false,true,true,true,17,6,14,4,20173
frappe/erpnext,4d713ac5ba1929e8cac886365af152a54d481340,Nabin Hait,2014-03-03 10:21:13 UTC,"sql injection fixes
",true,false,false,false,false,false,false,false,37,36,37,36,224
frappe/frappe,d03bb6e21a82d783ab1ac96f79ab9e22536c601f,Nabin Hait,2014-03-03 10:22:26 UTC,"sql injection fixes
",true,false,false,false,false,false,false,false,13,13,13,13,0
wu-sheng/sky-walking,fb7912c6bdda06a233f4b3e18e71a87d3e4a8951,yangy,2020-06-26 02:08:10 UTC,"fix fuzzy query sql injection (#4970)

",true,false,false,false,false,false,false,false,4,4,4,4,7966
akrherz/iem,6c3e7a3277ec4773a9140dccc9137d4ac0d57405,akrherz,2010-11-24 18:04:12 UTC,"rid of SQL injection chances
",false,false,false,false,false,false,false,false,1,1,1,1,21
terraform-providers/terraform-provider-aws,a3263d0e8c248ee0027c84e49a2cfe57b1d51bbf,Brian Flad,2019-08-12 12:03:59 UTC,"Merge pull request #9717 from kterada0509/feature/add-support-resource-import-for-aws_wafregional_sql_injection_match_set-resource

Add support resource import for aws wafregional sql injection match set resource",false,true,false,false,false,false,false,false,3,2,2,1,13
nigelhorne/CGI-Info,856031d510a5007ebd056e0d2b16d0fd2348ecab,Nigel Horne,2017-06-15 20:18:35 UTC,"Test prevention of SQL injection
",false,false,false,false,false,false,false,false,1,1,0,0,1385
nigelhorne/CGI-Info,a611f07b3d09d81205241567bd0d6687d3755896,Nigel Horne,2017-06-14 21:13:06 UTC,"When preventing SQL injection or XSS, don't return any parameters
",false,false,false,false,false,false,false,false,4,4,1,1,37575
strongbox/strongbox,b0ef99d1995f0a4fde54e44470264fe1a242e979,carlspring,2017-06-01 01:41:03 UTC,"SB-809: Fix the SQL-injection prone code

Fixed.
",true,false,false,false,false,false,false,false,5,5,5,5,138
strongbox/strongbox,6b416e4a809c22105839d5441e6766f4f6ba57b8,carlspring,2017-06-01 17:55:01 UTC,"SB-809: Fix the SQL-injection prone code

- More fixes.
",true,false,false,false,false,false,false,false,5,3,5,3,271
strongbox/strongbox,09cad8e7ab1b46431a8cc0ea9182bce717731559,Martin Todorov,2017-06-01 18:11:49 UTC,"Merge pull request #277 from strongbox/SB-809

SB-809: Fix the SQL-injection prone code",true,true,false,false,false,false,false,false,8,6,8,6,16
bestpractical/rt,155e65849b0940b7db5dfbb7e9be4a60b5bccda1,Alex Vandiver,2012-11-21 22:36:34 UTC,"Add security tests for vulnerabilities released 2012-05-22

This includes tests for:

  CVE-2011-2083  XSS vulnerabilities
  CVE-2011-2084  Information leakage of private data
  CVE-2011-4458  Arbitrary execution of code via VERP
  CVE-2011-5092  Arbitrary execution of code
  CVE-2011-5093  Arbitrary execution of code via DisallowExecuteCode
  CVE-2011-4460  SQL injection for read (but not write) access

Note that CVE-2011-4458 previously encompassed CVE-2011-5092 and
CVE-2011-5093 as well, but has been split into three separate CVEs.
",true,true,true,false,false,false,false,false,16,16,0,0,1212
elplatt/seltzer,b8ed1bd5b411eb7b708b46c81e25b636d587c0f5,Matt Oehrlein,2012-11-21 02:17:21 UTC,"Fixed sql injection vulnerabilities in member/command.inc.php; closes issue #39.
",true,false,false,false,false,false,false,false,1,1,1,1,
facebook/mysql-5.6,dd51801c3447dcd49d9a57027b3a9eec84f29230,Jimmy Yang,2012-11-07 03:52:34 UTC,"Fix Bug #14835178 - FTS PARSER, CRASHING, MAYBE ALLOWS SQL INJECTION EVEN ....
      
rb://1520 approved by Sunny Bains
",true,false,false,false,false,false,false,false,3,1,1,1,5418
centreon/centreon,12f76fc68170e0ff5302ed468c1da946ed092830,Julien Mathis,2012-11-12 15:54:06 UTC,"fix sql injection

git-svn-id: 25a0ac75d3222d69293b2750b310215dcabd6451@13749 6bcd3966-0018-0410-8128-fd23d134de7e
",true,false,false,false,false,false,false,false,1,1,1,1,5701
elplatt/seltzer,2bca5cc333c913207cb7958faaaea214592e2f70,Matt,2012-11-15 00:13:09 UTC,"Fixed SQL injection vulnerabilities for data.inc.php; closes #38.
",true,false,false,false,false,false,false,false,1,1,1,1,10025
elplatt/seltzer,07fe991caa281b9c43bbd2dd709e0ebe29202d2c,Edward L Platt,2012-11-20 03:37:42 UTC,"Fixes sql injection vulnerabilities in core code, closes #41.
",true,false,false,false,false,false,false,false,3,3,3,3,47
Cacti/cacti,07b60899b02d21d5b65d27bd1fe5c47204ed401c,Tony Roman,2014-03-30 22:52:10 UTC,"bug#0002405: SQL injection in graph_xport.php

 - Fixed form input validation problems
 - Fixed rrd export and graph shell escape issues


git-svn-id: b7524c84c8c62e1926d1e3a66d999f5877137521@7439 860744bd-22fc-0310-8c96-e9fe5004b5ca
",true,false,false,false,false,false,false,false,3,3,2,2,19
find-sec-bugs/find-sec-bugs,99dac470d41209a3137d0b0cc88b3a0332130fce,formanek,2015-09-03 10:54:37 UTC,"findbugs.xml fixed - all SQL injection types are mentioned to be reported
Before the fix, analysis ended with error ""SqlInjectionDetector doesn't note that it reports BugPattern[SQL_INJECTION_JDBC] in category SECURITY"", when assertions enabled",true,false,true,false,false,false,false,false,1,1,0,0,60
centreon/centreon,24c2d4eb20fa3ee353c130052d624ee5ffda016f,kevin duret,2015-09-15 14:51:34 UTC,"remove forbidden chars for sql injection
",false,true,false,false,false,false,false,false,1,1,1,1,32
centreon/centreon,54c3775bc02626dc49929ec972087ddd046a8bb9,kevin duret,2015-09-15 14:19:07 UTC,"fix sql injection check
",true,false,false,false,false,false,false,false,1,1,1,1,59
find-sec-bugs/find-sec-bugs,54aae259257a532cdf4ab88280cf308f4478fd22,h3xstream,2014-12-28 06:07:21 UTC,"Specialization of the descriptions for the various SQL injection (hibernate, JDO, JPA).
Re-factoring of the injection structure to permit different description per injection source.
",false,false,true,false,false,false,false,false,24,19,22,17,5839
centreon/centreon,86bb9899a2e5af5d33a68a8d75a0d8dfd74cb92d,Maximilien Bersoult,2014-12-16 13:49:04 UTC,"* Security Fix : SQL Injection and Command injection
",true,false,false,false,false,false,false,false,1,1,1,1,17375
centreon/centreon,97b290a486b6f0a99d358f7e1347afec55ad8cf2,Maximilien Bersoult,2014-12-16 14:01:22 UTC,"* Security Fix : SQL Injection and Command injection
",true,false,false,false,false,false,false,false,1,1,1,1,12
SonarSource/sonarqube,453af2ded25fd525a01f21c14791c32246660171,Julien Lancelot,2014-12-08 17:27:03 UTC,"SSF-24 SQL Injection on Measures page
",false,false,false,false,false,false,false,false,2,1,2,1,1
glpi-project/glpi,9f18d3b71450ac99e8e6d5870c2923d46f4d59d6,moyooo,2014-12-03 08:41:12 UTC,"Security : Blind SQL Injection
fixed #5147

",true,false,false,false,false,false,false,false,2,2,2,2,12377
find-sec-bugs/find-sec-bugs,ce8679f4ef5b39c0eae3056d4ecd908e22343f0f,h3xstream,2014-12-22 04:35:22 UTC,"SQL Injection : JDO additional injection signatures for filter and grouping setters. #23
",false,false,false,false,false,false,false,false,6,3,5,3,14986
SonarSource/sonarqube,a6320e1ba094d3d42a90e7ec871b1b04a9998a53,Jenkins CI,2014-12-08 17:29:24 UTC,"Automatic merge from branch-4.5

* origin/branch-4.5:
  SSF-24 SQL Injection on Measures page
  Revert ""SONAR-5844 Profile inheritance is always displaying '0 rules' whatever the content of Profiles""
  SONAR-5844 Profile inheritance is always displaying '0 rules' whatever the content of Profiles
  SONAR-5902 Fix preserving of planned=false
  Update documentation of PostJob extension
",true,true,false,false,false,false,false,false,4,3,4,3,19168
find-sec-bugs/find-sec-bugs,9bf582c3399da8769c4ce197f83798505b73feff,h3xstream,2014-12-22 05:01:10 UTC,"SQL Injection : Additional injection signatures for JDO (various filter parameters). #22
",false,false,false,false,false,false,false,false,8,6,7,5,25
frappe/frappe,40d818af90a5771acda3796ef9b0439c7aa7d057,Saurabh,2018-02-13 09:15:51 UTC,"[hotfix] sanitize fields to avoid mysql injection (#4994)

* [fix] sanitize fields to avoid mysql injection

* sanitize sql statements to avoid subqueries

* Added test cases

* Raise exception if mysql injection found in fields and related test-cases

* [fix] riase exception if blacklistes function or keyworkds found in fields
",true,true,false,false,false,false,false,false,3,2,3,2,7157
GoogleCloudPlatform/training-data-analyst,867c2482916c774e183cbea40f3d30b64711aed3,Ryan Gillard,2019-11-01 06:18:32 UTC,"added robust protection against SQL Injection attacks
",false,true,false,false,false,false,false,false,2,2,0,0,541
JetBrains/intellij-community,621158c494c96a0bf0190f4c027686267fa6fe87,Semyon Proshev,2016-04-08 17:50:43 UTC,"PY-19075 Fixed: PyCharm 2016.1.1 freezes immediately after the update

Improve SQL injection regexps so performance become better. Also add test for whitespace string injection
",true,false,true,true,false,false,false,true,1,1,0,0,236
JetBrains/intellij-community,1a3094ed6d0d9f0122f9ea62a35ca4a1f8cd724f,Semyon Proshev,2016-04-08 13:54:29 UTC,"PY-19075 Fixed: PyCharm 2016.1.1 freezes immediately after the update

SQL injection heavy cases tests have been added, limit injected string literal with 10K symbols
",true,true,false,false,false,false,false,false,1,1,1,1,1353
TrackerSB/Green2,72e736960dc5f44e3e94a242cd9b363a53da65de,Stefan Huber,2016-04-21 21:37:49 UTC,Tested whether SQL injection is possible. And it isn´t.,false,false,false,false,false,false,false,false,2,2,2,2,18
silverstripe/silverstripe-userforms,2cea1ced316ba96d78b2e1cbe06ab7cfe0fe152c,Frank Mullenger,2015-09-20 20:37:12 UTC,"Update UserDefinedForm.php

Casting to integer to prevent potential SQL injection.",false,true,false,false,false,false,false,false,1,1,1,1,
umbraco/Umbraco-CMS,05046638142c4289d5f9a4404d31e20b897b296c,Shannon,2015-09-29 09:28:12 UTC,"Fixes: U4-7158 Fix OrderBy query string parameter which can allow SQL Injection
",true,false,false,false,false,false,false,false,1,1,1,1,33
silverstripe/silverstripe-userforms,606b20bf7206fac684d7c65a24e3897a4d64f740,Damian Mooyman,2015-09-20 21:10:28 UTC,"Merge pull request #345 from frankmullenger/frankmullenger-sql-patch

FIX: Casting to integer to prevent potential SQL injection.",true,true,false,false,false,false,false,false,1,1,1,1,3957
derUli/ulicms,36fbed0d7fe4229f71985d747cbe8baa311ed66c,Ulrich Schmidt,2015-01-05 10:10:30 UTC,"SQL Injection
",false,false,false,false,false,false,false,false,1,1,1,1,24248
derUli/ulicms,105edc1c86738ce9d9ca410b87de42efc08fd6f0,Ulrich Schmidt,2015-01-12 21:38:52 UTC,"sql injection fixed
",true,false,false,false,false,false,false,false,1,1,1,1,0
domainmod/domainmod,f62ed8d047c403634770fa7a39c3dd4cb11254b9,Greg Chetcuti,2019-02-02 19:28:24 UTC,"Cast variables as integer

This is to fix potential SQL injection issues in general, but also
https://github.com/domainmod/domainmod/issues/76
",true,true,false,false,false,false,false,false,1,1,1,1,4
domainmod/domainmod,70d1f6336ab7c5b08dbd47c9ccbeef5e060a8398,Greg Chetcuti,2019-02-02 19:20:00 UTC,"Validate TLD to prevent SQL Injection

Fixes https://github.com/domainmod/domainmod/issues/74
",true,false,false,false,false,false,false,false,1,1,1,1,1
spotbugs/spotbugs,30b0777be588dfc68d0f900f62e5f13236a229c9,Bill Pugh,2007-07-26 16:54:01 UTC,"Added another SQL injection test case from  Matt Hargett

git-svn-id: e7d6bde23f017c9ff4efd468d79d66def666766b@8479 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3
",false,true,false,false,false,false,false,false,4,0,1,0,1571
xwiki/xwiki-platform,a069b8fb9305cca00b29f23bab31b20e2aca87cf,vmassol,2007-07-07 11:35:59 UTC,"XWIKI-1458: Superadmin login

* Prevents SQL injections of users
* Removed the like clause as it didn't bring anything over the equals sign (even for case-insensitive Db like MySQL)

git-svn-id: cfa2b40e478804c47c05d0f328c574ec5aa2b82e@3856 f329d543-caf0-0310-9063-dda96c69346f
",false,false,false,false,false,false,false,false,1,1,1,1,24
joomla/joomla-cms,5bd36db89c25d352bd58371844804712a4d90519,Enno Klasing,2007-07-13 17:09:00 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7937 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,1,1,1,1,2487
joomla/joomla-cms,97f8d4d15c8a1219e37411bf03d6f675ef16b6c5,Enno Klasing,2007-07-20 10:19:54 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8112 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,1,1,1,1,656
joomla/joomla-cms,717946c6e2cb539e03c5eb61795ff7df7dc402de,Enno Klasing,2007-07-16 15:25:18 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7993 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,1,1,1,1,320
joomla/joomla-cms,4057d02029a83a6e6ff372fea47a844e31d0aff6,Enno Klasing,2007-07-16 10:04:36 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7989 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,1,1,1,1,850
joomla/joomla-cms,c368150de104a49cb330e0345af4cbd4fc7ec9f0,Enno Klasing,2007-07-17 10:45:49 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8014 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,1,1,1,1,642
joomla/joomla-cms,3825fe7a80a1e16dc4085c066e93c9d295efd12a,Enno Klasing,2007-07-11 23:41:41 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7926 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,2,2,2,2,111
joomla/joomla-cms,af5c49d4c33e7d28a0318f8735ee818f034e0ebf,Enno Klasing,2007-07-20 16:14:16 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8123 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,2,2,2,2,60
joomla/joomla-cms,c277c23c617d5a9eddd2a45b7a438460d5fc6f15,Enno Klasing,2007-07-20 15:13:29 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8121 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,2,2,2,2,96
joomla/joomla-cms,494ae020781dd127a502b54e18456ae1c3c988bb,Enno Klasing,2007-07-18 09:51:13 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8040 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,3,3,3,3,61
joomla/joomla-cms,60ab157a9e829460d77d73c03784960e351db09c,Enno Klasing,2007-07-15 19:53:57 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7986 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,3,3,3,3,287
joomla/joomla-cms,21086355e63dc0514b094275df2bb224f290120d,Enno Klasing,2007-07-17 00:03:21 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8004 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,4,4,4,4,518
joomla/joomla-cms,eca1312391a13dfd500639ccac9f3d95f8f98adf,Enno Klasing,2007-07-18 23:23:27 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8071 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,4,4,4,4,812
joomla/joomla-cms,686b5fa4e8954be61e547b93b56be586ef1a1303,Enno Klasing,2007-07-11 00:13:54 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7921 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,5,5,5,5,71
joomla/joomla-cms,b3a1957fc095b6d28075dddec8aa2838b14704a4,Enno Klasing,2007-07-20 13:37:22 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8117 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,5,5,5,5,197
joomla/joomla-cms,4f455b16ea0c10d72045d0b15419a16d66046036,Enno Klasing,2007-07-13 21:48:48 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7944 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,8,7,7,6,279
joomla/joomla-cms,2d9d949b4f443f85112d6431ec0d9b5c22f829f0,Enno Klasing,2007-07-17 22:58:52 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8030 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,6,6,6,6,376
joomla/joomla-cms,6ff55050d016abc1fdc31d4975070fa1c4e6287e,Enno Klasing,2007-07-15 14:59:15 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7984 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,8,8,8,8,153
joomla/joomla-cms,9a0446f5b3a377a590186cb7af8b05d7ecec8510,Enno Klasing,2007-07-11 21:50:21 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7925 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,11,11,8,8,1296
joomla/joomla-cms,9d8d07c9348a76b5c1ca579f54a0f2096df86793,Enno Klasing,2007-07-14 16:16:41 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7963 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,8,8,8,8,864
joomla/joomla-cms,7cbfe86124328ca8209f92b52f3bdcb418355f7c,Enno Klasing,2007-07-17 16:42:27 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@8020 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,8,8,8,8,356
joomla/joomla-cms,09c9cd873afe21dc5018b4be104a504490aa32f8,Enno Klasing,2007-07-10 23:02:45 UTC,"Checking database queries for possible SQL injections

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7917 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",false,false,false,false,false,false,false,false,9,9,9,9,744
joomla/joomla-cms,072e9bf0f2266885f40eb23d54da636280b9b088,Enno Klasing,2007-07-14 01:52:32 UTC," # Checking database queries for possible SQL injections
 # Fixed database error in the 'loadmodule' content plugin which was caused by a missing/removed table
 # Fixed [#6055] Search plugins return results with access level 'special' to 'registered' users
 - Removed unnecessary database query from the administrator mod_menu module

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@7946 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",true,false,true,true,false,false,false,false,16,15,16,15,243
alphagov/paas-cf,8910376db1b5a2210adff26afbb7b46787fb24af,Alex Tomlins,2016-07-01 13:23:34 UTC,"Upgrade to cloudfoundry release 238.

This includes the fix for CVE-2016-4468 (a SQL injection issue in UAA).
",true,true,false,false,false,false,false,false,1,1,0,0,144
alphagov/publishing-api,ed864f242fc050a2251913378a84499629c11e08,Daniel Roseman,2016-07-05 12:29:05 UTC,"Merge pull request #396 from alphagov/sql-injection

Use constants when interpolating SQL.",false,true,false,false,false,false,false,false,1,1,1,1,8795
mrizkir/portalekampus,06949ec00931de3a5552769693f10c125a9927b3,mrizkir,2019-01-17 22:05:45 UTC,"mencegah serangan sql injection
",false,false,false,false,false,false,false,false,2,2,2,2,16
TrinityCore/TrinityCore,f8cb2f528ba2bc4d4006c529be41430d46031282,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
TrinityCore/TrinityCore,599a24df249ab43cb08864a6ffa19b1b769aab54,Vinolentus,2011-12-12 19:36:46 UTC,"Core/ObjectMgr: Fix possible SQL injection for game_tele
",true,false,false,false,false,false,false,false,1,1,1,1,131196
WildbookOrg/Wildbook,8be8a698809b2136e24d5acbefe9763a9b41809a,Charles Overbeck,2011-12-05 07:19:14 UTC,"Search on releaseDate. Implement using explicit parameters, which stops SQL injection.
",false,true,false,false,false,false,false,false,4,4,2,2,112
proftpd/proftpd,2ec0571bf5e5dbc528cf0db2f5a5d40f023b19fa,maniac777,2016-10-10 13:59:40 UTC,"fixed SQL Injection

According to SQL99 (and later, and maybe earlier too) quotation sign (') should be escaped as double quotation ('') but module escaped it incorrectly (\').
Oracle desn't understand escape sequence used currently whitch leads to sql injection.
",true,false,false,false,false,false,false,false,1,1,1,1,
proftpd/proftpd,e66ccf038c36508d6a55b97452eba23c231096a7,TJ Saunders,2016-10-21 16:13:08 UTC,"Merge pull request #343 from maniac777/master

Fixed potential SQL Injection when using ODBC to talk to SQL databases.",true,true,false,false,false,false,false,false,1,1,1,1,18473
php-fusion/PHP-Fusion,8ae299ffae41966372ab9f0132087ccfbcdd2f5d,Frederick MC Chan,2016-10-31 02:10:15 UTC,"Merge pull request #1130 from secp/Fix_SQLi_search_articles_stext

Fix SQL Injection in search_articles_include.php via stext parameter.",true,true,false,false,false,false,false,false,2,2,2,2,2
php-fusion/PHP-Fusion,321bd2ee791ebb3b6249ca0ec7b52fd8aeb98347,Li Shengshun,2016-10-30 17:05:53 UTC,"Fix SQL Injection in search_articles_include.php via stext parameter.
",true,false,false,false,false,false,false,false,2,2,2,2,1396
catarse/catarse,74b27874f53e181f3729ad83ed3f39849dec0af6,Adriano Benin,2013-10-22 18:19:17 UTC,"test for sql injection
",false,false,false,false,false,false,false,false,2,2,2,2,256
FloeDesignTechnologies/phpcs-security-audit,32e4796ed29574adc10f7411edbaa57562681666,Jonathan Marcil,2013-10-23 21:10:50 UTC,"refactoring of drupal7 (utils and db_query mysql injection)
",false,false,true,true,false,false,false,false,2,2,2,2,73
owen2345/camaleon-cms,5a383c8854ae3cd6a8e2a6c72df750e80189e720,Owen,2016-02-11 16:02:22 UTC,"fixed search for posts (avoid sql injection)
",true,false,false,false,false,false,false,false,1,1,1,1,12
paleobiodb/pbdb-new,452ded5e999e656125a4b63121ff7d2196ffab51,Michael McClennen,2016-02-19 02:46:01 UTC,"Bug fix:

  Large values for param 'loc' (>2000 characters) will be rejected.
  Also fixed an SQL injection vulnerability from this parameter.
",true,false,false,false,false,false,false,false,1,1,1,1,44736
cakephp/cakephp,05b11a4a0ccb01c3b3aeb6ca49a1e912453f331a,Mark Story,2015-08-07 03:09:24 UTC,"First pass at implementing orderAsc/orderDesc

The current order() method has a limitation which makes it impossible to
use expression objects that also have direction. These new methods make
it easier to support directed expression objects.

I've introduced a new expression object as I felt keeping
OrderByExpression simple was worth the extra bit of cost. Additionally
this makes SQL injection in the ORM internals more difficult as we rely
on the callers to provide a safe expression. I also experimented with an
array format, but felt it left us vulnerable to the issues we've
had in the past around request data manipulation.

Refs #7163
",false,true,true,true,false,true,true,false,4,3,4,3,952
publiclab/plots2,97ddfbc90c4bb05a91827c971148d5f2c9768127,Radhika Dua,2018-11-08 22:52:34 UTC,"Handle case in which node doesn't exist (#3854)

* Handle case in which node doesn't exist

* Remove check for node.body

* Fix SQL injection in the Node.exists
",true,false,false,false,false,false,false,false,1,1,1,1,18731
opengeogroep/safetymaps-server,d2461057cd2675b4f1bc1fc86a63656750e5990b,mvdstruijk,2018-11-06 09:22:25 UTC,"SQL injection prevention
",false,false,false,false,false,false,false,false,1,1,1,1,0
opengeogroep/safetymaps-server,47c68344b3ec4dc77d635773e326156d15ef6d15,mvdstruijk,2018-11-06 09:21:36 UTC,"not saving PATH in the database anymore; SQL injection prevention
",false,false,false,false,false,false,false,false,1,1,1,1,2
opengeogroep/safetymaps-server,24ee73b91e5ff67b3577926ece67ed6e5f061806,mvdstruijk,2018-11-06 08:59:49 UTC,"using parametrized queries SQL injection prevention
",false,false,false,false,false,false,false,false,1,1,1,1,2
esl/MongooseIM,5004caf4e564871db314f2eeb98e5811b712486f,Paweł Chrząszcz,2021-03-05 11:46:16 UTC,"Use prepared queries in list_users and count_users

Also:
  - Escape prepared LIKE expressions
    - Without escaping some characters, e.g. '%' would change the
      matching logic. This can be considered minor SQL injection.
    - Escaped characters: '%', '_', backslash
    - This is the same as for non-prepared queries
    - Possible TO DO: MSSQL has more characters to escape
    - Use '$' for escaping as backslash causes issues in Postgres
      and is not the default anyway in MSSQL
  - Change the 'prefix' option to binary (like the internal backend)
",false,false,false,false,false,false,false,false,3,3,0,0,2769
alphagov/whitehall,df4bce23713a7c37ef65dc1b520486ac5a331794,Tom Ward,2012-06-22 10:36:19 UTC,"Upgrade Rails to the latest 3.1 point release, including latest security SQL injection fixes.

A side-effect of this is that rack has been updated, something that we know in the past has caused issues with deployment.  We'll therefore need to carefully monitor things once this build has passed.
",true,true,false,false,false,false,false,false,3,3,1,1,9829
MISP/MISP,0687d3f6f48247fbcb510c26e0966864a8fa9081,Christophe Vandeplas,2012-06-06 09:12:19 UTC,"fixed huge SQL injection vulnerability created in bruteforce protection.
Shame on me !!!",true,false,false,false,false,false,false,false,1,1,1,1,9
Cacti/plugin_thold,b89c20be9c7d86434a4a72af856eabce8bd1f816,Jimmy Conner,2012-06-21 14:52:25 UTC,"bug: #0002247 - SQL Injection in thold.php (must be authenticated first) Thanks Primož!!
Upgraded version to 0.5 for new release

git-svn-id: bc81d99304d0253a5c399d6153c7e18fbe77c3ef@2090 67214365-cc29-0410-bfbe-843132f0f3d7
",true,true,false,false,false,false,false,false,3,3,2,2,12
find-sec-bugs/find-sec-bugs,b387bccd6b0e0bbe07cb62bbd9f8c234734a7583,h3xstream,2012-06-20 03:55:48 UTC,"Sql Injection detector added for Hibernate (JDO, JPA api to come)
",false,true,false,false,false,false,false,false,34,16,26,10,7316
centreon/centreon,0fb497ed685e33da418b2419ed0dcc265f10b6c1,Laurent Calvet,2019-10-28 12:14:38 UTC,"fix(ldap): Fix SQL injection on LDAP page (#8008)

When a user is connected he can perform an SQL injection (Time-Based SQL Injection Attacks) on the following page:
.../centreon/include/Administration/parameters/ldap/xml/ldap_host.php

Fixes # (CVE-2019-15300)",true,false,false,false,false,false,false,false,6,6,4,4,20139
Cacti/cacti,d6dc48503bbcde0717e7a93df7638fd4796200f4,cigamit,2019-10-12 19:48:02 UTC,"Resolving Issue #3025

SQL Injection in graphs.php
",true,false,false,false,false,false,false,false,2,2,1,1,22
keycloak/keycloak,428cd54a81fe07ad38a9997303ac90d3dfd0b6b7,Alarik Myrin,2014-08-09 17:59:20 UTC,"KEYCLOAK-621 fix searchForUserByAttributes method so that it works and is not subject to SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,
crispab/codekvast,e7d215661581d8e464f8feef5d943a6ad7a42776,Olle Hallin,2018-01-03 13:23:29 UTC,"Fixed SQL injection vulnerability.
",true,false,false,false,false,false,false,false,2,1,2,1,66
commsy/commsy,2b0fd57f6176de7a17cb6d240d0077ea43a61cd1,Christoph Schönfeld,2018-01-18 16:22:18 UTC,"item_manager hardening - sql injection escaping
",false,false,false,false,false,false,false,false,1,1,1,1,1795
Naught0/qtbot,0a8d81f7ecc5a7073e57f84584e7f07557edad8b,James,2017-09-23 04:15:40 UTC,"attempt to prevent SQL injections & fix DB functionality

",true,false,false,false,false,false,false,false,1,1,1,1,1370
Naught0/qtbot,a7c7bbe484183d2dee21f525c28c34c169b3f755,James,2017-09-23 05:47:20 UTC,"fix parameterization

this commit dedicated to all those in d.py who tried to shield an innocent mind from SQL injection and stupidity",true,false,false,false,false,false,false,false,1,1,1,1,77
Sirush/UDHBot,0c7c444907f752fecd449b54ef2a411e27c1af76,Sirush,2017-09-05 11:04:00 UTC,"Fixed possible sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,9570
wp-statistics/wp-statistics,d12210d5ecadae7d9fd6195114634b6925e28535,Greg Ross,2014-05-25 19:43:58 UTC,"- Updated get_IP to do some basic validation on the IP addresses in the headers to avoid passing sql injection attacks through to the database (note the attacks would fail as the wpdb code properly quotes the data, but they look really ugly in the statistics pages)
",true,false,true,false,false,false,true,false,1,1,1,1,7
ngs-doo/revenj,0ca85189db7479611a059b5bfebe3782059d8fa0,Rikard Pavelic,2014-05-22 14:52:09 UTC,"Various changes.

Serialization improvements (now deserialization works).
Chunked memory stream writer is using invariant culture, so it's not required to pass it everywhere explicitly.
Oracle reader.
LINQ improvements.
Oracle support for SQL - multiple columns instead of VALUE(X) for object type.
Basic improvements on subqueries - a lot more work required.
Postgres SQL injection fixed - pass through ConstantExpressionVisitor always, now that Npgsql is fixed.
Removal of dead code. Old Pg reader/writer should be removed completely. Few usages remaining.
Added AOP plugins and support in container.
If Revenj.AllowAspects is true intercept every service resolution and add aspects around it if registered.
Repository API fixes, use Query instead of FindAll, rename SearchAll to Search.
Added missing PdfConverter binary - release tool as open source.
",true,true,true,true,false,false,false,false,50,50,43,43,34377
engelsystem/engelsystem,4736d1eb9ee63f0bc3121e078e2c1ed6669f3fda,cookie,2006-12-10 11:07:21 UTC,"sql-injection beseitigt dank sven


git-svn-id: 53a6987c767db73dbc06d9b1606b82e19c12ae0c@203 29ba0400-6e00-0410-a75a-ca02368028f8
",false,false,false,false,false,false,false,false,1,1,1,1,5347
airslie/renalware-core,c3fa7b81fed8b169ae30cf685076ce56eb82a696,Tim Crowe,2018-02-27 13:16:11 UTC,"Merge pull request #1989 from airslie/chore/fix_potential_sql_injections

Fix SQL injection risks",true,true,false,false,false,false,false,false,1,1,1,1,0
airslie/renalware-core,a839400ce83073ff08ad7a0b873230e1bf650bd9,Tim Crowe,2018-02-27 09:52:56 UTC,"Remove SQL injection vulnerabity
",false,true,false,false,false,false,false,false,1,1,1,1,9
paghiper/whmcs,a52e6ee3d11211cee09e030029a42cbb45621bb4,Henrique Cruz,2019-11-14 20:43:19 UTC,"v2.0.2

*BUGFIX: Faturas parcialmente pagas agora são interpretadas corretamente
*Refatoração, redução do número de queries e mais
*Segurança: Maior proteção contra XSS e SQL injection
*Melhor precisão na determinação de nova data de vencimento, ao reemitir uma fatura vencida
*Novo texto descritivo para a multa proporcional no back-end",true,false,false,false,false,false,false,false,1,1,1,1,2
sysown/proxysql,8a778af489930109ce1642f861000fb52ac2f79a,René Cannaò,2019-11-27 02:52:55 UTC,"Merge pull request #2420 from sysown/v2.0.9-libinjection

Detect SQL injection",false,true,false,false,false,false,false,false,11,11,2,2,30
sysown/proxysql,e12a3b27920339c9f0c98f4e274ee64082c6b0b5,René Cannaò,2019-11-27 02:04:50 UTC,"Support for automatic SQL injection detection

Library libjection is being used.
New variable mysql-automatic_detect_sqli defines if the feature is enabled or not.
If an SQL injection is detected:
- the client connection is immediately terminated
- an entry in the error log is reported
",true,true,false,false,false,false,false,false,11,11,2,2,82
sysown/proxysql,8954b46a0296b38b0a7949deb8a54721b51d0547,René Cannaò,2019-11-27 02:22:36 UTC,"Error log now lists the SQL injection query

Also added status variable automatic_detected_sql_injection to count detected SQL injection
",true,true,false,false,false,false,false,false,3,3,2,2,17
bkimminich/juice-shop,117d0c17c1f0927daa8f4bd6f1e7aebb7cbd64ba,Bjoern Kimminich,2020-08-17 21:19:48 UTC,"Add vuln spec examples for SQL Injection and XXE
",false,false,true,false,false,false,false,false,1,1,0,0,1423
paghiper/whmcs,d9dc7f77423a2ca30ad25baf897003f09419e212,Henrique Cruz,2019-10-24 18:31:55 UTC,"Melhorias gerais

Refatoração, redução do número de queries e mais
BUGFIX: Faturas parcialmente pagas agora são interpretadas corretamente
Segurança: Maior proteção contra XSS e SQL injection",true,false,false,false,false,false,false,false,1,1,1,1,1797
skyvers/skyve,16d02518fcae1f0856485c8e07b208427aa6bea0,Mike Sands,2019-10-04 13:42:06 UTC,Fix SQL Injection vulnerability in SQLMetaDataUtil.,true,false,false,false,false,false,false,false,3,3,3,3,776
skyvers/wildcat,16d02518fcae1f0856485c8e07b208427aa6bea0,Mike Sands,2019-10-04 13:42:06 UTC,Fix SQL Injection vulnerability in SQLMetaDataUtil.,true,false,false,false,false,false,false,false,3,3,3,3,776
joomla/joomla-cms,70cf38e09b4cee7c5a4d49c42ac9e75ce027a8b7,Rey Gigataras,2005-10-09 19:12:28 UTC," # Fixed SQL injection bug in content submission - * Medium Security Bug *


git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@432 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
",true,false,false,false,false,false,false,false,2,2,2,2,12
xwiki/xwiki-platform,d08f1ccaff25bb67c46ddbcda0642f6d2430175a,Vincent Massol,2013-11-28 12:58:07 UTC,"XE-1348: WebRss doesn't support the tag parameter
XE-1349: Potential SQL injection in WebRss
XWIKI-9743: Activity Macro's RSS feed doesn't support passing multiple spaces or tags
",false,false,false,false,false,false,false,false,2,2,0,0,158
CartoDB/CartoDB-SQL-API,91afe720bca596869b98404538929671af60a7d1,Andrew Thompson,2015-08-04 21:06:11 UTC,"Merge pull request #237 from CartoDB/docs-injection-psql-users

Add doc Q&A about SQL injection and Postgres users",false,false,true,false,false,false,false,false,1,1,0,0,1
MaharaProject/mahara,975c05d2c3aed27b0e31e50bd5c1116c58d184e0,Charlie Amoah,2015-08-06 03:36:52 UTC,"behat test:sql injection in group search result and create group

Change-Id: I2f3b2c34772155a0f8f89239b34dd29414b1e8c3
Note: Test doesn't work beacuse I can't create groups
",true,false,true,false,false,false,false,false,1,0,0,0,
picoCTF/picoCTF,1892800490d96ead98d7b0faa81e42374374a141,Maverick Woo,2018-09-15 22:56:18 UTC,"Default obfuscate_problem_directories to true; resolves #160

Also make the obfuscated directory name a bit more human-friendly by
prepending the username of the problem.

There is no apparent down side to turning this option on by default and
the result is we get difficult-to-guess directory names in `/problems`:

```
root@pico-local-dev-shell:~# ls -1 /problems/
buffer-overflow-1_0_bab40cd8ebd7845e1c4c2951c6f82e1f
buffer-overflow-1_1_f49b6bd5da29513569bd87f98a934fa6
ecb-1_0_73a0108a98d2862a86f4b71534aaf7c3
ecb-1_1_83b2ed9a1806c86219347bc4982a66de
sql-injection-1_0_9e114b246c48eb158b16525f71ae2a00
sql-injection-1_1_10a4b1cdfd3a0f78d0d8b9759e6d69c5
```

(Based on my understanding, the benefit of having such obfuscated
directory names is that there is almost no chance of getting into a
wrong problem directory and thus getting the wrong flag. Of course,
there are also symbolic links in ~/problems/ to further reduce this
chance.)

I have also checked that `share_instances.py` continues to work
correctly:

```
player1@pico-local-dev-shell:~$ ls -l problems/
total 4
lrwxrwxrwx 1 root root 62 Sep 15 22:54 Buffer Overflow 1 -> /problems/buffer-overflow-1_1_f49b6bd5da29513569bd87f98a934fa6
```
",true,false,false,false,false,true,false,false,2,2,1,1,5335
sgmap/tps,1ac8840bc9fc62d8450ae26882987e63fb0bd3df,Frederic Merizen,2018-09-25 18:21:02 UTC,"[#2579] Protect against SQL injection on column and table in `filtered_ids`
",false,false,false,false,false,false,false,false,1,1,1,1,36
smrealms/smr,4b12e060bd8bce8de9001af34af49673e64790c1,Dan Hemberger,2018-09-09 04:34:05 UTC,"login_create_processing.php: minor improvements

* Remove restriction that password not contain an apostrophe.
  This is not necessary, since passwords are hashed (no issues with
  sql injection), and this restriction wasn't consistently enforced
  anyway.

* Provide a better error message when account login name and password
  are equal, since that is an insecure thing to do. This is not a
  data breach because the user is explicitly providing both fields.
",false,true,false,false,false,false,false,false,1,1,1,1,71
WordPress-Coding-Standards/WordPress-Coding-Standards,3bdd339ad66e68147f94e71e8c55effa18ca2eaa,jrfnl,2017-10-18 21:37:31 UTC,"PreparedSQLPlaceholders: improved handling of queries using ` IN ` icw dynamic placeholder creation

In addition to being able to whitelist a placeholder mismatch, the sniff can also become smarter about this, so let's.

These changes will detect a typical dynamic placeholder creation pattern in combination with queries using ` IN (%s)` and will adjust whether or not to throw errors based on that.

Notes:
* Allows for using `sprintf( 'query ... IN (%s)', implode( ... ) )` and for ` 'query ... IN (' . implode( ... ) . ')'`.
* Will not count placeholders found in the `implode()`.
* Will adjust the number of replacement values expected based on the number of ` IN ()` clauses encountered.
    Generally speaking only 1 replacement variable is expected when dynamic placeholder creation is encountered as the only way to pass the variables in would be to pass them as an array in the first parameter.
* Additionally if an inline `implode( ... )` call is used in a `IN ()` with quotes inside the parentheses, an error message will be thrown as that will screw up the escaping and possibly allow for SQL injection anyway.
",false,false,true,false,false,false,false,false,3,1,2,1,7641
catmaid/CATMAID,0b06c6d0178e1e0462da9e8fe8254162445e3df1,Albert Cardona,2014-01-19 21:12:31 UTC,"Navigator: prevent potential SQL-injection attacks.

In short, no variables from the client should ever go directly into
an SQL query string.
",true,false,true,true,false,false,false,false,1,1,1,1,6
catmaid/CATMAID,944138e68301d70ced6dde68b300fd660d1f6197,Albert Cardona,2014-01-19 16:47:21 UTC,"Navigator: send annotations to server side as IDs, not names.

First, IDs are far cheaper to both send and query for.
Second, IDs can't contain SQL injections.

While at it, patched an error, where the NeuronListNode table of
an AnnotationListNode would list neurons for one of the co-annotations
only, not for all.
",true,false,false,false,false,false,false,false,2,2,2,2,90
osTicket/osTicket,7e7c4cf0a7daff517f37432fc9de4df34981ce16,Jared Hancock,2014-01-08 18:54:25 UTC,"Fix possible serious errors in dynamic form fields

Fix dropping of materialized view when variable name is changed

Ensure view exists before merging updates

Prevent possible sql injection error in field name used in the materialized
view.

Prevent possible xss error in the display of the field label and variable
name in the admin panel.
",true,true,false,false,false,false,false,false,4,4,4,4,131
osTicket/osTicket-1.8,7e7c4cf0a7daff517f37432fc9de4df34981ce16,Jared Hancock,2014-01-08 18:54:25 UTC,"Fix possible serious errors in dynamic form fields

Fix dropping of materialized view when variable name is changed

Ensure view exists before merging updates

Prevent possible sql injection error in field name used in the materialized
view.

Prevent possible xss error in the display of the field label and variable
name in the admin panel.
",true,true,false,false,false,false,false,false,4,4,4,4,131
killbill/killbill,b9ff9b548edbca87f9bd1e74358654f02c546dd2,Pierre-Alexandre Meyer,2014-01-29 16:29:33 UTC,"search: prevent SQL injection

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
",true,false,false,false,false,false,false,false,10,10,7,7,1235
openpetra/openpetra,ed63c0260db71a84894e26d8a875e3a4d32b645f,Timotheus Pokorra,2017-01-30 22:00:12 UTC,"Merge pull request #204 from tpokorra/fixxmlreports

fix issues with possible sql injections
this is quite a refactoring of the xml reports, but also adds again unit tests for the reports
fixes #198",true,true,true,true,false,false,false,false,54,29,34,26,
openpetra/openpetra,64372802181f5b12a6a3945f702cc903e0861c25,Timotheus Pokorra,2017-01-28 05:38:27 UTC,"guard against sql injection in calculation of <value> tags.
the method ValidateAgainstSQLInjection checks for quote, semicolon and comment characters.
perhaps use TRptFormatQuery instead of TVariant as result value? to properly use OdbcParameters
",false,false,true,true,false,false,false,false,1,1,1,1,33
wlx65003/HZNUOJ,6b797c3cf6b1fd179ea5c380155f40634a790f29,D_Star,2017-01-06 07:10:05 UTC,"some SQL injection vulnerability fixed
",true,false,false,false,false,false,false,false,7,5,7,5,2494
OWASP/OWASP-VWAD,00ba0ab3d59c9ca290662ded8c5e242acd7a41ae,kingthorin,2017-08-04 19:35:42 UTC,"New Entries & Fixes

* Add NoSQL Injection Lab [offline](Fixes OWASP/OWASP-VWAD#20).
* Fix Node Goat entry [offline].
* Add hackthis.co.uk [online](Fixes OWASP/OWASP-VWAD#23)",true,true,false,false,false,false,false,false,2,2,0,0,26
UniversityOfAlberta/GrandForum,0b233daf5788809280a04d72b7e426a6b4bbbf2e,Finalfantasykid,2017-08-18 17:12:51 UTC,"-Fixed a possible sql injection
",false,false,false,false,false,false,false,false,1,1,1,1,2596
ManageIQ/manageiq,3c32915d530948ab2a372408292b63735e79c76c,Julian Cheal,2017-08-22 13:09:16 UTC,"Fixing Brakeman sql injection warning.

This isn't a tidy replacement, but will be replaced by an Arel query
at some point.
",false,false,true,true,false,false,false,false,1,1,1,1,1328
XOOPS/XoopsCore25,c16d70a6cac130aff4310b2f5e12f6a5eb6b6297,geekwright,2017-08-02 22:11:59 UTC,"Escaping issues

From Nguyen Thanh Nguyen:
https://tsublogs.wordpress.com/2017/07/12/xoops-core-2-5-8-1-install-db-sql-injection/
https://tsublogs.wordpress.com/2017/04/24/xoops-core-2-5-8-1-install-db-cross-site-scripting/
",false,false,false,false,false,false,false,false,1,1,1,1,1268
bywatersolutions/ByWater-KOHA,1c2ee5903cfe19379d20a847558fb0c176580cc0,Colin Campbell,2017-08-08 10:47:40 UTC,"Bug 19061: Avoid SQL Injection vulnerability

Embedding values in the SQL statement allows the passing of values
that would normally be rejected resulting in mysql errors
variables should always be passed via placeholders and
the execute call

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
",true,false,false,false,false,false,false,false,1,1,1,1,8314
bywatersolutions/bws-package,1c2ee5903cfe19379d20a847558fb0c176580cc0,Colin Campbell,2017-08-08 10:47:40 UTC,"Bug 19061: Avoid SQL Injection vulnerability

Embedding values in the SQL statement allows the passing of values
that would normally be rejected resulting in mysql errors
variables should always be passed via placeholders and
the execute call

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
",true,false,false,false,false,false,false,false,1,1,1,1,8314
Koha-Community/Koha,1c2ee5903cfe19379d20a847558fb0c176580cc0,Colin Campbell,2017-08-08 10:47:40 UTC,"Bug 19061: Avoid SQL Injection vulnerability

Embedding values in the SQL statement allows the passing of values
that would normally be rejected resulting in mysql errors
variables should always be passed via placeholders and
the execute call

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
",true,false,false,false,false,false,false,false,1,1,1,1,8314
LMSCloud/Koha-LMSCloud,1c2ee5903cfe19379d20a847558fb0c176580cc0,Colin Campbell,2017-08-08 10:47:40 UTC,"Bug 19061: Avoid SQL Injection vulnerability

Embedding values in the SQL statement allows the passing of values
that would normally be rejected resulting in mysql errors
variables should always be passed via placeholders and
the execute call

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
",true,false,false,false,false,false,false,false,1,1,1,1,8314
FriendsOfPHP/security-advisories,e1e5fdf63637d759d666332924349aa4aaf005de,Marco Menzel,2018-04-30 07:10:00 UTC,"add potential sql injection vector in adodb-php
",false,true,false,false,false,false,false,false,1,1,0,0,2458
FriendsOfPHP/security-advisories,3a14c1fff3e51a94440650f6faea6876f7cfd141,Fabien Potencier,2018-04-30 07:23:18 UTC,"Merge pull request #295 from ocramleznem/add-adodb-20180306

add potential sql injection vector in adodb-php",false,true,false,false,false,false,false,false,1,1,0,0,14146
CompassionCH/compassion-switzerland,ff82f61717eaed8c741751de63a6a2f5d5850871,Nicolas Badoux,2018-04-06 07:30:20 UTC,"Fixed sql injection and test failure
",true,false,false,false,false,false,false,false,14,14,2,2,1110
ktaranov/sqlserver-kit,759a12c8f231fa6afc5a17e6984dc40e1f56ae3c,Konstantin,2016-04-04 08:23:24 UTC,[FEATURE] Add SQL Injection Cheat Sheet,false,true,false,false,false,false,true,false,1,1,0,0,747
fossology/fossology,368b3cb72f8bff49b81b21ef6a9786910857138d,Tim Murphy,2016-04-06 08:27:36 UTC,"fix(security) cp2foss SQL injection vulnerability

* fix(security) cp2foss SQL injection vulnerability

Two SQL queries in the cp2foss utility insert variables into the SQL string, which creates an SQL injection vulnerability. This PR converts those queries into prepared statements using DbManager. SELECT \* has also been replaced with SELECT <fields> for efficiency.

removing unnecessary str_replace

commited by @timurphy as PR #665",true,false,true,true,false,false,false,false,1,1,1,1,109677
ledger123/runmyaccounts,054548d4487df45f0a3d7050c49ac28651463af0,nils,2016-04-14 05:52:33 UTC,Merge branch 'sql-injection-review' of https://github.com/ledger123/runmyaccounts.git into sql-injection-review,false,true,false,false,false,false,false,false,1,1,1,1,962
molgenis/molgenis,b1a15674f79214c94e0684e9681a5d404b9ed22f,dennishendriksen,2016-04-06 11:39:44 UTC,"Fix SQL injection, use column 'order' for junction tables
",true,false,false,false,false,false,false,false,2,2,2,2,58
ledger123/runmyaccounts,9e119af3005ea496f9eaf61aa38c996603bbb503,nils,2016-04-13 13:49:40 UTC,$sortorder sql-injection fixes,true,false,false,false,false,false,false,false,3,3,3,3,8624
ledger123/runmyaccounts,e6833ca5a8d8f13156eb83b1a9a34eec9b1acf36,nils,2016-04-14 07:38:16 UTC,Merge branch 'sql-injection-review' of https://github.com/ledger123/runmyaccounts.git into sql-injection-review,false,true,false,false,false,false,false,false,14,14,14,14,105
ledger123/runmyaccounts,1e8c6ae84b5453109d860b54b678117db224595f,nils,2016-04-20 15:46:05 UTC,"Merge branch 'sql-injection-review'
",false,true,false,false,false,false,false,false,33,33,33,33,97
folio-org/raml-module-builder,ad079b0d72becdfd4490d3bdc3b9ff683fd66662,julianladisch,2019-08-23 08:53:09 UTC,"Merge pull request #501 from folio-org/RMB-200-sql-injection-updateSection

RMB-200: Single quote SQL Injection in PostgresClient.update with updateSection",false,true,false,false,false,false,false,false,3,2,3,2,16
folio-org/raml-module-builder,b7ef741133e57add40aa4cb19430a0065f378a94,Julian Ladisch,2019-08-16 15:50:39 UTC,"RMB-200: Single quote SQL Injection in PostgresClient.update(table, updateSection, ...)
",false,false,false,false,false,false,false,false,3,2,3,2,116
folio-org/raml-module-builder,a095a328d8df83f447cb923909a13240951549ff,julianladisch,2019-08-23 08:36:23 UTC,Merge branch 'master' into RMB-200-sql-injection-updateSection,false,true,false,false,false,false,false,false,17,5,9,3,0
DMPRoadmap/roadmap,f97d3f227497d507c22ce1a68c4d27f641e25afd,Sam Rust,2020-10-16 15:44:19 UTC,"ignore brakeman redirect warnings, resolve one of the SQL injection warnings
",false,false,false,false,false,false,false,false,2,2,1,1,45
MushroomObserver/mushroom-observer,4e67c3a4839b569d9cd1731de8752b4aad3ea61b,Joe Cohen,2020-10-18 22:46:34 UTC,"Address SQL injection issue in name/taxonomy
",false,false,false,false,false,false,false,false,1,1,1,1,133
MushroomObserver/mushroom-observer,2b7866f87acc71e98dcde54485ed58c2fcdccd97,Joe Cohen,2020-10-19 15:22:47 UTC,"Revert ""Address SQL injection issue in name/taxonomy""

See discussion at https://github.com/MushroomObserver/mushroom-observer/pull/693#issuecomment-712241285

This reverts commit 4e67c3a4839b569d9cd1731de8752b4aad3ea61b.
",true,false,false,false,false,false,false,false,1,1,1,1,974
MushroomObserver/mushroom-observer,fe9d4ec39f818852de4190877c72f8fdfe320820,Joe Cohen,2020-10-18 20:32:44 UTC,"Revert ""Fix TooManyLine offen in create.rb""

It's creating SQL injection issues -- the same ones I fixed earlier, darn it.

This reverts commit 117d2dda40b8b5a7b1ef73a49a84a50e59513e8f.
",true,false,false,false,false,false,false,false,1,1,1,1,6
2pisoftware/cmfive-core,7743067fd6ac62baf8c61b77ce00486c1e64b8a6,D.Crannaford,2020-10-26 23:39:46 UTC,"fix: corrected quoted SQL times

Fixes 'random'/periodic? DB error
Thrown when auth audit service polls idle session times.
Relates to changes on SQL injection defence.
Reordered single quotes to fix.

refs:
issues:
",true,false,false,false,false,false,false,false,1,1,1,1,166784
Samfundet/Samfundet,28ea3354fbe44d5c98d12255a3a1aae569111ae3,Marcus Frenje,2020-10-15 16:19:27 UTC,"Merge pull request #682 from Samfundet/fix-sql-injection-error-messages

Fix sql injection error messages",true,true,false,false,false,false,false,false,1,1,1,1,1
MushroomObserver/mushroom-observer,37adeecd0c46de5224a14a17c0d2defeedebbab7,Nathan Wilson,2020-10-23 03:18:22 UTC,"Fix SQL injection warning from CodeClimate
",false,false,false,false,false,false,false,false,1,1,1,1,168
MushroomObserver/mushroom-observer,2ff62bed5100994de486513ef53ef5b6f89ffbbf,Joe Cohen,2020-10-18 17:24:35 UTC,"Fix Codeclimate SQL injection issues
",true,false,false,false,false,false,false,false,2,2,2,2,142
Cacti/plugin_mactrack,f02d27d9eba85791fe788943d994925a56c559ed,TheWitness,2020-10-26 01:03:37 UTC,"Correcting formating and correcting some SQL Injection issues
",true,false,false,false,false,false,false,false,3,3,3,3,59
CompassionCH/compassion-switzerland,b8d01ac4144e492b034139c802f0ca0de2077db6,Nicolas Badoux,2018-03-22 15:47:34 UTC,"Fixes for odoo pylint

switching to tab to comply with odoo pylint

Further pylint fixes

Removing risk of SQL injection, thanks pylint
",true,true,false,false,false,true,false,false,28,28,13,13,68
ibissource/iaf,505267d5aacb81b6f0dc1340500c06fa03ace5cc,Niels,2020-06-16 14:53:04 UTC,"Add ability to suppress sql injection warnings (#830)

",false,true,false,false,false,false,false,false,4,2,1,1,20
hughsie/PackageKit,4da52e37a5afafd257e606da82e4848567472bde,Juho Hämäläinen,2020-06-05 07:50:58 UTC,"pk-transaction-db: Use statements for queries with input

Prevent SQL injection by using sqlite3 statements for SQL queries
when the query is formatted with user provided input.

Signed-off-by: Juho Hämäläinen <ef1f2f869365661f00057f2504150ae4cf31f454@jolla.com>
",false,false,false,false,false,false,false,false,1,1,1,1,
CanCanCommunity/cancancan,1cb33bdac5d88591d1e81d102df8c8183262bc77,Ryan Bates,2013-02-22 01:43:36 UTC,"Merge pull request #800 from wopata/master

Working around a SQL Injection Vulnerability in Ruby on Rails (CVE-2012-5664)",true,true,false,false,false,false,false,false,3,3,3,3,24684
qcode-software/qcode-tcl,79b90f2a16cc8488db1d48d110e06ed94d47a3f9,John Dirk Morrison,2014-11-12 10:45:09 UTC,"MD Fixes and Adding SQL Injection Page
",true,true,false,false,false,false,false,false,4,4,0,0,23
openstack/monasca-api,cbedd430020b7182b6960ad1ea958ce1b8a38f57,Deklan Dieterly,2014-11-07 17:04:25 UTC,"Fix sql injection vulnerability

Note that the dimension list cannot have any whitespace after the comma.

Change-Id: I6b5d4d572630252c393ff92b2b3cac5a8c21b56b
",true,false,false,false,false,false,false,false,3,3,3,3,1165
stackforge/monasca-api,cbedd430020b7182b6960ad1ea958ce1b8a38f57,Deklan Dieterly,2014-11-07 17:04:25 UTC,"Fix sql injection vulnerability

Note that the dimension list cannot have any whitespace after the comma.

Change-Id: I6b5d4d572630252c393ff92b2b3cac5a8c21b56b
",true,false,false,false,false,false,false,false,3,3,3,3,1165
espinosaluis/TrackMeViewer,e3ac33598b93c254ffb40e248e0b28930b79942d,Fabian Neundorf,2015-12-09 21:01:04 UTC,"Replace mysql specific calls with PDO usage

To prevent SQL injections, it is using PDO which supports binding parameters.
Also the `mysql_query` function has been deprecated in favour of PDO or
`mysqli`. Using PDO allows in theory to use different databases in the future.

To support different databases the connection must be more generically
defined which is prepared already in this patch but doesn't require to change
the configuration file yet.
",false,true,false,false,false,false,false,false,5,5,5,5,32
WillyXJ/facileManager,b183850c1a0c9e1519382ce4449223e1d90bb12f,WillyXJ,2020-01-30 16:32:13 UTC,"Merge pull request #475 from shoeper/fix

Fix SQL injection",true,true,false,false,false,false,false,false,1,1,1,1,650827
apache/kylin,9fc77eb523aab5aa0299888280241a84b64c4457,nichunen,2020-01-10 13:03:31 UTC,"Fix sql injection issue
",true,false,false,false,false,false,false,false,1,1,1,1,2061
apache/kylin,c6d4c2b0f4e76477c27d3f31c1a0e441ce22dcc1,nichunen,2020-01-23 03:23:10 UTC,"Validate uuid to prevent sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,2472
WillyXJ/facileManager,0692eb8835ea58817e840ea28152bb822c5d3337,Sven Höper,2020-01-25 12:31:02 UTC,"Fix SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,
mybb/mybb,7604679c2bb8317453ff7712762860561944aed0,Nathan Malcolm,2012-12-12 04:06:40 UTC,"Fixes posthash SQL injection vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,7550
mybb/mybb,a645e9fc4392e557ac183a2473afc72b65458705,Nathan Malcolm,2012-12-12 04:34:49 UTC,"Fixes posthash SQL injection vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,28
stoqs/stoqs,5f3d576abd166ccbd3fabc614909f4059ba3e9cb,Mike McCann MBARIMike,2012-12-11 08:32:18 UTC,"Test type() of qs_mp for whether it's a RawQuerySet or not, rather than catch an AttributeError.  Don't allow SQL injection on parametervalue query.
",false,false,false,false,false,false,false,false,1,1,1,1,578
navnorth/wp-oer,e2a176a7d6249409c991eebafa6d4701ea20475a,joe hobson,2015-04-24 16:52:12 UTC,"Merge pull request #12 from johnpaulbalagolan/master

SQL injection fixes and tidying up template errors",true,true,true,true,false,false,false,false,17,17,12,12,3755
ministryofjustice/parliamentary-questions,7428a964ead7f5d26c928b3baba0e142fad9daad,Jeremy Fox,2015-04-20 13:43:03 UTC,"Merge pull request #255 from ministryofjustice/sql_injection_warning

Add possible SQL injection warning to brakeman.ignore",false,false,false,false,false,false,false,false,1,1,0,0,174
ministryofjustice/parliamentary-questions,4c83be58b83dc9352de078356cce9caa16c18237,Stephen Richards,2015-04-20 13:10:47 UTC,"Add possible SQL injection warning to brakeman.ignore
",false,false,false,false,false,false,false,false,1,1,0,0,196
navnorth/wp-oer,0be49b01c66ebfe279e3f771c5572533211e1f4f,John Paul Balagolan,2015-04-22 14:30:11 UTC,"Fixed 2 SQL Injection vulnerabilities on resource category template.
",true,false,false,false,false,false,false,false,1,1,1,1,49
navnorth/wp-oer,fc442595e69900e51b0c11977ade89137d97f9d2,John Paul Balagolan,2015-04-23 07:32:30 UTC,"Fixed SQL Injection vulnerabilities in ajax/ajax.php and includes/assign_categories.php
",true,false,false,false,false,false,false,false,2,2,2,2,1022
navnorth/wp-oer,c465fba0e942db1a7306d8346224e7f35cad0a6e,John Paul Balagolan,2015-04-23 11:37:27 UTC,"Fix SQL Injection vulnerability in codes using $wpdb->query(), $wpdb->get_row(), and $wpdb->get_var()
",true,false,false,false,false,false,false,false,3,3,3,3,131
navnorth/wp-oer,1d678b8eb6425d8906b122cf655c6250d6ca142c,John Paul Balagolan,2015-04-23 09:26:02 UTC,"Fixed SQL Injection vulnerabilities in WP OER plugin when used with $wpdb->get_results()
",true,false,false,false,false,false,false,false,5,5,5,5,113
agdsn/pycroft,b9e37ad0a452ac5e9fb2a1d747ec950d399cf644,Jakob Müller,2019-04-18 16:44:01 UTC,"Use sqlalchemys text function to prevent sql-injection

",false,false,false,false,false,false,false,false,1,1,1,1,4
all-of-us/raw-data-repository,b377d648cf6f9c4a7a1e788434640eb9d0f8f816,wangy70,2019-04-16 16:20:28 UTC,"[DA-1023] Wangy70/genomic set input file handler (#1024)

* create genomic_set_file_handler.py

* genomic_set_file_handler.py ongoing

* genomic_set_file_handler.py ongoing

* genomic_set_file_handler.py ongoing

* genomic_set_file_handler.py ongoing

* genomic_set_file_handler.py ongoing

* genomic_set_file_handler.py ongoing

* genomic_set_input_file_handler ongoing

* genomic_set_file_handler.py test cases

* genomic_set_file_handler.py remove unuse method

* genomic_set_file_handler.py remove dup method

* genomic_set_file_handler.py remove unuse variable

* fix sql injection warning
",false,false,false,false,false,false,false,false,8,5,5,3,6997
salesagility/SuiteCRM,1404635bc6c4a37f437ed34b3f3e2f2cb0677bc0,c.panton,2020-01-17 09:42:49 UTC,"Merge branch 'fix/duplicate_contact' into 'patch'

Fixed #79 - SOAP - There is a SQL Injection vulnerability which might allow a malicious authenticated user to disclose arbitrary data from the database. 9/13

See merge request product/suitecrm!142",true,true,true,true,false,false,false,false,1,1,1,1,3
salesagility/SuiteCRM,594862b55f18924dbe338067613cace0f69786d4,c.panton,2020-01-17 09:39:07 UTC,"Merge branch 'fix/email_remove_contact' into 'patch'

Fixed #82 - There is a SQL Injection vulnerability which might allow a malicious authenticated user to 12/13

See merge request product/suitecrm!139",true,true,false,false,false,false,false,false,1,1,1,1,0
salesagility/SuiteCRM,5ea69f5fdd6a9e1a334511d6875ab142c1e157bc,c.panton,2020-01-17 09:52:42 UTC,"Merge branch 'fix/email_multi_contact' into 'patch'

Fixed #81 - EmailUIAjax - contactData - There is a SQL Injection vulnerability which might allow a malicious authenticated user to disclose 11/13

See merge request product/suitecrm!140",true,true,false,false,false,false,false,false,1,1,1,1,9
salesagility/SuiteCRM,a332f61dc9c1523e26adb275aa4fbf400a14484d,c.panton,2020-01-17 09:38:12 UTC,"Merge branch 'fix/mailmerge' into 'patch'

Fixed #83 - MailMerge - search - There is a SQL Injection vulnerability which might allow 13/13

See merge request product/suitecrm!138",true,true,false,false,false,false,false,false,1,1,1,1,1174
tripal/tripal_analysis_expression,000f9b3baa5ff7e53b8b73504f965aa4ab9e0911,Noah Caldwell,2020-01-27 17:40:44 UTC,"Made changes specified in comments on pull request. (Removed unnecessary
query, some unnecessary variables, SQL injection threat, and added
back page title.)
",false,false,true,true,false,false,true,false,1,1,1,1,4118
musIndex/mouseinventory,9cc30af43d2d445c91c9586cc26fea19fb3f158c,Jonathan Scoles,2012-08-08 05:23:03 UTC,"Update sort options for change requests

This is sql injection-bait, but it's admin only, so meh.
",false,true,false,false,false,false,false,false,1,1,0,0,17
Admidio/admidio,744a4f5409a8aac238796993ae7fdee31405f850,Markus Faßbender,2012-08-21 20:38:55 UTC,"BUG[3560452] SQL-Injection in GET parameter from type boolean
",true,false,false,false,false,false,false,false,1,1,1,1,7312
injcristianrojas/swsec-intro,f6a0ca50bf845bd8c7cd9acd430b65e5d92d3569,Cristián Rojas,2012-08-09 03:50:18 UTC,"Suceptible a SQL Injection ciegos
",false,false,false,false,false,false,false,false,1,1,1,1,5
bywatersolutions/bws-package,a08c09884ec8799f2835b6a63ed10833bd927fbf,Julian Maurice,2012-08-20 06:57:42 UTC,"Bug 7678: follow-up to pass QA

Check input parameters to avoid SQL injection
Rewrite a for loop for readability

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>
Signed-off-by: Katrin Fischer <Katrin.Fischer.83@web.de>
All tests pass, perlcritic is unchanged.

Test plan
- Verify ExtendedPatronAttributes hides/shows new patron attribute
  search criteria
- Verify patron attribute show up correctly
  - pull down list for attributes linked to authorized values
  - input field for other attributes
- Verify search works correctly
Signed-off-by: Jared Camins-Esakov <9d46e7279315265164da8c55a0f85bf9cb5995a3@cpbibliography.com>
",true,false,true,true,false,false,false,false,1,1,1,1,9322
Koha-Community/Koha,a08c09884ec8799f2835b6a63ed10833bd927fbf,Julian Maurice,2012-08-20 06:57:42 UTC,"Bug 7678: follow-up to pass QA

Check input parameters to avoid SQL injection
Rewrite a for loop for readability

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>
Signed-off-by: Katrin Fischer <Katrin.Fischer.83@web.de>
All tests pass, perlcritic is unchanged.

Test plan
- Verify ExtendedPatronAttributes hides/shows new patron attribute
  search criteria
- Verify patron attribute show up correctly
  - pull down list for attributes linked to authorized values
  - input field for other attributes
- Verify search works correctly
Signed-off-by: Jared Camins-Esakov <9d46e7279315265164da8c55a0f85bf9cb5995a3@cpbibliography.com>
",true,false,true,true,false,false,false,false,1,1,1,1,9322
LMSCloud/Koha-LMSCloud,a08c09884ec8799f2835b6a63ed10833bd927fbf,Julian Maurice,2012-08-20 06:57:42 UTC,"Bug 7678: follow-up to pass QA

Check input parameters to avoid SQL injection
Rewrite a for loop for readability

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>
Signed-off-by: Katrin Fischer <Katrin.Fischer.83@web.de>
All tests pass, perlcritic is unchanged.

Test plan
- Verify ExtendedPatronAttributes hides/shows new patron attribute
  search criteria
- Verify patron attribute show up correctly
  - pull down list for attributes linked to authorized values
  - input field for other attributes
- Verify search works correctly
Signed-off-by: Jared Camins-Esakov <9d46e7279315265164da8c55a0f85bf9cb5995a3@cpbibliography.com>
",true,false,true,true,false,false,false,false,1,1,1,1,9322
bywatersolutions/ByWater-KOHA,a08c09884ec8799f2835b6a63ed10833bd927fbf,Julian Maurice,2012-08-20 06:57:42 UTC,"Bug 7678: follow-up to pass QA

Check input parameters to avoid SQL injection
Rewrite a for loop for readability

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>
Signed-off-by: Katrin Fischer <Katrin.Fischer.83@web.de>
All tests pass, perlcritic is unchanged.

Test plan
- Verify ExtendedPatronAttributes hides/shows new patron attribute
  search criteria
- Verify patron attribute show up correctly
  - pull down list for attributes linked to authorized values
  - input field for other attributes
- Verify search works correctly
Signed-off-by: Jared Camins-Esakov <9d46e7279315265164da8c55a0f85bf9cb5995a3@cpbibliography.com>
",true,false,true,true,false,false,false,false,1,1,1,1,9322
colinsc/koha,a08c09884ec8799f2835b6a63ed10833bd927fbf,Julian Maurice,2012-08-20 06:57:42 UTC,"Bug 7678: follow-up to pass QA

Check input parameters to avoid SQL injection
Rewrite a for loop for readability

Signed-off-by: Kyle M Hall <kyle@bywatersolutions.com>
Signed-off-by: Katrin Fischer <Katrin.Fischer.83@web.de>
All tests pass, perlcritic is unchanged.

Test plan
- Verify ExtendedPatronAttributes hides/shows new patron attribute
  search criteria
- Verify patron attribute show up correctly
  - pull down list for attributes linked to authorized values
  - input field for other attributes
- Verify search works correctly
Signed-off-by: Jared Camins-Esakov <9d46e7279315265164da8c55a0f85bf9cb5995a3@cpbibliography.com>
",true,false,true,true,false,false,false,false,1,1,1,1,9322
korpling/ANNIS,27bdd6950d0f807c6315d6b0c86d1e039d699c20,Thomas Krause,2012-08-06 10:54:31 UTC,another possible SQL injection,false,false,false,false,false,false,false,false,1,1,1,1,17
korpling/ANNIS,ab67751c805065908c1bad8b9b4c4e993a4c6034,Thomas Krause,2012-08-10 10:18:48 UTC,"- another sql injection possibilty: now using the segmentation name
- save history file in ANNIS shell",false,false,false,false,false,false,false,false,3,3,3,3,71
korpling/ANNIS,6726f7eb1ffbc0c2bc27a9d1eef03271d5db3415,Thomas Krause,2012-08-03 15:35:41 UTC,- hot-fixing SQL injection possibility when giving crafted corpus names,true,false,false,false,false,false,false,false,5,5,5,5,301
lionixevolve/LionixCRM,98fac2f403605c1f02071be3b7fc1a42fdb2d3ed,Dillon-Brown,2017-09-27 22:08:47 UTC,"Fixed #3579 - New Install SuiteCRM Version : 7.8.3 - WAF Blocks Login ""Blind SQL Injection Attack""
",true,true,false,false,false,false,false,false,15,15,13,13,35
ktaranov/sqlserver-kit,e266c48c7fec569dad5f8d941d032b231be86aaf,Konstantin Taranov,2017-09-04 20:24:16 UTC,"Add Queries vulnerable to SQL injection
",false,true,false,false,false,false,false,false,1,1,0,0,1542
facebook/infer,6ea6c74a5cc6581f4da5eb0d9d50fc0f2dfbbcf3,Sam Blackshear,2017-10-26 14:23:25 UTC,"[quandary] add new issue types for sql injection and shell injection

Reviewed By: mbouaziz

Differential Revision: D6153804

fbshipit-source-id: a5a97db
",false,true,false,false,false,false,false,false,4,3,0,0,1002
genome/civic-server,e5669cf3e60f45f7909110384b7b402ce0c32f70,Susanna Kiwala,2017-10-12 14:51:04 UTC,"Use array condition instead of string condition to prevent SQL injection
",false,false,true,true,false,false,false,false,1,1,1,1,58
zaproxy/zap-extensions,a7eb7d6279035039637c52a3562a6c95e22a3d29,colm.p.oflaherty@gmail.com,2012-09-10 15:46:35 UTC,Addition of PostgreSQL SQL Injection scanner,false,false,false,false,false,false,false,false,3,3,2,2,6876
zaproxy/zap-extensions,535436ac86718ba7eb67635f0d907b03a2f67a90,colm.p.oflaherty@gmail.com,2012-09-05 21:09:45 UTC,"Updated the generic SQL injection scanner to handle query timeouts, modified the MySQL scanner for improved blind injection detection, addition of Hypersonic and Oracle SQL injection scanners.  This will be the last round of changes to these scanners for Zap 1.4. All subsequent code changes will be for the 2.* API.  ",false,true,false,false,false,false,false,false,5,5,4,4,9899
tgstation/tgstation,fd268e7b18746eb181ad96a63bdddfac39014489,only.lurking@gmail.com,2012-01-29 20:56:05 UTC,"More SQL injection patches. Added a standardized method of SQL sanitization [sanitizeSQL()].
Corrected a href list vulnerability that let players spawn Arcane Tomes from non-e-magged library computers.
Tweaked and disabled forum_activation.dm. Way too many SQL vulnerabilities to justify keeping it around.


git-svn-id: af9c09e5e5bfa333f52f6fefeba857070ad34abf@3012 316c924e-a436-60f5-8080-3fe189b3f50e
",true,false,false,false,false,false,false,false,4,4,0,0,2928
tgstation/tgstation,c318a553ffa876bc42369bff72b6242d6486c218,only.lurking@gmail.com,2012-01-27 20:07:59 UTC,"Small SQL injection patch.

git-svn-id: af9c09e5e5bfa333f52f6fefeba857070ad34abf@2992 316c924e-a436-60f5-8080-3fe189b3f50e
",false,false,false,false,false,false,false,false,1,1,0,0,202749
tgstation/-tg-station,fd268e7b18746eb181ad96a63bdddfac39014489,only.lurking@gmail.com,2012-01-29 20:56:05 UTC,"More SQL injection patches. Added a standardized method of SQL sanitization [sanitizeSQL()].
Corrected a href list vulnerability that let players spawn Arcane Tomes from non-e-magged library computers.
Tweaked and disabled forum_activation.dm. Way too many SQL vulnerabilities to justify keeping it around.


git-svn-id: af9c09e5e5bfa333f52f6fefeba857070ad34abf@3012 316c924e-a436-60f5-8080-3fe189b3f50e
",true,false,false,false,false,false,false,false,4,4,0,0,2928
tgstation/-tg-station,c318a553ffa876bc42369bff72b6242d6486c218,only.lurking@gmail.com,2012-01-27 20:07:59 UTC,"Small SQL injection patch.

git-svn-id: af9c09e5e5bfa333f52f6fefeba857070ad34abf@2992 316c924e-a436-60f5-8080-3fe189b3f50e
",false,false,false,false,false,false,false,false,1,1,0,0,202749
lamsfoundation/lams,458edcd7121d8676f627e7f74a06952a54423bf6,erniegx,2012-01-06 13:23:00 UTC,"LDEV-2770: Get rid of _GETs and CFG->prefix. replacing them with appropriate required_params to avoid SQL injection
",false,false,true,true,false,false,false,false,3,3,3,3,819
lamsfoundation/lams,c6f6605de18894e645f9a9cabb994996fdf90924,erniegx,2012-01-06 13:23:00 UTC,"LDEV-2770: Get rid of _GETs and CFG->prefix. replacing them with appropriate required_params to avoid SQL injection
",false,false,true,true,false,false,false,false,3,3,3,3,819
the-control-group/voyager,922fe413817bf595ed4582ab865dd45eacce5969,alexey,2017-07-04 10:03:37 UTC,"* StyleCI changes
* lat/lng float conversion to avoid SQL injections. ::quote() won't work
",false,true,false,false,false,false,false,false,4,4,4,4,27
corestoreio/csfw,cf25179776d4a847ef8fbacfea47a34a37de80ec,Cyrill Schumacher,2019-09-11 05:34:36 UTC,"sql/dml: Remove custom Artisan.Name and use sql.NamedArg (interpolation)

because go-sql-driver/mysql does not yet support sql.NamedArg, this code
uses interpolation to write the sql.NamedArg values into a SQL string
where the placeholder matches. The usual security risks exists, like
SQL injections, etc., are still there.
",false,false,false,false,false,false,false,false,11,2,11,2,4212
cytomine/Cytomine-core,29c8bc441669cdbcf58c079ece4ba65d1903fb1f,TheGeekTortoise,2019-09-12 13:24:05 UTC,"Improve SQL request by using JDBC parameters injection ==> Avoid SQL injection attacks
",false,false,true,true,false,false,false,false,5,3,5,3,3054
miku/siskin,7fa398d2fea72bf2e8b4808f75df4b3d35ae959a,Martin Czygan,2019-08-02 15:11:27 UTC,"solrcheckup: use DB-API facilities

> Usually your SQL operations will need to use values from Python
variables. You shouldn’t assemble your query using Python’s string
operations because doing so is insecure; it makes your program
vulnerable to an SQL injection attack (see https://xkcd.com/327/ for
humorous example of what can go wrong).

> Instead, use the DB-API’s parameter substitution. Put ? as a
placeholder wherever you want to use a value, and then provide a tuple
of values as the second argument to the cursor’s execute() method.

Via: https://docs.python.org/3/library/sqlite3.html
",true,false,true,false,false,false,false,false,1,1,1,1,14
sgmap/tps,9086f99e2e69a246292589c008554afb1d203003,Frederic Merizen,2018-10-05 14:15:19 UTC,"[#2750] SQL injection false positives
",false,false,false,false,false,false,false,false,1,1,0,0,8
romannurik/muzei,aa3d6ea2e119d429147bc22db25fe0d12d155f6c,Ian Lake,2018-10-03 04:05:08 UTC,"Merge pull request #578 from ianhanniballake/sql_injection

Prevent SQL Injection into MuzeiArtProvider.query",false,true,false,false,false,false,false,false,1,1,1,1,2
romannurik/muzei,ef033e57def75dc42f09e96364565c88ea0600f7,Ian Lake,2018-10-03 04:02:59 UTC,"Prevent SQL Injection into MuzeiArtProvider.query

Use setStrict(true) to prevent possible SQL injection issues when MuzeiArtProviders don't use the permission or during automated Google Play Store testing (which don't take the permission into account).
",true,false,false,false,false,false,false,false,1,1,1,1,2770
panterch/future_kids,04d6d2eaeeece2cd8556ede45d493fa24e338ee1,ArtOfCode,2018-10-25 22:59:04 UTC,SQL injection fix (#202),true,false,false,false,false,false,false,false,1,1,1,1,
panterch/future_kids,4d7fd4fd437abfeb596e6df82acf6ab9720c987b,ArtOfCode,2018-10-25 23:01:13 UTC,SQL injection fix (#202),true,false,false,false,false,false,false,false,1,1,1,1,2
renderpci/dedalo-4,e0a00be58b4c96657aebaa2a5708103d36c06422,renderpci,2018-07-26 19:22:47 UTC,"Fix SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,0
unioslo/cerebrum,bf4fc6fd9e70a765c2fa4fc1e1e38cbdfdb77e74,Fredrik Larsen,2020-02-14 15:21:21 UTC,"Refactor sql translation

Refactor the Cerebrum SQL statement translation and validation. This is
neccessary in order to replace the `Cerebrum.database.sql_lexer` and
`Cerebrum.extlib.Plex`.

The Cerebrum SQL translation serves four distinct purposes:

1. Adapt placeholders to paramstyle of the db driver.
2. Replace macros with dbdriver specific sql syntax.
3. Limit `Cursor.execute` to one statement per call, which limits the
   ability to exploit potential sql injection vulns.
4. Validate that parameters are given for all placeholders.

This functionality is now split up into loosely coupled components:

`Cerebrum.database.paramstyles`
        Placeholder paramstyle conversion and binding validation.  This
        component was split out from `Cerebrum.database` at an earlier
        point, but now has a better submodule name, tests, and
        docstrings documentation.

`Cerebrum.database.macros`
        Functionality for macro replacement, e.g. `[:table
        schema=cerebrum name=foo]`.

        This was previously implemented in `Database.sql_repr`, with a
        non-predetermined number of callback methods expected to be
        implemented by subclasses.

        All callback methods now have a default implementation.
        Implementation of the db driver specific macros are still done
        in the relevant db driver specific modules, but are organized
        into separate MacroTable objects (i.e.  `pg_macros`,
        `ora_macros`).

`Cerebrum.database.lexer_plex`
        The Plex/`SQLScanner` implementation is renamed to lexer_plex,
        in order to allow other implementations to co-exist.

        The SQLScanner specific parts of `Cursor._translate` are moved
        into this module, as to not require Plex unless SQLScanner is
        actually in use. This is *a little messy*, but hopefully a
        temporary solution (until we have a valid alternative).

`Cerebrum.database.error`
        New module for the Cerebrum-implementations of the DB-API 2.0
        exceptions and the db driver execption translation wrapper.
        These parts are moved into a separate module in order to avoid
        circular imports.

`Cerebrum.database.translate`
        The glue that binds all the lexing and translation components together.
        Re-implements an abstract `Cursor._translate`.
",true,true,true,true,false,false,true,false,15,11,15,11,19
sysown/proxysql,b0af4d272db97334565a265c85eed898c426d4e7,René Cannaò,2020-02-12 01:35:41 UTC,"Fix 2 bugs related to firewall

* Query_Processor::find_firewall_whitelist_rule() wasn't correctly finding rules
* SQL injection algorithm should only be triggered if the query isn't blocked already
",true,false,false,false,false,false,false,false,2,2,2,2,2388
moravianlibrary/CPK,d6aeae797cf1a16cb54630b02c29b10a3921d4e1,Dan Scott,2013-08-26 05:19:51 UTC,"Evergreen ILS holdings improvement

The Evergreen driver was passing in the record ID but returning the copy
of the same ID, meaning that not only were the wrong copies being
returned for Evergreen holdings, but only one copy maximum was being
returned.

In addition, rather than interpolating strings into SQL for a possible
SQL injection attack, use parameter markers for the prepared statements
and bind our variables to those.

Signed-off-by: Dan Scott <2591e5f46f28d303f9dc027d475a5c60d8dea17a@coffeecode.net>
",false,false,true,true,false,false,false,false,1,1,1,1,5107
vufind-org/vufind,d6aeae797cf1a16cb54630b02c29b10a3921d4e1,Dan Scott,2013-08-26 05:19:51 UTC,"Evergreen ILS holdings improvement

The Evergreen driver was passing in the record ID but returning the copy
of the same ID, meaning that not only were the wrong copies being
returned for Evergreen holdings, but only one copy maximum was being
returned.

In addition, rather than interpolating strings into SQL for a possible
SQL injection attack, use parameter markers for the prepared statements
and bind our variables to those.

Signed-off-by: Dan Scott <2591e5f46f28d303f9dc027d475a5c60d8dea17a@coffeecode.net>
",false,false,true,true,false,false,false,false,1,1,1,1,5107
matecat/MateCat,74ca8a6013d4a127c6305286c99a332f891d88f2,domenico,2013-08-05 16:25:40 UTC,"Removed html mark-up menu header ( download original/translated ) when a project is 'archived'.

Fix bug; Added translation language in xliff rebuild. Languages are now tied to job.
Fix bug: SQL injection bug for setTranslation segment status when 'UI.setTranslation( UI.currentSegment, 'BimBumBet' );' called from UI console.
Fix bug: disabled changes on segment_translations when a project is 'archived'.
",true,false,false,false,false,false,false,false,3,3,3,3,36
zaproxy/zaproxy,08cbe17b075a29fd7ae4403e822a32f5f9945657,yhawke,2013-08-29 09:39:28 UTC,"Resolved Encoding model used by Variants inside ZAPProxy. Currently new Variants don't manage correct encoding when setParameter() is set, so we added a getEncodedValue() method for all VariantRPCQuery defined (JSON, XML and GWT) correctly encoding all special chars.
We replaced also the encoding model used by VariantURLQuery, because it relies on the httpcommons URI.setQuery() method which manage in the wrong way some character as ""+"" which is encodend as itself and not to the numeric ASCII value (so it is considered as space and not ""+"").
The error arose on testing SQL injection payloads on SQL Server based upon concatenation.
",true,true,false,false,false,false,false,false,9,9,9,9,39028
alphagov/notifications-api,bdd77f9150fde59d71fdc837ff4cd2cbf0d62896,Chris Hill-Scott,2018-03-14 10:34:45 UTC,"Escape special characters in search by recipient

SQLAlchemy handles escaping anything that could allow a SQL injection
attack. But it doesn’t escape the characters used for wildcard
searching. This is the reason we’re able to do `.like('%example%')`
at all.

But we shouldn’t be letting our users search with wildcard characters,
so we need to escape them. Which is what this commit does.
",false,false,true,false,false,false,false,false,2,1,2,1,2925
chanzuckerberg/idseq-web,db7d0249ab8a5a93efd0e422cdc989cc6fd173c1,yunfangjuan,2018-03-12 21:36:22 UTC,"casting background id to integer to avoid sql injection hack from parameters (#884)

",false,false,false,false,false,false,false,false,1,1,1,1,12
centreon/centreon,641bf1468a369dc3265fb0cecf983b9d88f6f1cb,Guillaume28,2018-03-05 13:13:27 UTC,"First 100 commits and refacto of DB-Func.php (#6104)

* doc(release note) : Add empty release note for the 2.8.19

* Security Fix : SQL injections on Ldap Parameters page

* update Centreon web 2.8.6 release notes

* improve documentations

* fix(style):Using if instead of ternary

* fix(doc): Remove header

* fix(error): Missing }

* fix(query): Wrong utilisation of query

* fix(space):Missing space
",true,false,true,false,false,false,false,false,19,19,3,3,139700
Admidio/admidio,ea5d6f114b151ed11ec0ad7cb47bd729e77a874a,Markus Faßbender,2020-04-12 19:29:04 UTC,"Unauthenticated Blind SQL injection #908
",false,false,false,false,false,false,false,false,1,1,1,1,8531
FRCDiscord/Dozer,3f39d2a97e3de79d944000c885dae18b897fc7d7,Cemal Efe Gayir,2020-04-07 09:27:11 UTC,"SQL injection fix
",true,false,false,false,false,false,false,false,1,1,1,1,6737
DigitalNZ/supplejack_manager,6aa4837b01b3910ab5ad088e142864b1d898f552,Dave Harris,2020-04-06 09:51:31 UTC,"Remove un-used potential SQL injection

* Raises ""expected a clauses Hash, got <ActionController::Parameters...""  ArgumentError when called
",false,true,false,false,false,false,false,false,3,3,3,3,0
CartoDB/CartoDB-SQL-API,0fb6a64b7f3f72e03beb0cabd636ece6e2b3aa4d,csobier,2015-11-11 00:43:15 UTC,"updated sql injection section
",false,true,false,false,false,false,false,false,1,1,0,0,1672
CartoDB/CartoDB-SQL-API,254d7f6a8bc040e5f67a823f4a7fe171b7f9bc1c,csobier,2015-11-11 14:38:05 UTC,"edited sql injection with Carla's edits
",false,false,false,false,false,false,false,false,1,1,0,0,834
CartoDB/CartoDB-SQL-API,8d8f4dc6ad1a52804ef4eca40c8290c9fde7f995,Carlos Matallín,2015-11-11 16:58:04 UTC,"Merge pull request #260 from CartoDB/sql_injection

updated sql injection section",false,true,false,false,false,false,false,false,1,1,0,0,1579
Cacti/cacti,f767c02a16324aa3d09f54802d3d5aea0aeab14e,cigamit,2015-11-28 20:12:20 UTC,"-bug:0002646: SQL injection in graph.php
",false,false,false,false,false,false,false,false,1,1,1,1,1649
airslie/renalware-core,b72e18f0f4ef34699207a7609657d6328031217c,Nicholas Henry,2015-11-05 20:12:11 UTC,"Returns only the values that exist, not an empty set

…if one of the values does not exist in the DB, prevents SQL injection
attacks on the `order` scope.",false,false,false,false,false,false,false,false,2,2,2,2,12
publiclab/plots2,d9c951099a77c06238bb5c6360608b5ea6c414ca,Elizabeth Tackett,2019-06-18 13:53:55 UTC,"Refactor node_shared (#5813)

* add excluded_nodes method to DRY up repeated query code

* refactor repeat code for unnecessary length

* add data_string method; refactor to reduce redundancy of creating output strings

* add initial_output_str to DRY up repetitive code

* extract query logic out of people_grid

* extracted repetitive queries into nodes_by_tagname

* finish extracting node query logic to nodes_by_tagname

* refactor repeated logic into method excluded_tagnames

* refactor repeated logic into featured_tagname method

* extract repeated logic into map_string_data method

* refactor if statement for clarity

* fix syntactical issues

* remove needless assignment

* address sql injection vulnerability

* remove parallel assignment

* fix inconsistent indentation
",true,true,true,true,false,false,false,false,1,1,1,1,544025
terascope/teraslice,f459a6bbd79a017cff697b5c7980fc3eb74f5de0,Peter DeMartini,2019-06-21 19:56:47 UTC,"Merge pull request #1146 from terascope/avoid-sql-injection

Prevent Query Injection",false,true,false,false,false,false,false,false,13,11,5,3,13
librenms/librenms,2793585cce7b8eb0a6510ab17e96ee88e1fbad53,Tony Murray,2020-10-10 23:17:25 UTC,"Fix SQL injection vulnerability in MAC Accounting graph (#12204)

* Fix SQL injection vulnerability in MAC Accounting graph
I didn't have any real test data, so tried to keep the changes minimal.

* fix style",true,false,false,false,false,false,false,false,1,1,1,1,4960
groue/GRDB.swift,b8dd2ce2f4f89eca0794d00fd96245f01c844150,Gwendal Roué,2020-10-31 13:16:04 UTC,"Generate columns from query interface expressions

This allows to avoid SQL injection
",false,false,false,false,false,false,false,false,3,2,2,1,19
kjolley/BIGSdb,c0f24049c18bdb9fedaa01e5ecc4612f7c2c090f,Keith Jolley,2015-02-06 07:34:36 UTC,"Table Query: Sanitize 'order by' param to prevent SQL injection.
SQL injection attempts did not cause any damage but did result in an
unnecessary database error in the logs.  ",true,false,true,true,false,false,false,false,1,1,1,1,1027
palasthotel/grid-wordpress,25d26384d142fc7c80c813fd54c6a86f4a78969e,Enno Welbers,2015-02-05 19:21:12 UTC,"added intval() calls around nearly all  accesses to close sql injection attacks
",false,true,false,false,false,false,false,false,1,1,1,1,30593
openSUSE/open-build-service,f03a40276610c78eece64022f46737decbe08c20,Victor Pereira,2015-02-06 16:12:45 UTC,"[api] SQL injection vector and reduced complexity of method
",false,false,true,true,false,false,false,false,2,2,2,2,690163
orientechnologies/orientdb,e5935c0341966c1c2a5b661d0a05ff42164fd51c,Luigi Dell'Aquila,2015-02-27 16:25:08 UTC,"fixed possible sql injection on prepared statements with parameter on query target
",true,false,false,false,false,false,false,false,2,1,2,1,50
nasa/Common-Metadata-Repository,8c2fc84595f050ab64b15a235ba28cf030fcb1ec,James Norton,2014-04-14 18:07:31 UTC,"CRM-277: Added unit tests for provider-id validation and added validation to get-table-name to prevent sql injection.
",false,true,false,false,false,false,false,false,5,3,0,0,33
bosik/diacomp,05be407e3e7fe6ea9133bd217616919ec96b8531,bosikgn,2014-04-02 12:56:13 UTC,SQL injection danger fixed.,true,false,false,false,false,false,true,false,1,1,1,1,2
Charcoal-SE/metasmoke,06e518bfd5a51fd2872984808572e6c2418d0cd0,thesecretmaster,2020-07-25 21:26:55 UTC,"More SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,40
Charcoal-SE/metasmoke,8eb6bad9cd8e2cf89b8b96bb68beeeae7bf25bf3,thesecretmaster,2020-07-25 20:46:05 UTC,"Fix potential sql injection vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,6132
akrherz/iem,9f51270be2c63eb02ffdd5346940a843c9147574,akrherz,2010-12-08 20:00:14 UTC,"refs #25, fixes for updated jpgraph.  remove sql injection threats too
",true,true,false,false,false,false,false,false,19,19,18,18,54
akrherz/iem,1746b237102363ab405b2332707161df3418af22,akrherz,2010-12-08 18:40:42 UTC,"remove cruft, remove sql injection threat, update jpgraph refs #25
",false,true,false,false,false,false,true,false,24,23,24,23,36
zaproxy/zaproxy,4b865fa0a21d913828395c49c25a744fe23fe7b7,colmoflaherty,2014-09-08 19:08:33 UTC,"Added entry for SQL Injection scanner for SQLite
",false,true,false,false,false,false,false,false,1,1,0,0,16153
zaproxy/zap-extensions,9c4f1f7b611ceab33220d62891b633a82723076f,70pointer@gmail.com,2014-09-08 19:10:48 UTC,Added entries for SQLite SQL Injection scanner,false,true,false,false,false,false,false,false,1,1,0,0,4196
zaproxy/zap-extensions,1c581d38147d41b53061f23c296b06393a2d7261,70pointer@gmail.com,2014-09-08 19:45:17 UTC,Added entry for SQLite SQL Injection scanner,false,true,false,false,false,false,false,false,1,1,0,0,8
zaproxy/zap-extensions,addf765f43d92011d5cb2ff43805376ee3e82adb,70pointer@gmail.com,2014-09-08 19:36:27 UTC,SQLite SQL Injection scanner,false,false,false,false,false,false,false,false,1,1,1,1,25
sampsyo/beets,4870d7e0fa881a1c3b302ca70255026f1db90df9,Adrian Sampson,2014-09-14 00:16:12 UTC,"Roll back fast flexible field sorts (#953)

Sad to see them go, but happy be rid of the SQL injection.
",false,false,false,false,false,true,true,true,5,3,5,3,1176
HippieStation/HippieStation,c00a76beab17afad67261024b5901d85551abd4a,MrStonedOne,2014-08-08 07:15:33 UTC,"SQL injection fix.
Google sanitizing sql input. almost every single article explains why you should never attempt to roll your own function to do this.
",true,false,false,false,false,false,false,false,1,1,0,0,110422
HippieStation/HippieStation,45097c959790c74a79b615ccf3253f8eb75631c5,Aranclanos,2014-08-08 07:39:00 UTC,"Merge pull request #4375 from MrStonedOne/fastestmergeever

SQL injection fix.",true,true,false,false,false,false,false,false,1,1,0,0,2737
TestLinkOpenSourceTRMS/testlink-code,7a099737b4c739bf083df016c0a99f66dd8ac0b3,fman,2014-08-01 18:18:36 UTC,"sql injection
",false,false,false,false,false,false,false,false,2,1,2,1,21
TestLinkOpenSourceTRMS/testlink-code,60b1fab3f35101745c908d547670dfd4e1297f97,fman,2014-08-02 08:58:24 UTC,"sql injection
",false,false,false,false,false,false,false,false,1,1,1,1,1
TestLinkOpenSourceTRMS/testlink-code,1ace1232febd9cde3ce12c659889fe349bdcd43f,fman,2014-08-12 15:19:15 UTC,"TICKET 6488: SQL Injection (CWE-89) (eventinfo.php)
",false,false,false,false,false,false,false,false,1,1,1,1,24
TestLinkOpenSourceTRMS/testlink-code,316cf73fb0b70b3eeceff056868865b963917034,fman,2014-08-13 20:37:10 UTC,"TICKET 6499: Blind SQL Injection on /lib/requirements/reqExport.php (CWE-89)
",false,false,false,false,false,false,false,false,1,1,1,1,177
TestLinkOpenSourceTRMS/testlink-code,6af3b155d9e3991fbdb6f522adbfe1d92a01caa6,fman,2014-08-01 17:57:16 UTC,"sql injection
",false,false,false,false,false,false,false,false,2,1,2,1,5609
TestLinkOpenSourceTRMS/testlink-code,1d432d5da76f5fe53456f87129d64c22abbd853d,fman,2014-08-16 10:28:04 UTC,"sql injection
",false,false,false,false,false,false,false,false,1,1,1,1,0
TestLinkOpenSourceTRMS/testlink-code,13c82be155e4b4feb3e841d71dc619825b26e362,fman,2014-08-12 14:54:54 UTC,"TICKET 6488: SQL Injection (CWE-89) (eventinfo.php)
",false,false,false,false,false,false,false,false,2,2,2,2,27
lukaszbudnik/migrator,eea0019c58b4f243348a9b8bbf94f8d08c16f685,Łukasz Budnik,2021-03-02 21:45:18 UTC,"Merge pull request #133 from lukaszbudnik/create-tenant-sql-injection-validation

Create tenant sql injection validation",false,true,false,false,false,false,false,false,10,5,10,5,184
mybb/mybb,96dd1b3d955eb8043c9c22b36dcb5ff8d65e8e24,Tomasz Mlynski,2021-03-10 16:24:25 UTC,"Fix Forum Management SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,1
mybb/mybb,aa415f08bce01f95a8319b707bb18eb67833f4c1,Tomasz Mlynski,2021-03-10 16:23:08 UTC,"Fix Poll vote count SQL injection
",true,false,false,false,false,false,false,false,2,2,2,2,0
mybb/mybb,561e1c76d85ed92931440730c0e78b63359b27a4,Tomasz Mlynski,2021-03-10 16:22:24 UTC,"Fix Theme properties SQL injection
",true,false,false,false,false,false,false,false,3,3,3,3,0
mybb/mybb,902e5597c4719cbc61443128d980ff4aece2d7a1,Tomasz Mlynski,2021-03-10 16:25:37 UTC,"Fix Usergroups SQL injection
",true,false,false,false,false,false,false,false,9,9,9,9,1
wso2/carbon-apimgt,b8437107c49481c5f7483f83b4171bab69dffe53,Chanaka Jayasena,2017-03-01 05:43:26 UTC,"Merge pull request #3763 from chanaka3d/6.1.x

Fixing XSS threats and SQL injection",true,true,false,false,false,false,false,false,3,3,0,0,2
wso2/carbon-apimgt,8c7d8e6b6d355db6ef227f898c847d434b868b16,chanaka jayasena,2017-03-01 05:40:48 UTC,"Fixing XSS threats and SQL injection
",true,false,false,false,false,false,false,false,3,3,0,0,133757
qgis/QGIS,9bb7681b8678b93212acfdfd5a70ca360c4ca4ae,rldhont,2017-03-06 07:55:08 UTC,"Merge pull request #4124 from pblottiere/security

add unit tests for sql injection",false,true,false,false,false,false,false,false,4,0,1,0,8178
sixoverground/tang,8779cf951230b80f78ad3fa8a11a0c2761a0e517,Craig Phares,2017-03-20 19:50:39 UTC,"alleviating sql injection
",false,false,false,false,false,false,false,false,7,7,7,7,86
jegelstaff/formulize,2fb414dc24b4144c3bbd1e56b7718b986105f3b4,Julian Egelstaff,2020-09-30 17:15:44 UTC,"Refactoring findAllValuesForEntries

more efficient to use IN but we need to ensure all values are simply integers first (no SQL injection)
",false,false,true,true,false,false,false,false,1,1,1,1,1472
sequelize/sequelize,3654655138d6ab6c644649dbb3a578740a5830cd,Daniel Durante,2013-07-16 07:19:36 UTC,"Cleaned up scopes/smartwhere, added another spec to make sure SQL is escaped, and fixed potential SQL injection problem with sqlite
",true,false,true,true,false,false,false,false,4,4,4,4,31
backdrop-ops/backdrop-pantheon,bf13d790dee7e52f0d4ca6ed4372c7d5ffd7fd74,Jen Lampton,2014-10-24 02:07:07 UTC,"SA-CORE-2014-005 by Stefan Horst, greggles, larowlan, David_Rothstein, klausi: Fixed SQL injection vulnerability.
",true,false,false,false,false,false,false,false,1,1,0,0,50595
backdrop-ops/backdrop-pantheon,91f642268323181043149c220e13886063191fc5,Nathan Haug,2014-10-24 23:17:35 UTC,"Merge pull request #506 from jenlampton/359-security

Issue #369: SA-CORE-2014-005 - Drupal core - SQL injection.",false,true,false,false,false,false,false,false,2,1,0,0,1
bkimminich/juice-shop,5cef0a5aecf8dde399eaaed2323bc434d7beecb8,Björn Kimminich,2014-10-09 09:55:03 UTC,"added UNION attack SQL Injection challenge
",false,true,false,false,false,false,false,false,1,1,1,1,623
bkimminich/juice-shop,41d01dad7aefdd7451d7ab646530fa50d437feb5,Bjoern Kimminich,2014-10-26 13:36:22 UTC,"fixed SQL Injection challenge bug
",true,false,false,false,false,false,false,false,1,1,1,1,820
bkimminich/juice-shop,aee3976f344f5ee56c6a53ab4f20b7a0da08b276,Björn Kimminich,2014-10-15 11:47:45 UTC,"added tests for SQL injection
",false,true,false,false,false,false,false,false,2,1,2,1,162
georchestra/georchestra,f67a9a177ab8b98e88ab0cbdb8586f5a4eee30a9,Pierre Mauduit,2014-10-13 13:18:14 UTC,"analytics - refactor/rewrite of the data access logic (#566)

- Fixing 2 potential SQL injections (via provided properties or
  filters).
- Rewriting queries to improve querying performances (credits to
  @fvanderbiest for the optimization).
",true,true,true,true,false,false,false,true,5,5,5,5,9886
sodash/open-code,41eeab2d0e56f5ce19125db659cc97c52705e009,DW-Stross,2019-07-02 10:26:00 UTC,"YA created time - use long, Time, and screen against SQL injection attacks
",false,true,false,false,false,false,false,true,1,1,1,1,6721
southampton/cortex,97d562b0f41fcc629b4159771702a9ea31e2d49c,cristivai,2019-07-19 09:49:39 UTC,"Integrated Clayton's query parser to prevent SQL injection for in the Systems page
",false,false,false,false,false,false,false,false,4,4,2,2,1508
otwcode/otwarchive,fc0f40f99a691dee609ea3ecb879716b869fdbf6,zz9pzza,2019-07-16 01:29:49 UTC,"AO3-5678 Fix Brakeman warnings for SQL injection (#3575)

* Work on SQL issues

* Most refactoring

* Fix test and hound

* Fix other mistakes

* Move code from view

* Hopefully last bits

* Fix typo

* Follow review

* Follow review

* Listen to hound and brakeman

* Fix test

* fix test

* Follow review

* Rename reorder

* Missing bit

* Prefer case

* fix ,
",true,false,true,true,false,false,false,false,19,19,17,17,66258
lutris/lutris,d431ff377800a46b0833aeec5243d80ab2c020cb,Jordan Christiansen,2020-05-04 13:45:24 UTC,"Prevent potential sql injection in get_game
",true,false,false,false,false,false,false,false,2,1,2,1,29956
hashicorp/vault,1a322e2026ee5348559324692897618aac42080e,Lauren Voswinkel,2020-05-21 23:07:18 UTC,"Use parameters when executing prepared statements rather than fmt.Sprintf (#9013)

* Don't use string formatting to prepare queries.

We should, when possible, use the built-in params and ? format when
preparing and executing a query. This is done to prevent SQL Injection
attacks.

* Revert some changes due to failing tests, update mssql go driver

* Add docker container startup for some MSSQL tests

* Remove acceptance test flagging, add more SQL injection protection

* Refactor MSSQL prepareTestContainer to a test helper

Also, remove all ? references and convert them to @p*",true,false,false,false,false,false,false,false,7,4,5,2,417
ibissource/iaf,79843c7af43c855bd695528afc843c51cb6d1be9,carlo,2020-05-11 15:21:21 UTC,"the sql injection not secure was replaced by 'getMetaData' (#619)

",false,false,false,false,false,false,false,false,7,7,7,7,4803
alexgrist/NutScript,9ae257a16f715741d14451548255b57268a893bf,Brian,2014-07-11 04:31:48 UTC,"Minor fixes

Possible SQL injection, ownable doors, and local player not being
recognized.
",true,false,false,false,false,false,false,false,5,5,5,5,0
facebook/infer,82a3b2649ec3a7941923d10489351064c97028b6,Sam Blackshear,2017-12-16 15:31:52 UTC,"[quandary] only warn on shell/sql injection from stringy gflag sources

Reviewed By: jeremydubreil

Differential Revision: D6573250

fbshipit-source-id: 5680773
",false,false,false,false,false,false,false,false,3,1,1,0,1212
decidim/decidim,09d026e1595d28befbe17005d9cd659360b6b928,David Rodríguez,2017-12-21 08:34:09 UTC,"User group verification enhancements and a fix (#2406)

* Curate query comments

* Curate user group evaluation spec

* Less objects created.
* Exact check some variables.
* Remove some unused variables.

* Remove unused attr_reader

* Move test file to the correct gem

* Curate user group verification spec

* Don't need that many objects.
* Don't need match: :first since the link is unique.
* Test the whole user flow. Admins won't go directly to this page but
  navigate to it.

* Extract subject in verify user group spec

* Fix weird looking code

* Rename query to search

Since there's also the ""query"" method, I found it slightly confusing.

* Fix crash in user group verification

And potential SQL injections.
",true,false,true,true,false,false,true,false,5,5,5,5,1
miniflux/miniflux,1b86913c005c082ed27fd7f1f42fc6ae9bdcbb9b,Frédéric Guillot,2020-03-11 03:58:45 UTC,"Fix SQL injection in full-text search rank ordering

Introduced in commit 267b7065444b2904e1172817c661709e0b456b80
",true,false,false,false,false,false,false,false,1,1,1,1,12981
sectsect/google-spreadsheet-to-db,fa3cd3142d63446a8620ba83a595ad7282334c21,SECT,2020-03-19 15:30:59 UTC,"Fix SQL-Injection vulnerability
",true,false,false,false,false,false,false,false,2,2,2,2,273
hubzero/hubzero-cms,436a8441ed27c710e88e9b49949fbaa8a15ec315,lacunapremise,2020-11-19 14:48:39 UTC,"Fix SQL injection on sortby

Prevent SQL injection vulnerability by doing input validation on sortby against an array of possible values.",true,false,false,false,false,false,false,false,1,1,1,1,12566
hubzero/hubzero-cms,1ebde9fb9ef1c0a92bc6c5f907c1dc4a3d61e7ae,lacunapremise,2020-11-19 14:55:22 UTC,"Fix SQL injection on sortby

Prevent SQL injection vulnerability by doing input validation on sortby against an array of possible values.",true,false,false,false,false,false,false,false,1,1,1,1,6
hubzero/hubzero-cms,96b444c834411e42d6bdc9353190c64065d19016,David Benham,2012-11-07 18:43:27 UTC,"[SECURITY] fix to tag searching for sql injection protection
",false,false,false,false,false,false,false,false,1,1,1,1,129662
hubzero/hubzero-cms,6be73e65f9f0fcd903ee814279b744b59a96d96a,David Benham,2012-11-12 14:40:58 UTC,"[SECURITY] sql injection fix
",true,false,false,false,false,false,false,false,1,1,1,1,6957
panterch/future_kids,6de33ea191e0df7affa5723f9c162d3a19e1e755,Federico Gratti,2017-12-18 00:32:41 UTC,"Fix potencial SQL Injection problems
",true,false,false,false,false,false,false,false,3,3,3,3,
librenms/librenms,56561aa4dc0ed584bb025391c29c7626442e6306,Aldemir Akpinar,2017-12-20 14:17:52 UTC,"feature: Added support for Host dependencies (#7332)

* First draft of the modals and the config interfaces

* GUI part done

* Backend code and db schema addition

* Documentation added, fixed alerting bug

* Fix typos

* Do not try to push an older db_schame.yaml

* Small db fix

* More db fixes

* Travis CI fixes

* missed a line in the travis error

* Fixed dependency clearing bug, Manage Host dependencies button now shows current selections

* Removed unnecessary index

* Correct faulty query

* Fixed sql query as requested, and renamed sql file

* Added requested changes

* Removed debug code

* Renamed sql file

* More fixes as requested

* Trying to fix db_schema.yaml

* adding laf's diff

* Corrected a small bug

* Try to resolve scrutinizer issue

* Main page bootgrid ajax modifications

* Also corrected travis ci errors

* Added select2 for pull downs, removed a redundant debug output. Changed parent_id to text

* Add missing class in the device settings page

* Fix bug where a link wasn't added after save

* Better parent down detection

* Add missing comma

* Behold the multi-parent code

* Added lookup table

* Ready for testing

* Trying to fix documentation conflicts

* Fix copy paste errors, and possible sql injection

* indentation problems

* Modified db_schema.yaml as well

* Typos, typos

* This should correct alerts

* Try to fix travis ci error

* Fix the typo in index.php

* Changed to Tony's query

* function explanation text changed

* Updated db_schema.yaml

* Trying to make automated tests happy

* Changes as requested

* Added acknowledgment for select2

* Added laf's patch

* dbBulkInsert when adding parents
",true,true,true,false,false,false,false,false,20,20,13,13,9580
centreon/centreon,b46f7cf8123ab9f3b831a0ecab5540a1e7244ab3,Stéphane C.979,2019-03-26 14:59:05 UTC,"fix(secu): sql injections in the service by hostgroups and servicegroups pages (#7267)

* style: clean and remove dead code

* fix(DB): protect pages against SQL injection in services by hg or sg

* style and indentation",true,false,true,true,false,false,false,false,6,6,5,5,1503
cakephp/cakephp,a440663f1806607a853ed2f36638a11d5e4757fb,phpnut,2007-05-21 05:19:21 UTC,"Merging fixes into the trunk:

Revision: [5145]
 * Adding fix for #2614

Revision: [5143]
 * Adding fix for #2611, fixes App crashes when using requestAction with Security Component enabled

Revision: [5142]
 * Adding patch from #2610, fixes Scaffold plugin produces incorrect form ""action""

Revision: [5141]
 * Adding fix for #2607

Revision: [5140]
 * Adding fix for #2613, fixes afterFind callback not called on models in depth search > 1 (recursive).
 * Changed the regex pattern matching in Router::stripEscape()

Revision: [5139]
 * Adding fix for #2612, Fixes AuthComponent::identify SQL injection, and also removes ability to pass the -! in the posted data

Revision: [5138]
 * Adding comments and internationalizing messages in HttpSocket


git-svn-id: 5860920b332e8b1c20d5ac1ddb0cfb1512ef151a@5146 3807eeeb-6ff5-0310-8944-8be069107fe0
",true,true,true,false,false,false,false,false,2,2,1,1,3
cakephp/cakephp,df5c02aa8fe8220e432fe72a3bff1e09a2239f85,phpnut,2007-05-21 03:29:49 UTC,"Adding fix for #2612, Fixes AuthComponent::identify SQL injection, and also removes ability to pass the -! in the posted data

git-svn-id: 5860920b332e8b1c20d5ac1ddb0cfb1512ef151a@5139 3807eeeb-6ff5-0310-8944-8be069107fe0
",true,true,false,false,false,false,false,false,2,2,2,2,1222
propelorm/Propel2,4c309e3e5adaba077f54c0fab93c34995d7c9b3d,Mike Petrovich,2018-02-19 12:58:55 UTC,"SQL injection fix: Cast limit to integer when setting via Criteria::setLimit() (#1465)

* Cast limit to integer when setting via Criteria::setLimit()

This is a followup to a fix for SQL injections with LIMIT clauses in MySQL [1]. That fix only applied to the MySQL adapter, and other existing or future adapters could still be at risk.

By coercing limit inputs to integers upon setting them, we can avoid SQL injection vulnerabilities with `limit()` across all database adapters.

The original code comments implied that integer coercion could be problematic with 32-bit integers, but unit tests in this PR prove otherwise. Even 64-bit integers seem to work fine.

[1] https://github.com/propelorm/Propel2/pull/1464

* Add missing tests for setOffset()

* Remove note about 32-bit truncation

Unit tests show that even 64-bit integers aren't truncated.
",true,false,true,false,false,false,false,false,2,1,2,1,4280
emundus/v6,5cfffcadbbbb94fb98a7b17825b3cfd1f7a7741a,james dean,2021-02-05 08:56:16 UTC,"Merge branch 'hotfix/fix_queries_sql_injection' into 'dev'

Hotfix/fix queries sql injection

See merge request emundus/cms/core!1299",true,true,false,false,false,false,false,false,16,16,16,16,0
f-droid/fdroidclient,018e3221a7529bfe57e07f7a40026c7e540a0654,Hans-Christoph Steiner,2021-02-10 22:05:55 UTC,"prevent search terms triggering SQL injection vulns
",true,false,false,false,false,false,false,false,3,1,3,1,1493
coverclock/com-diag-hazer,480dc96ed2e9e8fa82f2b0e4f7c4c34f0b78dd0b,Chip Overclock,2021-02-02 17:29:21 UTC,"[1] Added a bunch more data validation to prevent an SQL-injection-like issue. TESTED
",false,true,false,false,false,false,false,false,1,1,1,1,78
WillyXJ/facileManager,12947a7f6b3e64f1225e8c47ebd1e6d967ab9362,WillyXJ,2021-02-02 16:03:43 UTC,"fmCore - SQL injection fix
",true,false,false,false,false,false,false,false,2,2,1,1,51441
WillyXJ/facileManager,3c60f0023fed125b8c0374e82ea35828ecff77bc,WillyXJ,2021-02-03 21:08:20 UTC,"fmCore - user/group edit SQL injection fix
",true,false,false,false,false,false,false,false,2,2,1,1,111
alphagov/contacts-admin,24bc1762d645e0e887d06ba82eb0a0c21b3ad646,ChrisBAshton,2021-02-05 09:05:34 UTC,"Remove SQL injection attack vector

Brakeman is warning of a possible exploitable SQL injection:

```
Confidence: Weak
Category: SQL Injection
Check: SQL
Message: Possible SQL injection
Code: Redis.current.lock(""contacts-admin:#{Rails.env}:#{lock_name}"", :life => (LIFETIME))
File: app/lib/contacts/distributed_lock.rb
Line: 13
```

A search of contacts-admin shows that `Contacts::DistributedLock`
is only used by the `organisations:import` Rake task, which runs
every day at 3am (according to config/schedule.rb). Therefore a
parameterised lock name is not needed - we can simply hardcode the
lock name to the value we know it will be.

We can take this a step further by removing the `Rails.env`
portion of the lock name, as we have different Redis instances in
different environments, so there's no need to namespace by env.
",false,false,false,false,false,true,false,false,2,2,1,1,923
google/nomulus,d7e65d95e66cf074df67bc586782e878967f8565,Weimin Yu,2021-02-07 00:28:38 UTC,"Add a presubmit check to require use of templated SQL string literals (#954)

* Add a presubmit check to require use of templated SQL string literals

This PR proposes a coding style convention that helps prevent
SQL-injection attacks, and is easy to enforce in the presubmit check.

SQL-injections can be effectively prevented if all parameterized queries
are generated using the proper param-binding methods. In our project
which uses Hibernate exclusively, this can be achieved if we all follow
a simple convention: only use constant sql templates assigned to static
final String variables as the first parameter to creat(Native)Query
methods.

This PR adds a presubmit check to enforce the proposed rule, and
modified one class as a demo. If the team agrees with this proposal, we
will change all other use cases.
",false,true,true,true,false,false,false,false,2,2,2,2,5562
ZoneMinder/ZoneMinder,02fd1e79b3bfa5b2e2087cb1255f9dbd921ccae8,Matt N,2019-01-19 14:46:08 UTC,"Fix ajax/status.php orderby sql injection (#2421)

https://github.com/LoRexxar/CVE_Request/tree/master/zoneminder%20vul%20before%20v1.32.3#ajaxstatusphp-line-276-orderby-sql-injection",true,false,false,false,false,false,false,false,1,1,1,1,2
crobox/clickhouse-scala-client,43a99bdc3867a9c017b9b76179a6bce8fcd56f1f,Sjoerd Mulder,2019-01-03 16:28:46 UTC,"Adding support for WITH ROLLUP and WITH CUBE (#81)

* Adding support for WITH ROLLUP and WITH CUBE; Also various fixes for validating column names preventing possible SQL injections

* Adding support for `raw()` method

* Updating to latest version


",true,true,false,false,false,false,false,false,25,24,24,23,60471
akrherz/iem,3edda36937e5cd257f08f356182a5d1a606eaa65,akrherz,2012-02-09 14:28:17 UTC,"remove sql injection and fix it
",true,true,false,false,false,false,false,false,1,1,1,1,2692
jbroadway/elefant,29206a99324356b36a4a7704d1a1953be01013f5,jbroadway,2012-02-22 16:13:51 UTC,"Added SQL injection prevention to lib/Model on limit and offset values
",false,true,false,false,false,false,false,false,1,1,1,1,9
TracksApp/tracks,e7268fbaa2aa0c99a6e6e4706deafa6e5d47fa2a,Matt Rogers,2012-02-03 04:27:18 UTC,"Remove the double-quote custom validation

Rails has had SQL injection prevention since at least 2009 so we don't
need our version of it anymore.

Fixes ticket #1237
",true,true,false,false,false,false,false,false,3,1,3,1,
Spotweb/Spotweb,0dceb9ff73b7ada8f81cd18f2001677205c45200,spotweb,2012-02-14 18:21:31 UTC,"Some small code changes to better fix possible sql injection
",true,true,false,false,false,false,false,false,5,5,5,5,0
Spotweb/Spotweb,a8a0cc5e5f10bc3740da3bd1e44726ffc01af848,spotweb,2012-02-14 18:21:31 UTC,"Some small code changes to better fix possible sql injection
",true,true,false,false,false,false,false,false,5,5,5,5,0
injcristianrojas/swsec-intro,71a1ba9ec0da5dca59f532953815c982944ba068,Cristian Rojas,2020-02-14 15:32:10 UTC,"Added SQL Injection attack test (correction)
",true,true,false,false,false,false,false,false,1,0,1,0,2
injcristianrojas/swsec-intro,042ea5d63fb37311e36adfba31f26601fceeb95a,Cristian Rojas,2020-02-14 15:29:21 UTC,"Added SQL Injection attack test
",false,true,false,false,false,false,false,false,1,0,1,0,5475
it-projects-llc/misc-addons,fb105fb3200a0479ccd61f838b588ed944263942,Ivan Yelizariev,2020-02-06 08:03:28 UTC,":green_heart: base_session_store_psql: disable sql-injection check
",false,false,false,false,false,false,false,false,1,1,1,1,34
it-projects-llc/misc-addons,2b8c5ea45755fcf9949685c8d5411e32743d3812,Ivan Yelizariev,2020-02-06 07:28:59 UTC,":green_heart: disable sql-injection in base_attendance

that code is taken from odoo
",false,true,false,false,false,false,false,false,1,1,1,1,106
hubzero/hubzero-cms,6c6f472abc50ed1bc9f9fed685d66895c118e6c2,Steve Snyder,2011-04-05 18:04:57 UTC,"SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,6980
forkcms/forkcms,22568b9533793e6304efc6dbfcf701b0ea6162f8,Jeroen Van den Bossche,2011-04-21 07:54:39 UTC,"Blog engine: prevent SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,1364
hubzero/hubzero-cms,7f4f7f5267ce2e9e03f81f40351123d839d9e8ad,Shawn Rice,2013-02-25 13:42:15 UTC,"[SECURITY] XSS and SQL injection fixes
",true,false,false,false,false,false,false,false,19,19,19,19,23
hubzero/hubzero-cms,04c7ea226a260925ee5c338d35fbc936b1dd3c50,Shawn Rice,2013-02-25 21:53:10 UTC,"[SECURITY] SQL injection fixes
",true,false,false,false,false,false,false,false,11,11,11,11,153
hubzero/hubzero-cms,f1bb972eba3e03c51d186d381268d63f485f5e86,Shawn Rice,2013-02-22 21:37:06 UTC,"Added escaping to protect against SQL injection
",false,true,false,false,false,false,false,false,15,15,15,15,303
hubzero/hubzero-cms,aab046307174398dc12fd0dc0b302f2bc208c92d,Shawn Rice,2013-02-25 19:19:32 UTC,"[SECURITY] XSS and SQL injection fixes
",true,false,false,false,false,false,false,false,57,57,57,57,337
hubzero/hubzero-cms,a2224945241e302276d5b37ff0ca169302328bec,Shawn Rice,2013-02-27 15:15:54 UTC,"[SECURITY] XSS and SQL injection fixes
",true,false,false,false,false,false,false,false,14,14,14,14,2
jruby/activerecord-jdbc-adapter,e24bfdb49caeee31a432a74f4ab9e93c0758b4ef,kares,2013-02-25 16:06:26 UTC,NOTE on SQL injection vulnerability in 1.2.6 (thanks to @ebeigarts),true,false,true,false,false,true,false,false,1,1,0,0,7247
lionixevolve/LionixCRM,5ea69f5fdd6a9e1a334511d6875ab142c1e157bc,c.panton,2020-01-17 09:52:42 UTC,"Merge branch 'fix/email_multi_contact' into 'patch'

Fixed #81 - EmailUIAjax - contactData - There is a SQL Injection vulnerability which might allow a malicious authenticated user to disclose 11/13

See merge request product/suitecrm!140",true,true,false,false,false,false,false,false,1,1,1,1,9
lionixevolve/LionixCRM,a332f61dc9c1523e26adb275aa4fbf400a14484d,c.panton,2020-01-17 09:38:12 UTC,"Merge branch 'fix/mailmerge' into 'patch'

Fixed #83 - MailMerge - search - There is a SQL Injection vulnerability which might allow 13/13

See merge request product/suitecrm!138",true,true,false,false,false,false,false,false,1,1,1,1,1174
lionixevolve/LionixCRM,1404635bc6c4a37f437ed34b3f3e2f2cb0677bc0,c.panton,2020-01-17 09:42:49 UTC,"Merge branch 'fix/duplicate_contact' into 'patch'

Fixed #79 - SOAP - There is a SQL Injection vulnerability which might allow a malicious authenticated user to disclose arbitrary data from the database. 9/13

See merge request product/suitecrm!142",true,true,true,true,false,false,false,false,1,1,1,1,3
lionixevolve/LionixCRM,594862b55f18924dbe338067613cace0f69786d4,c.panton,2020-01-17 09:39:07 UTC,"Merge branch 'fix/email_remove_contact' into 'patch'

Fixed #82 - There is a SQL Injection vulnerability which might allow a malicious authenticated user to 12/13

See merge request product/suitecrm!139",true,true,false,false,false,false,false,false,1,1,1,1,0
frePPLe/frePPLe,babd2626d87e00568f817320583eced7fb1bd3b1,hichamlahlou,2018-04-04 08:52:49 UTC,"prevent sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,614
ntop/ntopng,404bf86fd7f6228c2b5b07ad442c4faf94cb45e0,Simone Mainardi,2016-11-15 10:35:51 UTC,"Hardens the code to prevent SQL injections
",true,false,false,false,false,false,false,false,3,3,3,3,919
qcode-software/qcode-tcl,4a7f04032a54b43e89faaad7f3d7f95f92e20301,Daniel Clark,2016-07-20 09:54:38 UTC,"Merge pull request #403 from qcode-software/sql_sort-sql-injection

Improve sql-injection protection for sql_sort",false,true,false,false,false,false,false,false,2,1,0,0,31622
qcode-software/qcode-tcl,f9551017b47f8d38a10267896bd79840a8fdb06c,Peter Chaplin,2016-07-19 15:44:03 UTC,"Improve sql-injection protection for sql_sort
",false,false,true,true,false,false,false,false,2,1,0,0,9092
jonsito/AgilityContest,81844581a62c5eba07c4e9e2a4b0c66858839cf8,Juan Antonio Martinez,2014-02-28 17:41:31 UTC,"Some work in avoiding sql injections: need to change every Queries with
user provided data with prepared statements",false,false,false,false,false,false,false,false,1,1,1,1,2686
nielsbasjes/yauaa,fa213645a6ac004c7ca3a2a4899b2c00c19c3212,Niels Basjes,2017-02-04 22:15:53 UTC,"When SQL injection is found remove all fields first.
",false,false,false,false,false,false,false,false,1,1,0,0,0
nielsbasjes/yauaa,4b19821cebca11a4cc69aa41412598dd37385303,Niels Basjes,2017-02-06 09:02:33 UTC,"Use all available SQL injection examples as test cases.
",false,false,true,false,false,false,false,false,1,1,0,0,1385
frappe/frappe,049d51cdf17b06168b4fe7672be8ce01fff0edd2,Saurabh,2017-02-28 12:29:03 UTC,"[security][fix] fixed order by and group by clause vulnerability for sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,17403
endeavourhealth/EDS,5920ce169c81d7df082ea5a66400b17978d354cd,ErgoSoftUK,2017-02-27 17:22:15 UTC,"Convert report SQL to be parameter based (SQL Injection vulnerability fix)
",true,true,true,true,false,false,false,false,4,4,3,3,277
RichardTMiles/CarbonPHP,41e8c79850b0ec040cb96ef611b42ea9b513b471,richardtmiles,2021-01-19 08:31:01 UTC,"Added js rest compilation option
fixed rest validation with possible sql injection
",true,true,false,false,false,false,false,false,4,4,2,2,5819
aces/Loris,db8c63be6e8bff7e18296f03e54213279a87b24b,AnyhowStep,2017-07-11 13:41:07 UTC,"[Core] Remove possible SQL injection attack in Utility::getExistingVisitLabels()

Updated the query in Utility::getExistingVisitLabels() to use a prepared statement.",false,true,false,false,false,false,false,false,1,1,0,0,6827
apache/zeppelin,709c5a70a8f37277c9eea0a1c0c9195b5eb21a74,Yanbo Liang,2017-07-12 07:25:05 UTC,"[ZEPPELIN-2769] Prevent SQL injection for GetUserList.getUserList.

### What is this PR for?
Prevent SQL injection for ```GetUserList.getUserList```.

### What type of PR is it?
Improvement

### What is the Jira issue?
https://issues.apache.org/jira/browse/ZEPPELIN-2769

Author: Yanbo Liang <ybliang8@gmail.com>

Closes #2487 from yanboliang/zeppelin-2769 and squashes the following commits:

d1a7ff9b [Yanbo Liang] Prevent SQL injection for GetUserList.getUserList.
",true,false,false,false,false,false,false,false,1,1,1,1,8693
apache/incubator-zeppelin,709c5a70a8f37277c9eea0a1c0c9195b5eb21a74,Yanbo Liang,2017-07-12 07:25:05 UTC,"[ZEPPELIN-2769] Prevent SQL injection for GetUserList.getUserList.

### What is this PR for?
Prevent SQL injection for ```GetUserList.getUserList```.

### What type of PR is it?
Improvement

### What is the Jira issue?
https://issues.apache.org/jira/browse/ZEPPELIN-2769

Author: Yanbo Liang <ybliang8@gmail.com>

Closes #2487 from yanboliang/zeppelin-2769 and squashes the following commits:

d1a7ff9b [Yanbo Liang] Prevent SQL injection for GetUserList.getUserList.
",true,false,false,false,false,false,false,false,1,1,1,1,8693
tgstation/tgstation,afbeb03d9fab9bdab27f8a6f8a183062543724cc,MrStonedOne,2014-10-30 01:19:47 UTC,"Fixes admin only vv related sql injection exploit in feedback reporting.

Noticed this while looking over my PR, by storing (and trusting) the escaped version, an admin could edit this in vv and do unspeakable things to the database
",true,false,false,false,false,false,false,false,1,1,0,0,17
tgstation/-tg-station,afbeb03d9fab9bdab27f8a6f8a183062543724cc,MrStonedOne,2014-10-30 01:19:47 UTC,"Fixes admin only vv related sql injection exploit in feedback reporting.

Noticed this while looking over my PR, by storing (and trusting) the escaped version, an admin could edit this in vv and do unspeakable things to the database
",true,false,false,false,false,false,false,false,1,1,0,0,17
rsim/oracle-enhanced,414b582d1afc4b2626ef7bf57e0987a00d433374,Raimonds Simanovskis,2008-09-09 16:58:30 UTC,"prevent from SQL injection in limit and offset
",true,false,false,false,false,false,false,false,2,2,1,1,1037
koala-framework/koala-framework,ff976216f5b58e31954d0c4c4b4a30c66eda88f8,Markus Hauser,2008-09-22 11:53:21 UTC,"- suche in autogrids mit foo:bar gefixt gegen sql injection
- SearchBox etwas abgeändert für prohaustier
",false,false,false,false,false,false,false,false,6,6,5,5,4166
koala-framework/koala-framework,54d18b224220318f7f89412d73c19dd52ff58718,Markus Hauser,2008-09-22 11:53:21 UTC,"- suche in autogrids mit foo:bar gefixt gegen sql injection
- SearchBox etwas abgeändert für prohaustier
",false,false,false,false,false,false,false,false,6,6,5,5,4166
osmdroid/osmdroid,b4b5da1830a8bb9e6fb22f999973000f94f1d1aa,spyhunter99,2018-01-27 01:52:18 UTC,"#688 prevent possible sql injection, move the new method to the interface and bubbling up the setting (#898)

",true,false,true,true,false,false,false,false,6,6,6,6,7513
opencadc/caom2db,dad271d176a93eec405ba1924b955aa80b8a0908,Patrick Dowler,2018-01-26 21:52:20 UTC,"removed interfaces and renamed base classes to interface names; implemented ArtifactGet using prepared statement to avoid SQL injection via unsafe content (Artifact.uri)
",false,true,true,true,false,false,false,false,12,7,12,7,34
Cvolton/GMDprivateServer,72c26dffaaaee27a60919f17874aebd26cbfc56c,Cvolton,2017-01-09 16:47:51 UTC,"sql injection exploit (found and abused by pizzaroot)
",false,false,false,false,false,false,true,false,35,35,35,35,1189
Cvolton/GMDprivateServer,069332508d6a618c10b2f5703c0b5ad6fb3e3e10,Cvolton,2017-01-10 21:06:04 UTC,"sql injection
",false,false,false,false,false,false,false,false,40,40,39,39,1224
Cvolton/GMDprivateServer,bcd5a875c6386fc38b551e2dd857c26aa861651b,Cvolton,2017-01-08 16:35:52 UTC,"fixed an sql injection exploit found by pizzaroot
",true,false,false,false,false,false,false,false,34,34,34,34,39
Cvolton/GMDprivateServer,832002320cd1d8cd5e06044a577e2b5f077b5eaa,Cvolton,2017-01-08 17:40:06 UTC,"another sql injection exploit patched
",true,false,false,false,false,false,false,false,1,1,1,1,52
Koha-Community/Koha,e2d1bafa22f213658fc040d541534299c126bd1b,Kyle M Hall,2017-01-30 11:52:56 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 8924439054fec94acabef6045f21369117e528f0.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5601
Koha-Community/Koha,4dc7c32a3db11db2a3862e4979e62db23b2a208c,Kyle M Hall,2017-01-30 12:12:08 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 904716f581102887c27d5bfc727430564cc12284.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,19
LMSCloud/Koha-LMSCloud,4dc7c32a3db11db2a3862e4979e62db23b2a208c,Kyle M Hall,2017-01-30 12:12:08 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 904716f581102887c27d5bfc727430564cc12284.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,19
LMSCloud/Koha-LMSCloud,e2d1bafa22f213658fc040d541534299c126bd1b,Kyle M Hall,2017-01-30 11:52:56 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 8924439054fec94acabef6045f21369117e528f0.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5601
Koha-Community/Koha,904716f581102887c27d5bfc727430564cc12284,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
LMSCloud/Koha-LMSCloud,f68e2f242faaab5f01e1c215003f63b8a22168b6,Jonathan Druart,2017-01-13 15:40:59 UTC,"Bug 17903: Fix possible SQL injection in serial claims

To recreate:
/cgi-bin/koha/serials/claims.pl?serialid=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <935782bdc81e5b4be5680f0a407ea20e1213c9d1@abunchofthings.net>
Signed-off-by: Marcel de Rooy <a4ed5d8b9e88a5c4401757374b1604745a5e46b6@rijksmuseum.nl>
Signed-off-by: Mason James <5ece1282016eb8d217aa0dbf6466e8864b30224a@kohaaloha.com>
",true,false,false,false,false,false,false,false,1,1,1,1,21
Koha-Community/Koha,f42dbd67d1b960906fd2b98560e7e3724452bce9,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>
Signed-off-by: Tomas Cohen Arazi <tomascohen@theke.io>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
Koha-Community/Koha,b0bb1b0aa60071950a39b1c1b9e9ec145b304086,Jonathan Druart,2017-01-13 15:46:51 UTC,"Bug 17904: Fix possible SQL injection in late orders

To recreate:
/cgi-bin/koha/acqui/lateorders.plop=send_alert&ordernumber=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5
LMSCloud/Koha-LMSCloud,b0bb1b0aa60071950a39b1c1b9e9ec145b304086,Jonathan Druart,2017-01-13 15:46:51 UTC,"Bug 17904: Fix possible SQL injection in late orders

To recreate:
/cgi-bin/koha/acqui/lateorders.plop=send_alert&ordernumber=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5
LMSCloud/Koha-LMSCloud,635455cb00b2358eecb79f0516a0b9db2beb760a,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>
Signed-off-by: Tomas Cohen Arazi <tomascohen@theke.io>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
(cherry picked from commit f42dbd67d1b960906fd2b98560e7e3724452bce9)
Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
",true,false,false,false,false,false,false,false,1,1,1,1,133
Koha-Community/Koha,8924439054fec94acabef6045f21369117e528f0,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
Koha-Community/Koha,179ff58b0980f348821c727c2fa79a5eca310901,Jonathan Druart,2017-01-13 15:40:59 UTC,"Bug 17903: Fix possible SQL injection in serial claims

To recreate:
/cgi-bin/koha/serials/claims.pl?serialid=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,21
LMSCloud/Koha-LMSCloud,904716f581102887c27d5bfc727430564cc12284,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
LMSCloud/Koha-LMSCloud,179ff58b0980f348821c727c2fa79a5eca310901,Jonathan Druart,2017-01-13 15:40:59 UTC,"Bug 17903: Fix possible SQL injection in serial claims

To recreate:
/cgi-bin/koha/serials/claims.pl?serialid=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,21
LMSCloud/Koha-LMSCloud,8924439054fec94acabef6045f21369117e528f0,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
LMSCloud/Koha-LMSCloud,f42dbd67d1b960906fd2b98560e7e3724452bce9,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>
Signed-off-by: Tomas Cohen Arazi <tomascohen@theke.io>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
LMSCloud/Koha-LMSCloud,45cffd874c62c7b090390c5fb3c955c31f524608,Jonathan Druart,2017-01-13 16:03:41 UTC,"Bug 17901: Fix possible SQL injection in shelf editing

It has been reported that
/cgi-bin/koha/opac-shelves.pl?op=edit&referer=view&shelfnumber=146&owner=4&shelfname=testX&sortfield=titleaaaaaa\`&category=1

Could lead to SQL injection
Actually it explodes because the generated SQL query is not correctly formated.

However it would be good to limit the possible values for sortfield.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,2,2,2,2,16
Koha-Community/Koha,45cffd874c62c7b090390c5fb3c955c31f524608,Jonathan Druart,2017-01-13 16:03:41 UTC,"Bug 17901: Fix possible SQL injection in shelf editing

It has been reported that
/cgi-bin/koha/opac-shelves.pl?op=edit&referer=view&shelfnumber=146&owner=4&shelfname=testX&sortfield=titleaaaaaa\`&category=1

Could lead to SQL injection
Actually it explodes because the generated SQL query is not correctly formated.

However it would be good to limit the possible values for sortfield.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,2,2,2,2,16
LMSCloud/Koha-LMSCloud,29f1280ff043c5020b30738735061cbbacc1a74f,Jonathan Druart,2017-01-13 16:03:41 UTC,"Bug 17901: Fix possible SQL injection in shelf editing

It has been reported that
/cgi-bin/koha/opac-shelves.pl?op=edit&referer=view&shelfnumber=146&owner=4&shelfname=testX&sortfield=titleaaaaaa\`&category=1

Could lead to SQL injection
Actually it explodes because the generated SQL query is not correctly formated.

However it would be good to limit the possible values for sortfield.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
(cherry picked from commit 45cffd874c62c7b090390c5fb3c955c31f524608)
Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
",true,false,false,false,false,false,false,false,2,2,2,2,16
LMSCloud/Koha-LMSCloud,b83d727215a7c7f6711fe6adcfcd268887c49328,Jonathan Druart,2017-01-13 16:43:25 UTC,"Bug 17900: Fix possible SQL injection in patron cards template editing

To recreate:
/cgi-bin/koha/patroncards/edit-template.pl?op=edit&element_id=23%20and%201%3d2+union+all+select+1,user(),@@version+--%20

Look at the Profile dropdown list.

To fix this problem and to make sure it does not appears anywhere else
in the label and patroncards modules, I have refactored the way the
queries are built in C4::Creators::Lib
Now all of the subroutine takes a hashref in parameters with a 'fields'
and 'filters' parameters.
From these 2 parameters the new internal subroutine _build_query will
build the query and use placeholders.

Test plan:
1/ Make sure you do not recreate the vulnerability with this patch
applied.
2/ With decent data in the labels and patroncards modules, compare all
the different view (undef the New and Manage button groups) with and
without this patch applied.
=> You should not see any differences.

This vulnerability has been reported by MDSec.

Signed-off-by: Chris Cormack <chris@bigballofwax.co.nz>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
(cherry picked from commit a70980d8255a66c33539926796c06b29b26fbb40)
Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
",true,false,true,true,false,false,false,false,10,10,9,9,35
LMSCloud/Koha-LMSCloud,a70980d8255a66c33539926796c06b29b26fbb40,Jonathan Druart,2017-01-13 16:43:25 UTC,"Bug 17900: Fix possible SQL injection in patron cards template editing

To recreate:
/cgi-bin/koha/patroncards/edit-template.pl?op=edit&element_id=23%20and%201%3d2+union+all+select+1,user(),@@version+--%20

Look at the Profile dropdown list.

To fix this problem and to make sure it does not appears anywhere else
in the label and patroncards modules, I have refactored the way the
queries are built in C4::Creators::Lib
Now all of the subroutine takes a hashref in parameters with a 'fields'
and 'filters' parameters.
From these 2 parameters the new internal subroutine _build_query will
build the query and use placeholders.

Test plan:
1/ Make sure you do not recreate the vulnerability with this patch
applied.
2/ With decent data in the labels and patroncards modules, compare all
the different view (undef the New and Manage button groups) with and
without this patch applied.
=> You should not see any differences.

This vulnerability has been reported by MDSec.

Signed-off-by: Chris Cormack <chris@bigballofwax.co.nz>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,true,true,false,false,false,false,10,10,9,9,35
Koha-Community/Koha,a70980d8255a66c33539926796c06b29b26fbb40,Jonathan Druart,2017-01-13 16:43:25 UTC,"Bug 17900: Fix possible SQL injection in patron cards template editing

To recreate:
/cgi-bin/koha/patroncards/edit-template.pl?op=edit&element_id=23%20and%201%3d2+union+all+select+1,user(),@@version+--%20

Look at the Profile dropdown list.

To fix this problem and to make sure it does not appears anywhere else
in the label and patroncards modules, I have refactored the way the
queries are built in C4::Creators::Lib
Now all of the subroutine takes a hashref in parameters with a 'fields'
and 'filters' parameters.
From these 2 parameters the new internal subroutine _build_query will
build the query and use placeholders.

Test plan:
1/ Make sure you do not recreate the vulnerability with this patch
applied.
2/ With decent data in the labels and patroncards modules, compare all
the different view (undef the New and Manage button groups) with and
without this patch applied.
=> You should not see any differences.

This vulnerability has been reported by MDSec.

Signed-off-by: Chris Cormack <chris@bigballofwax.co.nz>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,true,true,false,false,false,false,10,10,9,9,35
specify/specify7,77bfdd8a6754b4469549081aa4ffd871ba71d613,Ben Anhalt,2015-06-11 17:17:37 UTC,"remove SQL injection in interactions api.

No longer building SQL string using user supplied data in
interactions.views.preps_available_ids.
",false,false,false,false,false,false,false,false,2,2,2,2,47
specify/specify7,9afc1b709cfa75145c6101aea72e88c4b50b2179,Ben Anhalt,2015-06-11 21:24:35 UTC,"remove SQL injection from other interaction api.

Fix interactions.views.return_all_items to not build up sql string with
unescaped submitted data.
",true,false,false,false,false,false,false,false,2,2,2,2,246
hubzero/hubzero-cms,073a051ec6387663ae65eb4cfc7f38e08b13297c,Shawn Rice,2017-01-23 14:20:53 UTC,"[HUBZERO][#10313][COM_RESOURCES] Fixing SQL injection issue
",true,false,false,false,false,false,false,false,1,1,1,1,14
hubzero/hubzero-cms,4a3f94e7d3bb0cbc8fe803f54857e69cb5ad1c2d,Shawn Rice,2017-01-23 12:37:38 UTC,"[HUBZERO][#10313][COM_MEMBERS][COM_PROJECTS] Fixes to guard against SQL injection
",true,false,false,false,false,false,false,false,2,2,2,2,22
linkedin/gobblin,27586b86b0fab8d3a2c84a62309a3c4db20dfb33,Abhishek Tiwari,2017-01-25 19:16:29 UTC,"Merge pull request #986 from kadaan/FixFor#969

Fixing SQL Injection Warnings in DatabaseJobHistoryStore (Issue #969)",false,true,false,false,false,false,false,false,4,4,4,4,2590
ledger123/runmyaccounts,7882ca260b3c37f4ebfe0dc24dc451000005a736,nils,2016-03-24 16:30:36 UTC,Merge branch 'sql-injection-review',false,true,false,false,false,false,false,false,19,19,19,19,4505
ministryofjustice/parliamentary-questions,ff6f71dca47e1ad65af1ab5af814565b9d0460ea,Daniel Penny,2016-03-07 14:03:20 UTC,"Amended to convice brakeman that there's no SQL Injection problem
",false,false,false,false,false,false,false,false,2,2,2,2,5760
conveyal/gtfs-lib,6dfe1f6a85c06e61c4277ac57a110e0b44669599,evansiroky,2018-06-05 00:19:48 UTC,"test(JDBCTableWriter): add sql injection test
",false,true,false,false,false,false,false,false,1,0,1,0,15
conveyal/gtfs-lib,af0c05bf8358f57fd228caa2f21b5462ad51f89b,evansiroky,2018-06-13 22:39:57 UTC,"test(graphql): add sql injection tests for graphql queries
",false,true,false,false,false,false,false,false,4,0,1,0,294
frappe/frappe,e9cdf322c6fbdc738d417ff2f13898ec171d86ce,Saurabh,2018-06-25 05:53:32 UTC,"[security][fix] Sanitize search fields to avoid sql injection (#5713)

* [security][fix] Sanitize search fields to avoid sql injection

* Test Cases for Sanitizer

* Test Cases fix

* [fix] test case
",true,false,false,false,false,false,false,false,2,1,2,1,5740
frappe/frappe,e2b1ebe84cb848e79caef763594e45d734b86475,Saurabh,2018-06-27 03:45:42 UTC,"[Security][fix] To avoid possible sql injection via filters and or_filters parameters and tighten the field level checks (#5721)

* [fix] sanitize filters and or_filters to avoid sql injection

* add test cases for filter sanitizer

* codacy fix

* added test cases to test valid scenarios
",true,true,false,false,false,false,false,false,3,2,3,2,2752
conveyal/gtfs-lib,d5691f0a5562c5f36cee8b809b24157cf701a5c2,Landon Reed,2018-06-27 18:20:46 UTC,"use makeInClause to fix sql injection threat
",true,false,false,false,false,false,true,false,2,2,2,2,23131
conveyal/gtfs-lib,0870a6e68d5cae80d954e84a9b34f120630ed38f,evansiroky,2018-06-05 22:16:44 UTC,"fix(JdbcTableWriter): fix a sql injection vulnerability
",true,false,false,false,false,false,false,false,3,2,3,2,281
conveyal/gtfs-lib,fac799f7cdeba49b9f44eee430617017db059239,Landon Reed,2018-06-11 16:42:04 UTC,"fix SQL injection and trip time period filtering
",true,false,false,false,false,false,false,false,3,3,3,3,118
conveyal/gtfs-lib,860ad983ed0e469efa818a183f8b0e6b66abf07a,Landon Reed,2018-06-28 13:50:01 UTC,"Merge pull request #129 from conveyal/fix-row-count-fetcher-sql-injection

Fix row count fetcher sql injection and NestedJdbcFetcher empty results",true,true,false,false,false,false,false,false,3,3,3,3,2619
frappe/erpnext,d580c923771f0e298c2d646ca7212fade6dc4348,Ranjith Kurungadam,2018-06-05 06:10:58 UTC,"Staffing Plan (#14346)

* validate staffing plan

* staffing plan docs

* get_active_staffing_plan_and_vacancies now returns dict, mandatory fields set

* validate with parent and child company plans, plan now considers open job openings

* Failure details in validate error messages

* Fixed sql injection
",true,false,true,false,false,false,false,false,9,9,4,4,1367
facebook/mysql-5.6,6ab14c1a9c197d08cd3020ac2901c006f4969a3f,Arun Kuruvila,2018-10-08 08:46:23 UTC,"Bug#28569645: SQL INJECTION ON SLAVE DUE TO NON-QUOTING IN BINLOGGED ROLLBACK TO SAVEPOINT

fbshipit-source-id: ab2e4b18435
",true,false,false,false,false,false,false,false,1,1,1,1,1064350
frappe/frappe,980734114651dc57a50f3cb7115757b2bb7e56a9,Ameya Shenoy,2018-10-31 10:34:29 UTC,"Merge pull request #6370 from saurabh6790/sql_injection_fix_3110

[fix] potential sql injection by sanitizing fields parameter",true,true,false,false,false,false,false,false,2,1,2,1,184
frappe/frappe,a1e68b6fd5617b70ba4c163ac1b84851fbd17aeb,Saurabh,2018-10-31 08:56:22 UTC,"[fix] potential sql injection by sanitizing fields parameter
",true,false,false,false,false,false,false,false,2,1,2,1,1347
greenriver/hmis-warehouse,a42191dc782295f65c3010914e95935756991bce,Sandy Wise,2018-10-18 20:32:23 UTC,"Add .to_i to report id parameters in case of SQL injection
",false,true,false,false,false,false,false,false,4,4,4,4,13
blabla1337/skf-flask,3ab83c30a731f0a60167dcedb78ad0809f123efd,Martin Knobloch,2016-04-01 17:54:54 UTC,"Update 16-code_example--SQL_query--.md

Never include executable code with negative (insecure) examples as:

       // The important thing to remember:
       // Never construct SQL statements using string concatenation of unchecked input values
       // See the Knowledge Base item: SQL Injection for more info
        PreparedStatement preparedStatement = connection.prepareStatement(""UPDATE EMPLOYEES SET SALARY = "" + request.getParameter('salary') + "" WHERE ID = "" + request.getParameter('userId'));",false,true,true,false,false,false,false,false,1,1,0,0,
OCA/hr,b4e0573701802cefd4ecc58866ade73831458550,Przemek Kaminski,2018-10-26 11:02:06 UTC,"hr_holidays_hour: attempt to fix sql injection string
",true,false,false,false,false,false,false,false,1,1,1,1,49222
OCA/hr,52c33cd7fcb0a93b05a85b85b322f2f2267f4064,Przemek Kaminski,2018-10-27 05:08:02 UTC,"hr_holidays_hour: one more attempt at fixing sql-injection lint error
",true,false,false,false,false,false,false,false,1,1,1,1,743
OCA/hr,f4e23c032d1fd2291f78b9cb2377a929c49d53be,Przemek Kaminski,2018-10-26 11:06:43 UTC,"hr_holidays_hour: one more attempt to prevent sql injection warning
",false,false,false,false,false,false,false,false,1,1,1,1,4
osTicket/osTicket,1eaa69103a3fbed6cdfb58578e1a917724f7c147,Peter Rotich,2017-09-14 03:17:06 UTC,"CVE-2017-14396

This commit addresses an SQL injection vulnerability in ORM lookup
function.

* ORM implementation failed to properly quote fields, used in SQL
statements, that might originate from unsanitized user input.

* AttachmentFile lookup allowed for key based SQL injection by blindly
delegating non-string lookup to ORM.
",true,true,false,false,false,false,false,false,2,2,2,2,41758
osTicket/osTicket-1.8,1eaa69103a3fbed6cdfb58578e1a917724f7c147,Peter Rotich,2017-09-14 03:17:06 UTC,"CVE-2017-14396

This commit addresses an SQL injection vulnerability in ORM lookup
function.

* ORM implementation failed to properly quote fields, used in SQL
statements, that might originate from unsanitized user input.

* AttachmentFile lookup allowed for key based SQL injection by blindly
delegating non-string lookup to ORM.
",true,true,false,false,false,false,false,false,2,2,2,2,41758
salesagility/SuiteCRM,98fac2f403605c1f02071be3b7fc1a42fdb2d3ed,Dillon-Brown,2017-09-27 22:08:47 UTC,"Fixed #3579 - New Install SuiteCRM Version : 7.8.3 - WAF Blocks Login ""Blind SQL Injection Attack""
",true,true,false,false,false,false,false,false,15,15,13,13,35
discendum/salava,f871acefeabf1aa778be53704e059ad48dbffb20,Antti Koskinen,2017-09-25 08:01:11 UTC,"Prevent sql injections
",true,false,false,false,false,false,false,false,1,1,0,0,0
flatCore/flatCore-CMS,4d8bb9f644fc6bd88e7b60001f68ba130558e987,Patrick,2017-09-18 06:23:29 UTC,"Merge pull request #37 from harupu/dev

Fixed SQL Injection on user.list.php",true,true,false,false,false,false,false,false,1,1,1,1,269158
flatCore/flatCore-CMS,b566b7f4e38ec159266ffc72abb02d7990d5c7a2,Harupu,2017-09-17 15:14:17 UTC,"Fixed SQL Injection on user.list.php
",true,false,false,false,false,false,false,false,1,1,1,1,
expertiza/expertiza,e9a001e617caaa092256baf1f6f23d05c066c7df,Winbobob,2017-09-04 18:25:34 UTC,"Fix remaining SQL injection issues.
",true,false,false,false,false,false,false,false,6,6,6,6,5720
avalonmediasystem/avalon,f3aff7ec1408b6d66403ed6b1a0f3a457020e080,Phuong Dinh,2017-09-25 15:01:37 UTC,"Fix SQL injection issues
",true,false,false,false,false,false,false,false,6,6,6,6,5541
avalonmediasystem/avalon,647b5cfe247e0baca8b54ab4bde4fdd98f9d9fd9,Phil Dinh,2017-09-26 14:07:50 UTC,"Merge pull request #2344 from avalonmediasystem/sql_inject

Fix SQL injection issues",true,true,false,false,false,false,false,false,6,6,6,6,1386
JetBrains/intellij-community,4722816635cd6cc4ddc13756f5f922126011a95e,Semyon Proshev,2016-02-29 15:19:19 UTC,"PY-16814 Fixed: No Language Injection for PostgresQL WITH  statements
PY-18345 Fixed: SQL dialect incorrect after update to 5.0.4
PY-18871 Fixed: Wrong SQL detection

Improve SQL injection by pyInjections.xml enhancement
",true,true,false,false,false,false,false,false,1,1,0,0,166
ansible/ansible,e43e572770eba05100db62a807358af978f77187,Hans-Joachim Kliemeck,2016-02-19 08:14:52 UTC,"allow empty user for kerberos ticket usage

fix syntax problems:
* it is possible that sql injection is done, therefore the [DBNAME] syntax is used.
* it is not possible to use default escape on cursor.execute for DBNAME, since it will insert single quotes around the name and this will cause syntax problems / single quotes within the actual DBNAME

implement autocommit setting, since some content can not be imported within transaction

fix for automatic tests

fix problems with named instances, corrected error message regarding configuration file

remove unused placeholder
",true,true,true,true,false,false,false,false,1,1,1,1,53195
Koha-Community/Koha,16e55c1f3283402f766ed844baa5db333ed2f585,Jonathan Druart,2016-02-11 10:16:12 UTC,"Bug 15760: Avoid SQL injections

Asking on #dbix-class, ribasushi told me to set quote_names to the
connection options.

Indeed it does the fix, globally :)

Test plan:
1/ Add the following snippet to the a script (mainpage.pl is a good candidate)
 use Koha::Virtualshelves;
 my $s = Koha::Virtualshelves->search({}, { order_by => '1,(select case when (3*2*1=6 AND 000227=000227) then 1 else 1*(select table_name from information_schema.tables)end)=1' });
 $s->next;
2/ Execute the script
=> Without the patch, you should not get any error. If you have the mysql logs
enable, you will see the query
=> With the patch applied, you will get a ""unknown column"" error

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Tomas Cohen Arazi <tomascohen@unc.edu.ar>

Signed-off-by: de07abbabd0e3a853fc7a2d0f329925e8e59a742@bywatersolutions.com 
",true,false,false,false,false,true,false,false,1,1,1,1,999
LMSCloud/Koha-LMSCloud,16e55c1f3283402f766ed844baa5db333ed2f585,Jonathan Druart,2016-02-11 10:16:12 UTC,"Bug 15760: Avoid SQL injections

Asking on #dbix-class, ribasushi told me to set quote_names to the
connection options.

Indeed it does the fix, globally :)

Test plan:
1/ Add the following snippet to the a script (mainpage.pl is a good candidate)
 use Koha::Virtualshelves;
 my $s = Koha::Virtualshelves->search({}, { order_by => '1,(select case when (3*2*1=6 AND 000227=000227) then 1 else 1*(select table_name from information_schema.tables)end)=1' });
 $s->next;
2/ Execute the script
=> Without the patch, you should not get any error. If you have the mysql logs
enable, you will see the query
=> With the patch applied, you will get a ""unknown column"" error

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Tomas Cohen Arazi <tomascohen@unc.edu.ar>

Signed-off-by: de07abbabd0e3a853fc7a2d0f329925e8e59a742@bywatersolutions.com 
",true,false,false,false,false,true,false,false,1,1,1,1,999
TheFive/osmbc,9e0b1c9cf5b7aa8b6121a8879fa149da29953df4,TheFive,2016-02-29 18:48:18 UTC,"Avoid SQL Injection in history where clause. Close #357
",true,false,false,false,false,false,false,false,2,2,2,2,95
CometVisu/CometVisu,f1df6ca2c6abf584d6b3ea4a4cd720d58a6c52e1,cool-runnings,2016-02-21 10:14:25 UTC,"Replaced tabs with spaces. Fixed possible SQL injection hazard.
",false,false,false,false,false,false,false,false,3,3,2,2,2764
ottlinger/hornherzogen,8805d6870558d19518fc30fc14900f34d82369b3,Hugo Hirsch,2017-03-07 20:36:24 UTC,"Issue #50: Fix SQL injection.
",true,false,false,false,false,false,false,false,1,0,1,0,2
ottlinger/hornherzogen,31da777a3dacb7ff5b09497f625976710a447646,Hugo Hirsch,2017-03-07 19:54:41 UTC,"Issue #50: Add SQL injection filtering
",false,true,false,false,false,false,false,false,2,1,2,1,207
NuCivic/dkan,1fce6911b5d74e3d66bff362dd106194463c46cd,David Kinzer,2017-06-29 21:50:09 UTC,"Security update for services module. (#1983)

* Security update for services module.

Fixes Services - Critical - SQL Injection - SA-CONTRIB-2017-054
https://www.drupal.org/project/services/releases/7.x-3.20

* Update changelog.
",true,true,true,false,false,false,false,false,2,2,0,0,11689
apache/kylin,2546e00cf2f80b0f8abba9ec3cfe9a0fbce5cb4f,Xiaqing,2017-06-30 01:42:07 UTC,"KYLIN-2696 Check SQL injection in filter condition

",false,false,false,false,false,false,false,false,1,1,1,1,1133
camunda/camunda-bpm-platform,3e18e69a9d00d0bc98a9517957c8555a1eda5044,Daniel Meyer,2013-11-21 08:17:03 UTC,"fix(engine): remove jdbc type from SQL injection

related to #CAM-1541
",true,false,false,false,false,false,false,false,2,1,1,0,17
oat-sa/generis,26e078b2f307c96c14ec4b6a779149704abbb9c6,jbout,2013-11-11 15:55:48 UTC,"simple sql injection example

git-svn-id: a5b298e21ef12ca7cc80edb00c5c8512380a2772@3813 ab00eea3-224b-49ca-824e-92964491e928
",false,false,true,false,false,false,false,false,1,0,1,0,4649
oat-sa/generis,1e76aa0bdcf1a05c2084d1f1c30ef0a59b83f656,jbout,2013-11-11 16:45:58 UTC,"simple sql injection test

git-svn-id: a5b298e21ef12ca7cc80edb00c5c8512380a2772@3816 ab00eea3-224b-49ca-824e-92964491e928
",false,false,false,false,false,false,false,false,1,0,1,0,39
lobbywatch/lobbywatch,ebac613162254275f3ac495f391282c9947e7e6a,scito,2013-11-27 21:05:10 UTC,"Fix SQL injection (security hole) by using prepared statements; disable unused statistik/admin_classes.php
",true,true,true,true,false,false,false,false,4,4,4,4,861
phacility/phabricator,ff2b58dab7460c6af4ec56766ef335f7bf915830,vrana,2012-04-05 20:39:43 UTC,"Fix MySQL column escaping

Summary:
MySQL doesn't treat `\` as escaping character in ##``##.
This isn't probably SQL injection hole because I've found no calls of this method with user input.
But better safe than sorry.

See also [[http://dev.mysql.com/doc/refman/5.1/en/server-sql-mode.html#sqlmode_no_backslash_escapes | NO_BACKSLASH_ESCAPES]].

Test Plan:
  lang=sql
  SELECT `a\`b`; -- Throws: Syntax error near '`'.
  -- Should throw: Unknown column 'a`b'.

Reviewers: epriestley

Reviewed By: epriestley

CC: aran

Differential Revision: https://secure.phabricator.com/D2109
",true,false,true,false,false,false,true,false,1,1,1,1,172
vanilla/vanilla,ed0a02c7f8231d9c0a27c3325b86d9f4f71624d0,Todd Burry,2012-04-30 17:35:11 UTC,Deprecate array notation to Gdn_SQLDriver. It's a possible sql injection vector.,false,false,true,true,false,false,false,false,1,1,1,1,41
hubzero/hubzero-cms,967637ce7174320b4dd1f35605317e76eaf7bfa0,David Benham,2012-04-25 18:37:03 UTC,"minor sql injection attack fix, ticket hubzero ticket 1182
",true,false,false,false,false,false,false,false,1,1,1,1,68
concrete5/concrete5,2e51eb0bef014eecf9f747f1823edef09dc804ef,Andrew Embler,2012-04-30 17:41:02 UTC,"fixing potential SQL injection in autonav preview


Former-commit-id: 055fbb826b16b4e93c1055eea102bffb429e3735",true,false,false,false,false,false,false,false,1,1,1,1,13
expertiza/expertiza,9d356793013d2bd7e0217b1f8a12d02435239546,Rakesh,2016-03-20 15:37:15 UTC,"Removed SQL injection from ad_info in sign_up_sheet_controller.rb, made relevant changes in sign_up_sheet/show_team.html.erb, added associations in models/signed_up_team.rb and models/team.rb
",false,false,false,false,false,false,false,false,5,5,3,3,
concrete5-community-store/community_store,1e35816db4c64e746994fd102b11647150479fc1,Ryan Hewitt,2016-03-19 05:14:59 UTC,"Swap of Product block search over to select2
Fix possible SQL injection in ProductFinder
Also product finder allow searching by SKU
",true,false,false,false,false,false,false,false,3,3,3,3,89
ankidroid/Anki-Android,10880cfceb7ffaf08e232de50e0c84f5e3e2e012,timrae,2016-03-23 13:24:15 UTC,"Add a new URI for direct SQL querying of notes table
Decouple the URIs for libanki style querying vs. direct SQL querying.
This has the advantage of being more intuitive, and less susceptible to SQL injection attacks
",false,true,true,false,false,false,false,false,4,3,4,3,118
nigelhorne/CGI-Info,b8aa3cdb3efe4ae37d45b381e11111ef58a00252,Nigel Horne,2015-08-21 13:52:42 UTC,"Less harsh SQL injection tests, there were too many false positives
",false,false,false,false,false,false,true,false,2,2,1,1,2283
openSUSE/open-build-service,afcf6695a1751ec58159cbcbd7fb775ca1df664c,Björn Geuken,2015-08-24 14:05:59 UTC,"[webui] Fix Hakiri reported issue: SQL Injection
",true,false,false,false,false,false,false,false,2,2,2,2,6
sendsmaily/sendsmaily-wordpress-plugin,733e9f54d524c47604e9d8df52a79b0d7077befd,Kait Todesk,2019-03-11 11:19:00 UTC,"Fixes SQL injection vector when caching autoresponders
",true,false,false,false,false,false,false,false,1,1,1,1,18718
ministryofjustice/advocate-defence-payments,4d660d8fe4e2f3a8ed7b59d1b259c111b9c221a6,jsugarman,2019-03-06 13:18:53 UTC,"Fix dangerous raw sql

Rails 5.2.2 upgrade added these warnings
to potentially dangerous SQL injection vectors.
",true,false,false,false,false,false,true,false,2,2,1,1,0
sendsmaily/sendsmaily-wordpress-plugin,4c17eaf810e697d362a8cee2cdbd2abf2dc61309,Kait Todesk,2019-03-11 11:24:41 UTC,"Merge pull request #10 from sendsmaily/hotfix/sql-injection

Fixes SQL injection vector when caching autoresponders",true,true,false,false,false,false,false,false,3,3,2,2,18724
rails/rails,2d5d537d19d62e9c132cf49f7dbc9eb8ff9190e3,Ryuta Kamizono,2019-03-17 21:47:40 UTC,"Add test case to prevent possible SQL injection
",true,true,false,false,false,false,false,false,3,1,3,1,75
cBioPortal/cbioportal,9061cf8b6f1de3526378d6f06c6c9beff711378a,n1zea144,2018-05-29 17:46:46 UTC,"Changes to mitigate SQL injection threats.
",false,true,false,false,false,false,false,false,1,1,1,1,18973
aces/Loris,9030b95d7932bc814f357ba161449b3bd3e5fecb,Alizée Wickenheiser,2018-05-28 14:31:46 UTC,"[media] Unathenticated viewing private data fix (#3657)

* # This is a combination of 3 commits.
# This is the 1st commit message:

fixing sql injection

fixing sql injection

Remove debugging line

Use ?? idiom replacement

# This is the commit message #2:

remove  variable that was used for debugging

# This is the commit message #3:

update comment to PHP 7

* remove isset because using ?? idiom

* Cleanup variables not used and added logging with error message for user

* fix error message to display

* fix table name containing back ticks in database

* Using DB excape results in back ticks and need to be stripped

* remove debugging echo code

* function viewData() created and handles showing data with permission check

* revert changes to bugfix as was on wrong branch

* move function down

* travis cleanup

* spaces cleanup
",true,false,true,true,false,false,false,false,1,1,1,1,20
Cacti/cacti,0f68d289b81bec17bdb2917e7f6f8b60898e125c,Tony Roman,2013-08-07 01:35:54 UTC,"Add entry to ChangeLog for SQL injection and shell escape issues


git-svn-id: b7524c84c8c62e1926d1e3a66d999f5877137521@7407 860744bd-22fc-0310-8c96-e9fe5004b5ca
",false,true,true,false,false,false,false,false,1,1,0,0,3096
feedbin/feedbin,e6ccc99ac8e50fab4f5a41e4edcd0ba0e0e6ac5f,dima,2013-08-28 22:16:05 UTC,"fix potential sql injections
",true,false,false,false,false,false,false,false,3,3,3,3,
Seddryck/NBi,ad187c3e7d5e3880862b9fd93626cb26f5f485e5,Cédric L. Charlier,2013-08-03 22:08:48 UTC,"Added tags to remove warning about SQL injections
",false,false,true,false,false,false,false,false,23,23,23,23,0
leihs/leihs_legacy,fa5ae9df75bfdb293a3db2549219e7139c4b81b2,Franco Sellitto,2012-10-22 14:56:58 UTC,"introducing Arel, preventing sql injection and refactoring search2 class method to scope
",false,false,true,true,false,false,false,false,25,25,25,25,27
concrete5/concrete5,9d0fad057ddecffbf37dc5a9f3258b7a5cf7ce92,Remo,2012-10-15 15:11:06 UTC,"bind variables instead of string concatenation

better performance by avoiding hard parses and better security by reducing sql injection possibilities

Former-commit-id: 718eb702c3aa1c2b8101b0aae0ece52d4a855f63",false,false,true,true,false,false,false,true,1,1,1,1,1410
elplatt/seltzer,16a62d18c2cc681fa20354e42b6f38a25762a909,Edward L Platt,2012-10-21 14:58:56 UTC,"Fixes sql injection vulnerability in member_data().
",true,false,false,false,false,false,false,false,1,1,1,1,2120
SonarSource/sonarqube,1fc5fba19066db28b791bb4a3f0ed895a518e1de,Simon Brandhof,2012-10-12 14:08:25 UTC,"Fix SQL escaping and SQL injection
",true,false,false,false,false,false,false,false,2,2,2,2,593
UniversityOfAlberta/GrandForum,b54ac74a38f8aa5ae8ff302c88e25393a5d73721,David Turner,2012-10-31 15:50:11 UTC,"-Fixed an sql injection
-Added the ticket for chaning reporting year


Former-commit-id: c3f20b62fcc03ec0ad5819af84c1d02d9d51e0c0",false,false,false,false,false,false,false,false,8,8,8,8,1103
CartoDB/CartoDB-SQL-API,bd822900c11095715a5e87d909dc0b68d27df72b,Andrew Thompson,2015-07-27 23:29:59 UTC,Add doc Q&A about SQL injection and Postgres users,false,false,true,false,false,false,false,false,1,1,0,0,
LMSCloud/Koha-LMSCloud,a72262a950aa701cebe460e2a3a7586edecd86be,David Cook,2015-07-13 04:06:46 UTC,"Bug 14521: SQL injection in local use system preferences

This patch fixes a SQL injection vulnerability in the local use
system preferences.

_TEST PLAN_

Before applying:

1) Go to Global System Preferences
2) Click on the ""Local use"" tab
3) Add a new preference with the value ""') or '1' = '1' -- ""
(be sure to include the space at the end after the comment --).
4) When the page refreshes, you should now see about 99 other system
preferences which shouldn't be showing up.

5) Apply the patch

6) Refresh the page
7) Note that you now only see a system preference for ""') or '1' = '1' -- ""
and the other actual local use system preferences.

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,true,true,false,false,false,false,false,1,1,1,1,28589
Koha-Community/Koha,a72262a950aa701cebe460e2a3a7586edecd86be,David Cook,2015-07-13 04:06:46 UTC,"Bug 14521: SQL injection in local use system preferences

This patch fixes a SQL injection vulnerability in the local use
system preferences.

_TEST PLAN_

Before applying:

1) Go to Global System Preferences
2) Click on the ""Local use"" tab
3) Add a new preference with the value ""') or '1' = '1' -- ""
(be sure to include the space at the end after the comment --).
4) When the page refreshes, you should now see about 99 other system
preferences which shouldn't be showing up.

5) Apply the patch

6) Refresh the page
7) Note that you now only see a system preference for ""') or '1' = '1' -- ""
and the other actual local use system preferences.

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,true,true,false,false,false,false,false,1,1,1,1,28589
cloudsonic/sonic-server,5331732236cc5f34895e0f583e422d7c3def22f2,Deluan,2020-03-26 00:33:32 UTC,"fix: remove sql injection
",true,true,false,false,false,false,false,false,5,2,5,2,33
catmaid/CATMAID,a9597c95c104d3ab36384c7be832c2803e2c6cc7,Tom Kazimiers,2020-03-31 16:26:46 UTC,"Graph widget: implement more complete node filtering

This fixes some issues with the previous implementation that resulted in
discrepancies between the Graph Widget and other widgets, like e.g. the
Connectivity Widget, with filters applied. The new implementation will
first obtain all treenodes allowed by the node filters and then finds
all connectors connected to them. These in turn are now provided to the
back-end, which now respects these connector node IDs as optional
additional filter. This makes the resulting values match other widgets
and allows use of additional subgraphs (e.g. axon/dendrite split), which
wasn't possible before.

In the front-end, the checkbox to disable node filters completely for
the Graph Widget moved from the Subgraphs tab to the Edges tab, because
this is what is ultimately filtered: edges/links. The ""Circles""
expansion in the Grow tab respects node/edge filtered connector nodes as
well.

This also updates a few related SQL queries in the graph computation on
the back-end to make better use of psycopg2's parameterization rather
than build complete queries using string concatenation. This not only
helps against potential SQL injection attacks, but makes it often times
much more readable.

Additionally, the use of `IN` in some SQL queries has been replaced with
the use of `= ANY`, because it makes use of arrays easier, which can be
passed directly to psycopg2. Practically this results in the same plan.
",true,true,true,true,false,false,false,false,7,7,6,6,2220
ZoneMinder/ZoneMinder,6b3a53ec0ff9a0b1274cbc0072a74ac605f34b7b,Kyle Johnson,2017-02-04 21:59:33 UTC,"Tell PDO to use real prepared statements.

This makes sure the statement and the values aren't
parsed by PHP before sending it to the MySQL server.

See https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php
and https://secure.php.net/manual/en/pdo.setattribute.php
",false,false,true,false,false,false,false,false,1,1,1,1,11503
bobintetley/asm3,0dd6200ad6ed6b3ba54714e48217fe4e5221a7c8,Robin Rawson-Tetley,2017-02-21 08:11:14 UTC,"sql injection protection for dbfs name/path
",false,false,false,false,false,false,false,false,2,2,2,2,703
bobintetley/asm3,bdf809ef5b0f6ccdf24b8868ebc2edab23450f25,Robin Rawson-Tetley,2017-02-13 18:13:11 UTC,"Fix sql injection bug in diary.user_role_where_clause
",true,false,false,false,false,false,false,false,3,3,2,2,101
bobintetley/asm3,30070b0b32542ae613f18de0aa37c9bdb2d41d23,Robin Rawson-Tetley,2017-02-09 14:54:19 UTC,"Fix SQL injection bugs in user module
",true,false,false,false,false,false,false,false,3,3,2,2,187
alphagov/publishing-api,a2b6482e990ca4adb7e7de7fa1d509bbf0ea176c,Daniel Roseman,2017-02-09 10:32:51 UTC,"Escape nested fields to prevent SQL injection.
",true,false,false,false,false,false,false,false,2,2,2,2,2578
ZoneMinder/ZoneMinder,8feac1747d8e9a4e97fdfbdea33441b351248e09,Andrew Bauer,2017-02-04 22:23:51 UTC,"Merge pull request #1764 from ZoneMinder/vulerability-fixes

sql injection and session fixation vulerability fixes",true,true,false,false,false,false,false,false,7,7,7,7,18
TestLinkOpenSourceTRMS/testlink-code,92bebe517a5f009cd67a56573fe2cb41c9bc4cc2,fman,2013-03-11 20:04:10 UTC,"better sql injection countermeasures
",false,false,false,false,false,false,false,false,1,0,1,0,1555
derUli/ulicms,27cc33831fc32dc7422d42c2660b54cb54bb0cf5,derUli,2013-03-22 20:01:04 UTC,"Potenzielle SQL-Injection korrigiert
",false,false,false,false,false,false,false,false,3,3,3,3,21
linkedin/WhereHows,6ffbc9d1ffa7167e0159ff01a98ec64f2bc40223,Yi (Alan) Wang,2016-12-08 19:31:09 UTC,"Fix SQL injection issues in some frontend java DAO classes (#298)

",true,false,false,false,false,false,false,false,2,2,2,2,11151
linkedin/WhereHows,75a25934abc457749a3cc31a609e96c00854c860,Yi Wang,2016-12-08 18:53:36 UTC,"Fix SQL injection issues in some frontend java DAO classes
",true,false,false,false,false,false,false,false,5,5,4,4,9645
openpetra/openpetra,c2588dfcacbd831f3b74cb658a541ac729b7f6f9,Timotheus Pokorra,2016-12-28 22:34:48 UTC,"Avoid SQL injection by using parameterizes SQL queries instead of inserting parameters into the SQL statement string
fixes #198
",true,false,true,true,false,false,false,false,8,8,8,8,70613
frappe/frappe,b2b2df56aadcd5eb8aea6fe9565e4e113fa01d5e,Saurabh,2017-03-02 11:21:20 UTC,"[fix] consider optional fields too while chekcing sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,2735
frappe/frappe,bf310c59b4c907d8a3123b035435fb049722e32b,Nabin Hait,2017-03-02 11:26:02 UTC,"Merge pull request #2794 from saurabh6790/sql_injection_fixes

[fix] consider optional fields too while chekcing sql injection",true,true,false,false,false,false,false,false,1,1,1,1,166
frappe/frappe,5f5d3066fad853a2dcae912250cdef492af4d580,Nabin Hait,2017-03-02 08:39:12 UTC,"Merge pull request #2784 from saurabh6790/sql_injection_fixes

[security][fix] fixed order by and group by clause vulnerability for sql injection",true,true,false,false,false,false,false,false,1,1,1,1,67
cismet/verdis-server,991f4f01463d0a9e3013526a24472482e332bb38,helllth,2017-03-08 16:06:01 UTC,"fixes #24: quick fix to prevent sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,1499
cismet/verdis-server,bbab0b5794e4305f20687b188f79bb8926a6a7d3,helllth,2017-03-08 16:06:13 UTC,"Merge branch 'bug/024-quick-prevent-sql-injection' into dev
",true,true,false,false,false,false,false,false,1,1,1,1,0
fossology/fossology,05e6c1fcf623bbeb905a791d3d56d7f75057b779,Max Wittig,2017-03-30 08:29:19 UTC,"fix(search): don't allow SQL injection, check numeric for SizeMin and SizeMax
",true,true,false,false,false,false,false,false,1,1,1,1,11210
blitze/phpBB-ext-sitemaker,07926a78becd67831c30df935a90c553b2d5e856,blitze,2019-11-08 20:11:33 UTC,"Fix query to avoid sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,16
centreon/centreon,973866854a7156c0dd7e0115249ae718b6110de3,sc979,2019-11-12 12:01:12 UTC,"fix(secu): Avoid SQL injections in multiple monitoring pages - for master (#8063)

* fix(secu): remove unused topCounter files and folders (#8007)

* fix(secu): remove unused http parameters in service by servicegroup summary XML (#8064)

* fix(secu): remove or sanitize unused https arguments in service by servicegroup summary

* fix(secu): Avoid SQL injections in service by servicegroup pages (#8065)

* fix(secu): avoid SQL injection in serviceByServicegroupGridXML.php file

* fix(secu): avoid SQL injection in serviceByServicegroupSummaryXML.php file

* fix(secu): remove or sanitize unused https arguments in service by servicegroup GRID (#8066)

* fix(secu): remove unused http parameters in services by hostgroup files (#8074)

* fix(secu): sanitize or remove unused params in serviceSummaryBYHGXML file

* fix(secu): sanitize or remove unused params in serviceGridBYHGXML file

* fix(secu): remove unused http parameters in hostgroup xml.php (#8073)

* fix(secu): remove unused http parameters in hostgroupXML.php file

* fix(secu): remove unused http parameters in services files (#8078)

* fix(secu): sanitize makeXMLForOneHost.php

* fix(secu): sanitize makeXMLForOneService.php

* fix(secu): better hadling session check

* fix(secu): sanitize or remove unused params in serviceXML file

* fix(secu): sanitize serviceGridXML.php

* fix(secu): sanitize serviceSummaryXML.php

* fix(secu): remove unused http parameters in hostXML file (#8079)

* fix(secu): sanitize or remove unused params in hostXML file

* fix(secu): prevent from sql injections in host page (#8087)

* prevent sql injection in hostXML.php

* replace uppercase table alias by lowercase

* delete case duplicating the default case

* replace array() with []

* fix(secu): prevent from sql injections from common xml model (#8083)

* fix(secu): prevent from sql injections in services pages (#8082)

* prevent sql injection in makeXMLForOneHostXML.php

* prevent sql injection in makeXMLForOneServiceXML.php

* prevent sql injection in serviceXML.php

* prevent sql injection in serviceGridXML.php

* prevent sql injection in serviceXML.php

* prevent sql injection in serviceSummaryXML.php

* remove debug and prepare second query

* fix(secu): prevent from sql injections in hostgroupXML file (#8081)

* fix(secu): avoid sql injections in hostgroupXML file

* fix(UI): add the order param to the request

* remove useless declarations

* replace regexp with whitelist

* add missing array declaration

* fix(CI): sonar coding style issue",true,false,true,true,false,false,true,false,13,13,13,13,8863
tgstation/-tg-station,f3cf3c5e2dea0e30690ba6851f419149d0532de5,Cyberboss,2018-01-30 02:54:19 UTC,"Revert ""Revert ""Fix sql injection""""

This reverts commit 23eeb4ac801ebc12ad1ab696ed60241c55e39df0.
",true,false,false,false,false,false,false,false,1,1,0,0,1
tgstation/tgstation,f3cf3c5e2dea0e30690ba6851f419149d0532de5,Cyberboss,2018-01-30 02:54:19 UTC,"Revert ""Revert ""Fix sql injection""""

This reverts commit 23eeb4ac801ebc12ad1ab696ed60241c55e39df0.
",true,false,false,false,false,false,false,false,1,1,0,0,1
tgstation/tgstation,23eeb4ac801ebc12ad1ab696ed60241c55e39df0,Cyberboss,2018-01-30 02:53:16 UTC,"Revert ""Fix sql injection""

This reverts commit de4be23ff7e8cd75aeca09465fb7ebe5b35aaa1e.
",true,false,false,false,false,false,false,false,1,1,0,0,1
tgstation/-tg-station,23eeb4ac801ebc12ad1ab696ed60241c55e39df0,Cyberboss,2018-01-30 02:53:16 UTC,"Revert ""Fix sql injection""

This reverts commit de4be23ff7e8cd75aeca09465fb7ebe5b35aaa1e.
",true,false,false,false,false,false,false,false,1,1,0,0,1
tgstation/tgstation,de4be23ff7e8cd75aeca09465fb7ebe5b35aaa1e,Jordan Brown,2018-01-30 02:51:19 UTC,Fix sql injection,true,false,false,false,false,false,false,false,1,1,0,0,318
tgstation/-tg-station,de4be23ff7e8cd75aeca09465fb7ebe5b35aaa1e,Jordan Brown,2018-01-30 02:51:19 UTC,Fix sql injection,true,false,false,false,false,false,false,false,1,1,0,0,318
tripal/tripal_analysis_expression,f6c17f6b72c128cc250347995d80b12874136951,Abdullah Almsaeed,2018-01-18 15:53:24 UTC,"Fix progress bar in job and prevent sql injection
",true,true,false,false,false,false,false,false,2,2,1,1,61908
tripal/tripal_analysis_expression,582e2e2cd907f71312f3762b29276eab2c0e9daf,Abdullah Almsaeed,2018-01-18 16:05:43 UTC,"Merge pull request #163 from tripal/update-tripal-job

Fix progress bar in job and prevent sql injection",true,true,false,false,false,false,false,false,2,2,1,1,91912
on-site/StockAid,57fa0bf73bcf7310accc4b9d61e4069d23149036,Mike Virata-Stone,2016-05-26 06:35:53 UTC,"Fix SQL injection possibility
",true,false,false,false,false,false,false,false,1,1,1,1,1
google/exposure-notifications-verification-server,46186e2dc499fef2780084f247d110ab3567852b,Yuchen Ying,2020-12-09 19:56:15 UTC,"Initial config for Cloud Armor (#1302)

* Initial config for Cloud Armor

Enabled predefined rules:
- XSS
- Remote Code Execution
- SQL Injection

All of them are in preview mode so no actual traffic will be blocked.

Also added instruction on how to use them, as well as example configs
for common use cases.

* Revise the instruction to check previewed traffics.

* Add a short playbook.

* Use the new security policy on Cloud Run services with load balancer
mapping.",false,false,true,true,false,false,false,false,7,7,0,0,2597
google/exposure-notifications-server,2afe3b8f55d0cf32fdc0a9e198785b5568b776de,Yuchen Ying,2020-12-10 15:36:10 UTC,"Add initial Cloud Armor config to Terraform. (#1221)

Enabled:
- XSS
- SQL Injection
- Remote Code Execution

NOTE: they are enabled in non-preview mode (i.e. it will actually block
traffic). Given we don't have production traffic on GCP yet I figure
this is acceptable.",false,true,true,false,false,false,false,false,4,4,0,0,10123
rails/rails,7e560d0b0d9414d5712f068f6eb5f8bde1980558,Rob Christie,2009-01-14 06:14:02 UTC,"Fixed adapter test cases that were failing in oracle because the asserts were looking for the presence of offset and limit which are not available in oracle. Changed the tests to check that the sql injection is not present in the output so that the tests are database adapter agnostic.
",true,false,false,false,false,false,false,false,1,0,1,0,
koala-framework/koala-framework,56ef1435ef8bb2838e6ab8bd65bb3711f0d0f424,Niko Sams,2009-01-08 14:21:15 UTC,"- Korrektes Quoten für db-expressions (Sql injection!!!)
- neue StartsWith expression
",false,false,false,false,false,false,false,false,5,3,5,3,222
koala-framework/koala-framework,ee22f531f60011d7979774060c413c42b9385253,Niko Sams,2009-01-08 14:21:15 UTC,"- Korrektes Quoten für db-expressions (Sql injection!!!)
- neue StartsWith expression
",false,false,false,false,false,false,false,false,5,3,5,3,222
MushroomObserver/mushroom-observer,45974e2e00c8724bdfc13030f0edffea407e9490,Joe Cohen,2019-02-08 20:30:44 UTC,"Fix possible SQL injection issue in NameController

Code Climate/Brakeman id'd ""possible SQL injection"" on
- line 1197 `AND o.vote_cache >= #{minimum_confidence}`
- line 1218 `WHERE rank = #{Name.ranks[:Genus]}`

Fixed l.1197 by earlier calling `to_i` on user-supplied params
Line 1218 is a false positive, as `Name.ranks[:Genus]` is not user supplied
",true,false,false,false,false,true,false,false,1,1,1,1,87
MushroomObserver/mushroom-observer,550408595f1506f8c68d20c13310e8d376a6c1ed,Joe Cohen,2019-02-02 01:40:14 UTC,"Fix secondary RuboCop offenses (created by prior commit)

This does not fix the SQL injection issue found by Brakeman (not by RuboCop)
in app/controllers/image_controller.rb ~line 733, which begins `#{data.map`
",true,false,false,false,false,false,false,false,7,6,6,5,1336
forkcms/forkcms,1cbdd9b197b55611864144a161d18c1bd76003dd,woutersioen,2015-02-03 14:34:56 UTC,"Avoid SQL Injection by filtering unwanted filter values.

You could inject sql by setting types or languages containing sql. This
is now preventing by only allowing the values given in our checkboxes to
be set.
",true,false,false,false,false,false,true,false,1,1,1,1,8590
forkcms/forkcms,e4c30daf5bdaeca1d5cde702d3e538aa33576eb2,Stef Bastiaansen,2015-02-26 13:48:03 UTC,"Tags: fix possible MySQL-injection in Backend. Replace double quotes with single quote, remove tags
",false,false,true,false,false,false,false,false,3,3,3,3,63
facebook/mysql-5.6,fd8a15e0d84003a9e609741e97995924c8b69419,Kristofer Pettersson,2015-02-20 13:42:15 UTC,"WL#7725 FIREWALL

An audit plugin which use the P_S digset to record SQL statements
and firewall against SQL injections.

Bug#20567900 PREPARED STATEMENTS WON'T ALLOW FOR AUDIT PLUGINS TO RETURN AN ERROR

During the prepare phase of a prepared statement any audit plugin might
raise an error. This error was ignored by the Prepare_statement::prepare
function.

The fix is to check the state of the DA and set the error state
accordingly.
",true,false,false,false,false,false,false,false,7,7,3,3,206166
librenms/librenms,dedc46b54806081cfe26523dea32dcaa43c53a66,Jellyfrog,2021-04-07 02:57:50 UTC,"Fix SQL injection in rediscover-device (#12716)

Closes #12697",true,false,false,false,false,false,false,false,1,1,1,1,271
cerberustesting/cerberus-source,0c033e035a0a6cfa7a2829e9a39a0346aa8a996c,Nouxx,2018-04-24 09:38:59 UTC,"Bulk Rename - backend

preStat management modification to avoid SQL injection
",false,false,true,true,false,false,false,false,2,0,2,0,72
expertiza/expertiza,2ae29be64a4188db6a1e702c7b93612710cfa8dd,Xinhao Zhang,2018-04-17 20:54:01 UTC,"fix possible sql injection problem
",true,false,false,false,false,false,false,false,4,4,3,3,238679
cerberustesting/cerberus-source,0382bf55b231a75626b1c2c62b94dae9fd581cd6,memiks,2014-05-06 13:42:06 UTC,"#171 Test Campaign

Add sanitize to prevent some SQL injection attacks",false,true,false,false,false,false,false,false,1,0,1,0,41
concrete5/concrete5,21370c32fc8e0812f96fce5406b7912dfb150bd9,Jordan Lev,2014-05-09 16:10:32 UTC,"escape $uID parameter in PageList::filterByUserID()

Avoid SQL Injection in case a developer passes a user-provided ID directly to this function.

Former-commit-id: 061ddf827e65e79efe0ff65eb85fd19a3ef12b3e",false,false,false,false,false,false,false,false,1,1,1,1,99181
HippieStation/HippieStation,f3cf3c5e2dea0e30690ba6851f419149d0532de5,Cyberboss,2018-01-30 02:54:19 UTC,"Revert ""Revert ""Fix sql injection""""

This reverts commit 23eeb4ac801ebc12ad1ab696ed60241c55e39df0.
",true,false,false,false,false,false,false,false,1,1,0,0,1
HippieStation/HippieStation,23eeb4ac801ebc12ad1ab696ed60241c55e39df0,Cyberboss,2018-01-30 02:53:16 UTC,"Revert ""Fix sql injection""

This reverts commit de4be23ff7e8cd75aeca09465fb7ebe5b35aaa1e.
",true,false,false,false,false,false,false,false,1,1,0,0,1
HippieStation/HippieStation,de4be23ff7e8cd75aeca09465fb7ebe5b35aaa1e,Jordan Brown,2018-01-30 02:51:19 UTC,Fix sql injection,true,false,false,false,false,false,false,false,1,1,0,0,318
DFEAGILEDEVOPS/MTC,580553eff3237c5561e685601f365ca93e73872d,George Chatzigiannis,2018-01-22 19:50:45 UTC,"Pin generation storing and partially authentication done (#397)

* Pin generation storing and partially authentication done

* test fix and property correction

* refactor to fetch all pupils at once

* refactor to prevent sql injection as per comment

* jwt changes

* fix authentication process

* fix test

* pin generation test updates

* fix complete check submission

* test refactoring progress

* fix secret error test

* jwt service test fix

* introduced batch update for pins, added todos to be discussed and other fixes

* included comment for improvement

* sql formatting

* increment migrations
",true,false,true,false,false,false,false,false,25,25,21,21,6236
cylc/cylc,558a5f63393da2689e71bab975a41540558d23c6,Matt Shin,2019-07-25 08:20:45 UTC,"Ignore Bandit's false positive for SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,9
ebmdatalab/openprescribing,c632bfb008ba3306615f804048f979b85524e267,Seb Bacon,2019-07-15 11:20:59 UTC,"Prevent SQL injection

Also name things more accurately, per code review feedback
",true,false,false,false,false,false,false,false,1,1,1,1,29
chanzuckerberg/idseq-web,5e0901a9bd161312cf8bb57004830ac32921f976,Tiago Carvalho,2019-07-01 17:15:27 UTC,"[Taxon Search] Search text on any part of the word and avoid SQL injection. (#2372)

* Search text on any part of the word.
Sanitize tax_levels to avoid SQL injection.

* Rubocop
",false,false,false,false,false,false,false,false,1,1,1,1,5158
frappe/frappe,4738a9711a40a49645946c8765e99da37394f94b,Saurabh,2018-11-28 04:52:30 UTC,"fix: tighten protection against sql injection (#6546)

",true,false,false,false,false,false,false,false,2,1,2,1,1289
frappe/frappe,856a721073122a8e487a13ba50b97a8b90916e12,Saurabh,2018-11-05 05:21:57 UTC,"[fix] sql injection fix (#6390)

",true,false,false,false,false,false,false,false,1,1,1,1,4033
hubzero/hubzero-cms,dc07ce84e9954b574c40c18cfda382bf606f9531,Patrick Mulligan,2018-11-24 23:34:15 UTC,"[fix] remove Solr term Suggester due to issues
The termSuggester was being flagged as having potential
sql injection attacks anytime a query with multiple quoted words
was separated with the words ""AND"" or ""OR"".

refs: https://habricentral.org/support/ticket/840
",true,true,true,true,false,false,false,false,1,1,1,1,6
georchestra/cadastrapp,493c783537a3e4af47ef1bc4be6df05959404ddf,pierre,2018-11-16 14:24:26 UTC,"Remove sort on coProprietaire information

Parameters in sql request for start and limit to avoid SQL injection
This fixes #289",true,false,false,false,false,false,false,false,2,2,2,2,216
catmaid/CATMAID,1b7048fbc591ef9f8b24e93816ebc3ccfef23c69,Tom Kazimiers,2020-02-11 16:16:40 UTC,"Upgrade Django from v3.0.2 to v3.0.3

This upgrade fixes a few issues and regressions in Django 3.0 that
include multiple crashes and a possibility of an SQL injection. We
haven't encountered any crashes, but the fixes are in components that we
use as well. See here for more details:

https://docs.djangoproject.com/en/3.0/releases/3.0.3/
",true,true,true,false,false,false,false,false,1,1,0,0,6000
folio-org/raml-module-builder,d1c2f8c97224c3c0e6d82eef06d59e46c5a5fca1,julianladisch,2020-02-05 13:17:30 UTC,"Merge pull request #612 from folio-org/RMB-563-update-sql-injection

RMB-563: SQL injection in PostgresClient.update by id",false,true,false,false,false,false,false,false,2,1,2,1,7195
alphagov/whitehall,2fb2c86289c2e669aec8efb320d6d8ad97cb1926,Graham Lewis,2020-02-03 16:35:02 UTC,"Handle Brakeman warning: Possible SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,35983
catmaid/CATMAID,a07852e7376976229cbd6202f159591f1f7da74b,Tom Kazimiers,2020-02-07 12:16:15 UTC,"Skeleton back-end: improve node-overview query construction

Let psycopg2 escape query parameters rather than formatting the query
string manually. Given that we cast the parameters to integers
beforehand, there was no risk for SQL injection, but the new version is
more consistent with the other queries and makes it easier to prevent
SQL injection in future changes.
",false,false,true,true,false,false,false,false,3,3,3,3,848
centreon/centreon,c2ec157d7f75f217da1ee0c7ddbc6207a8ac0ac7,loiclau,2020-06-15 13:09:32 UTC,"fix(security) fix sql injection on loadServiceFromHost (#8757)

",true,false,false,false,false,false,false,false,1,1,1,1,4538
chef/supermarket,94211b8a6f2d933707a3cb74aa2735e5f6f91214,Robb Kidd,2020-06-30 01:39:48 UTC,"resolve order() SQL injection warnings

Upgrade pg_search gem to support Rails 5.2. Resolves deprecation
warnings about needing Arel.sql objects when passing parameters to
search queries.[1]

Cookbook's ordered_by scope mostly needed some refactoring to use
Arel.sql objects instead of bare strings in the reorder() method. Moved
the hash for mapping of order options to order strings to a constant and
gave the default ""alphabetical by name"" a name. Update to return
Arel.sql objects.

[1] Released in v2.1.2 https://github.com/Casecommons/pg_search/commit/31ad3adf831c1971214c732665b58f1c716f226f

Signed-off-by: Robb Kidd <11cd4f9ba93acb67080ee4dad8d03929f9e64bf2@chef.io>
",false,true,true,true,false,false,false,false,5,5,4,4,222
apache/skywalking,fb7912c6bdda06a233f4b3e18e71a87d3e4a8951,yangy,2020-06-26 02:08:10 UTC,"fix fuzzy query sql injection (#4970)

",true,false,false,false,false,false,false,false,4,4,4,4,7966
centreon/centreon,9834a9ded2db55c1245f8176075668d2f631ac8f,loiclau,2020-06-12 09:31:16 UTC,"fix(security) fix sql injection on dead code (#8758)

* fix(security) fix sql injection on getServiceXML",true,false,true,true,false,false,false,false,8,8,6,6,1100
centreon/centreon,336c634a31373efdc84a8f947f1e8aa6522f34b4,Adrien Morais,2020-06-10 12:06:25 UTC,"fix(security): prevent SQL injections on eventLog pages (#8764)

* fix(security): prevent SQL injections on eventLog pages

* cleanup: cleaning trailing whitespaces

* codingstyle: Line exceeds 120 characters

* enh: take chapchap feedbacks into account

* coding style fixed

* Update www/include/eventLogs/viewLog.php

Co-authored-by: Laurent Calvet <da0dea13f581c96cfb39ca30bc0c7d6485296592@centreon.com>

* Update www/include/eventLogs/viewLog.php

Co-authored-by: Laurent Calvet <da0dea13f581c96cfb39ca30bc0c7d6485296592@centreon.com>

* Update www/include/eventLogs/viewLog.php

Co-authored-by: Laurent Calvet <da0dea13f581c96cfb39ca30bc0c7d6485296592@centreon.com>

* Update www/include/eventLogs/viewLog.php

Co-authored-by: Laurent Calvet <da0dea13f581c96cfb39ca30bc0c7d6485296592@centreon.com>

* Update www/include/eventLogs/viewLog.php

Co-authored-by: Laurent Calvet <da0dea13f581c96cfb39ca30bc0c7d6485296592@centreon.com>

* Update www/include/eventLogs/xml/data.php

Co-authored-by: Laurent Calvet <da0dea13f581c96cfb39ca30bc0c7d6485296592@centreon.com>

* take callapas feedbacks into account

* Update www/class/centreonHost.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/class/centreonHost.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/class/centreonHostgroups.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/class/centreonHostgroups.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/class/centreonService.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/class/centreonServicegroups.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/class/centreonInstance.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/class/centreonService.class.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* Update www/include/eventLogs/xml/data.php

Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>

* take kdu's feedback into account

* Update www/include/eventLogs/xml/data.php

Co-authored-by: sc979 <073b773926923b918e319f9841896c18740bf535@users.noreply.github.com>

* take sc979 feedback for default limit

* Update www/class/centreonHost.class.php

* Update www/class/centreonHostgroups.class.php

* Update www/class/centreonHost.class.php

* Update www/class/centreonInstance.class.php

* Update www/class/centreonServicegroups.class.php

* Update www/include/eventLogs/viewLog.php

* Update www/include/eventLogs/xml/data.php

* sc979: more details on function and use regexp

* sc979: odd indentation fixed

* sc979: handle -1 as poller id

* sc979: feedbacks taken into account

* Update www/class/centreonService.class.php

* Revert ""sc979: handle -1 as poller id""

This reverts commit fa3d559c0f2c419ac5f2bbb1d36bf4bc848e1620.

* Callapa: feedbacks

* callapa: rename returned variables

Co-authored-by: Laurent Calvet <da0dea13f581c96cfb39ca30bc0c7d6485296592@centreon.com>
Co-authored-by: Kevin Duret <13e1841ece2c34908d3f0ecef478e845bd3fefe5@centreon.com>
Co-authored-by: sc979 <073b773926923b918e319f9841896c18740bf535@users.noreply.github.com>
Co-authored-by: Laurent Calvet <f1b010126f61b5c59e7d5eb42c5c68f6105c5914@callapa.com>",true,true,true,true,false,false,true,false,7,7,7,7,141
find-sec-bugs/find-sec-bugs,0bf2bdb0258acd76ae1e8b68122f03b0956809ac,MaxNad,2016-07-14 20:14:05 UTC," SQL Injection (CWE 89) - Created SQL Injection detector and detector test for Scala Slick
",false,true,false,false,false,true,false,false,6,4,2,1,80
expertiza/expertiza,fa775cc1b2cfb68902042db139bf24447f25c1eb,Winbobob,2016-07-09 19:00:19 UTC,"Handle possible SQL injections.
",false,false,false,false,false,false,false,false,2,2,2,2,42
concourse/concourse,207891f97167dcce159abbefd9032bd7e47210af,Yucheng Tu,2016-07-29 22:18:27 UTC,"fix sql injections in team db

- team name should be case insensitive

[#127308481]

Signed-off-by: Yucheng Tu <84a3cda22a48c9e81f15e27384f15241ac826585@pivotal.io>
",true,false,false,false,false,false,false,false,9,6,9,6,291
ophrescue/RescueRails,0cb6e5700e32306e46ef99ce7cd6576c9fb3fd16,Shaun Butler,2017-10-19 17:19:07 UTC,"Fixes potential for sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,177
lotusbase/lotus.au.dk,ead0391d2602a75f78f145b9e4a58f0c0a81b002,Terry Mun,2017-10-25 20:46:33 UTC,"#21: Fixed potential possibility of SQL injection in API endpoint
",true,false,false,false,false,false,false,false,1,1,1,1,289
lotusbase/lotus.au.dk,2c4f8a760f3fe65e0fa932cf1ade75366111a933,Terry Mun,2017-10-25 20:48:05 UTC,"Merge pull request #23 from lotusbase/issue-21

#21: Fixed potential possibility of SQL injection in API endpoint",true,true,false,false,false,false,false,false,1,1,1,1,290
libvirt/libvirt,5ae2d9c25912d2f6e357e3d2d63aa0be7f35aa90,Ladi Prosek,2017-10-06 06:47:34 UTC,"hyperv: Escape WQL queries

The code was vulnerable to SQL injection. Likely not a security issue due to
WMI SQL and other constraints but still lame. For example:

  virsh # dominfo \""
  error: failed to get domain '""'
  error: internal error: SOAP fault during enumeration: code 's:Sender', subcode
  'n:CannotProcessFilter', reason 'The data source could not process the filter.
  The filter might be missing or it might be invalid. Change the filter and try
  the request again.  ', detail 'The WS-Management service cannot process the
  request. The WQL query is invalid. '

This commit fixes the Hyper-V driver by escaping all WMI SQL string parameters.

The same command with the fix:

  virsh # dominfo \""
  error: failed to get domain '""'
  error: Domain not found: No domain with name ""

Signed-off-by: Ladi Prosek <727f16b97cf99ec0710180d99386e4875fb7e2eb@redhat.com>
",true,false,true,false,false,false,true,false,5,5,3,3,0
renderpci/dedalo-4,82b2bd622c0256901e9be607c8adb4aaef1548f0,renderpci,2017-10-04 17:43:01 UTC,"Fix SQL injection in the login
",true,false,false,false,false,false,false,false,6,6,6,6,1
SpiderLabs/owasp-modsecurity-crs,4207ae0e88f06df9240d0e225dcc5b0c38ba9cc8,Christian Folini,2017-12-15 12:32:06 UTC,"Merge pull request #985 from emphazer/v3_942370_3.1/dev

Classic SQL injection probing rule split of rule 942370 (-> new rule 942490)",false,true,false,false,false,false,false,false,3,3,0,0,11399
aces/Loris,e7fcfb13de2a5575bfafde1be78050255e8874a2,David Blader,2017-12-20 19:11:42 UTC,"[Media] Fix SQL injection vulnerability (#3349)

Fixed query in media module to use a prepared statement.",true,false,false,false,false,false,false,false,1,1,0,0,69367
SpryServers/sprycloud-android,bffa619b28fba0d480ad2b996f248475b95c7aa5,Andy Scherzinger,2017-12-04 08:19:24 UTC,"Merge pull request #1820 from nextcloud/sql

Prevent sql injections",false,true,false,false,false,false,false,false,3,3,2,2,8298
qgis/QGIS,bf45c28f2e96382c80807ab4fe2e29ce103cd192,Blottiere Paul,2017-02-08 09:33:26 UTC,"[Server] add unit tests for sql injection
",false,true,false,false,false,false,false,false,4,0,1,0,12910
sequelize/sequelize,e22ce18db2bd52a7e60ee52865bfa5a994e8ab7a,Michael Kaufman,2017-02-07 16:37:03 UTC,"6935 remove order string syntax (#7220)

* Refactored support for ORDER BY clause so SQL injection is not possible.

* Adds sublime text files to gitignore.
Modified changelog to accurately represent changes to the order property.
Fixed lint issues.

* Added rejection with error where Order must be type of Array or instance of sequelize literal.

* Removed support for options.order accepting strings.
@TODO Look into plain objects with property raw
@TODO Update documentation and tests

* Removed all direct lodash and replaced them with Utils.
ie. `_.isPlainObject` is now `Utils._.isPlainObject`
find: `(?s)(?<!Utils\.)_\.`
replace : `Utils._.`

* Updates documentation for findAll order.

* Added removeTicks to addTicks in quoteIdentifier for each dialect.

* Added documentation for order by only an array.

* Added breaking change to changelog and renamed error to be more general.

@TODO: TESTS!

* Fixes bad code when checking if the order is valid.

* Updated unit tests.

* Should incorporate all integration tests.

* Update changelog.md capitalize Sequelize

* Changes everything in query generator to use lodash outside of utils.

* Instead of checking if the order object is an instance of a Utils member we just see if `_.isSequelizeMethod` is truthy.

* Removing escapeId because it is no longer used.

* Instead of removing ticks, we should escape them.

* Instead of removing ticks, we should escape them. (reverted from commit e4dade0a18be85dfaf8f91f1210bc0b5bedcb31a)

* Removes support for `._isSequelizeMethod` because it can be spoofed.  Instead, use instanceof.
",true,true,true,false,false,false,true,false,4,4,4,4,447
sequelize/sequelize,c12b36b8d3e06c2eba1aa3362467f3fa8175a597,Michael Kaufman,2017-02-07 09:09:33 UTC,"6935 remove order string syntax (#7160)

* Refactored support for ORDER BY clause so SQL injection is not possible.

* Adds sublime text files to gitignore.
Modified changelog to accurately represent changes to the order property.
Fixed lint issues.

* Added rejection with error where Order must be type of Array or instance of sequelize literal.

* Removed support for options.order accepting strings.
@TODO Look into plain objects with property raw
@TODO Update documentation and tests

* Removed all direct lodash and replaced them with Utils.
ie. `_.isPlainObject` is now `Utils._.isPlainObject`
find: `(?s)(?<!Utils\.)_\.`
replace : `Utils._.`

* Updates documentation for findAll order.

* Added removeTicks to addTicks in quoteIdentifier for each dialect.

* Added documentation for order by only an array.

* Added breaking change to changelog and renamed error to be more general.

@TODO: TESTS!

* Fixes bad code when checking if the order is valid.

* Updated unit tests.

* Should incorporate all integration tests.

* Update changelog.md capitalize Sequelize

* Changes everything in query generator to use lodash outside of utils.

* Instead of checking if the order object is an instance of a Utils member we just see if `_.isSequelizeMethod` is truthy.

* Removing escapeId because it is no longer used.

* Instead of removing ticks, we should escape them.

* Instead of removing ticks, we should escape them. (reverted from commit e4dade0a18be85dfaf8f91f1210bc0b5bedcb31a)
",true,true,true,false,false,false,true,false,27,13,22,8,
bobintetley/asm3,1fbe701b1c688c73eb801e7e8282e4307e6c28fa,Robin Rawson-Tetley,2016-01-19 17:19:40 UTC,"19/01/16 Add XSS sanitise hooks to db.ds #358, 19/01/16 Fix potential unicode SQL injection/XSS via ds/decode_html #358
",true,true,false,false,false,false,false,false,6,6,5,5,110
ManageIQ/manageiq,480a37535c45f5285a281fd66317b7d9e5ebeb9d,Joe Rafaniello,2016-09-08 20:22:21 UTC,"Merge pull request #10906 from chrisarcand/metric-common-sql-injection

Remove Metric::Common#v_find_min_max (SQL injection)",false,true,false,false,false,false,false,false,3,3,2,2,1606
ManageIQ/manageiq-ui-classic,52d1c9b1211923d75b21ecbade451c015c3e173b,Joe Rafaniello,2016-09-08 20:22:21 UTC,"Merge pull request #10906 from chrisarcand/metric-common-sql-injection

Remove Metric::Common#v_find_min_max (SQL injection)(transferred from ManageIQ/manageiq@480a37535c45f5285a281fd66317b7d9e5ebeb9d)
",false,true,false,false,false,false,false,false,-1,-1,-1,-1,1606
moonlight-stream/moonlight-android,7594e51a1869557f461205a18e3d825d0283cbcd,Cameron Gutman,2016-01-06 21:17:30 UTC,"Fix SQL injection vulnerability and crashes when an apostrophe is present in a computer name
",true,false,false,false,false,false,false,false,1,1,1,1,129
derUli/ulicms,26e7e5acf044137cd9e99a295062a0c99c4410eb,Ulrich Schmidt,2016-01-26 18:38:56 UTC,"SQL Injection fixed
",true,false,false,false,false,false,false,false,1,1,1,1,12798
fossology/fossology,6dffead7c9b23aec931dad5c71ec65245d3452be,steffen-weber,2016-01-21 07:33:32 UTC,"Merge pull request #619 from timurphy/security_read_permission-tmurphy

fix(security) SQL injection vulnerability in read_permission",true,true,false,false,false,false,false,false,1,1,1,1,3
fossology/fossology,f62cb78c6ebf730e3c205e2852a562549c5458c2,Tim Murphy,2016-01-21 04:30:07 UTC,"fix(security) SQL injection vulnerability

The `read permission` function used by command line tools does not sanitize inputs before using them in SQL statements. This change uses the DbManager class instead, passing the inputs as parameters. This does not change any functionality; it only removes this SQL injection vulnerability.
",true,false,true,true,false,false,false,false,1,1,1,1,187
lobbywatch/lobbywatch,fcd31633826fc302c2ad6e24406db3fba20acc82,scito,2017-05-27 14:36:01 UTC,"Remove oldauswerting, prone to SQL injection
",false,true,false,false,false,false,false,false,112,111,15,14,289
frappe/erpnext,62c7deee00a8a61942c1434164a4597ce52e7594,Saurabh,2017-05-11 12:33:12 UTC,"[fix] don't allow string values in limits to avoid sql injection (#8779)

",true,true,false,false,false,false,false,false,1,1,1,1,4358
domoticz/domoticz,3c9ee86678b3252e8c277d1bdffd7d2087bd48e5,wez3,2017-05-05 20:28:07 UTC,"Prevent SQL injections and buffer overflows
",true,false,false,false,false,false,false,false,1,1,1,1,5796
hashicorp/terraform,79903cd7ea88f90d4d5e65befa77c2e831d4c79a,Radek Simko,2017-05-19 15:59:15 UTC,"provider/aws: Allow updating tuples in WAF SQLInjectionMatchSet + no tuples (#14667)

* provider/aws: Allow updating tuples in WAF SQL Injection Match Set

* provider/aws: Allow WAF SQL Injection match set with no tuples
",false,true,false,false,false,false,false,false,2,1,2,1,117
fission/fission,990d943f21eda078f4fb7899f7cc47facd819edc,Ta-Ching Chen,2017-05-30 21:19:22 UTC,"Retrieve function logs from controller (#207)

Establish a proxy server from the controller to the log database.

Redirect query commands send from client to database then proxy back the db response.

Use parameter binding instead of fmt.Sprintf to prevent SQL injection.
",false,false,true,true,false,false,false,false,7,7,6,6,99259
alphagov/e-petitions,9cbd8cbf3827109d5f6999474c81afb6f402fc1f,Andrew White,2018-10-31 03:27:48 UTC,"Refactor SQL building to avoid false positive

Brakeman sees the array as a possible SQL injection attack so concatenate
a string instead which it correctly sees as static interpolation.
",true,false,true,true,false,false,false,false,1,1,1,1,14
airslie/renalware-core,a793a73365f767272d92aa34692214fa0beb9e70,Tim Crowe,2018-10-11 10:57:35 UTC,"Fix potential SQL injection in letter scopes
",true,false,false,false,false,false,false,false,1,1,1,1,51
berkmancenter/mediacloud,5a26e9c17a88d0d7a4da8427229c4aaca24c583e,Linas Valiukas,2018-10-23 13:52:27 UTC,"Cast ""rows"" to int

$rows is interpolated as a variable in _fetch_list() (assuming it's an int) without any kind of escaping which might lead to SQL injection.
",false,true,false,false,false,false,false,false,1,1,1,1,253
berkmancenter/mediacloud,1c44913cbd2f91d6c5ecb458fb5887b3bbc66b78,Linas Valiukas,2018-10-23 14:29:38 UTC,"Cast some parameters to int to get rid of some SQL injection potential

Some functions that get run from controller actions interpolate the parameters directly (as variables) as opposed to passing them as database query parameters.
",false,false,true,true,false,false,false,false,15,15,15,15,37
podlove/podlove-publisher,96dd8862eeda663b6edd1daca542347aac867991,eteubert,2016-09-15 14:20:10 UTC,"security: fix sql injection
",true,false,false,false,false,false,false,false,3,3,2,2,1841
OCSInventory-NG/OCSInventory-ocsreports,465e0e3047848af79fa9896d94eb89564bf0de8b,RudyLaurent,2021-03-26 16:05:02 UTC,"Fix SQL injection in all computers
",true,false,false,false,false,false,false,false,1,1,1,1,1
OpenSID/OpenSID,54d5d34b86342617380e6642646743ceb3d5a14a,Eddie Ridwan,2021-03-20 23:17:39 UTC,"Tutup celah SQL injection di tampilan analisis di Web. [security-fix]
",false,false,false,false,false,false,false,false,2,2,1,1,76
OCA/l10n-brazil,56ad838ac02a832e9578af4dae1aca5867d77dfc,Raphaël Valyi,2021-03-14 15:26:58 UTC,"no more lint false positive SQL injection warning

Makes pylint happy. But note that
there were no possible SQL injection even in the previous
code as the brazil_country_id was a database id and not any
kind of user input.
",false,false,false,false,false,false,false,false,1,1,1,1,4923
OpenSID/OpenSID,a27f3db1428bff7c864e0e0ada5277e6366e64e3,Mochamad Arifin,2021-03-23 16:18:04 UTC,"Fix Possible Blind/Boolean-Based SQL Injection
",true,false,false,false,false,false,false,false,1,1,1,1,
Azure/azure-sdk-for-java,c32c3c6782cf4c664d604f60a2813afe99feff7f,Kushagra Thapar,2021-03-02 20:03:29 UTC,"Fixed spring data cosmos sql injection risks (#19559)

",true,false,false,false,false,false,false,false,2,2,2,2,7063
adaptris/interlok,8c581a66fad0516041355b2c616a621c88ac0189,Lewin Chan,2021-03-17 08:15:18 UTC,"LGTM supports SuppressWarnings annotations.

- Add suppressing for sql-injection where we are
proxying java.sql.Connection
- Switch a bunch of things that have specific query-ids to
be suppressed.
",false,false,false,false,false,false,false,false,14,14,14,14,895
openfoodfoundation/openfoodnetwork,31098218d238f15095d604f6dd9c770938fcadc4,Luis Ramos,2019-05-28 09:32:27 UTC,"Merge pull request #3856 from Drumstickx/master

Fixed sql injection vulnerability in users_and_enterprises_report.",true,true,false,false,false,false,false,false,1,1,1,1,2
openfoodfoundation/openfoodnetwork,ec2db4dd2a9472532a5cb5b07bb0072182ba6830,Drumstickx,2019-05-19 15:56:54 UTC,"Fixed sql injection vulnerability in users_and_enterprises_report.
",true,false,false,false,false,false,false,false,1,1,1,1,
lionixevolve/LionixCRM,721bdf5b04767ae803c09adf11694da156c47577,d.brown,2019-05-30 10:16:18 UTC,"Merge branch 'fix/events_1' into 'hotfix-7.10.x'

Fix possible SQL injection

See merge request product/suitecrm!47",true,true,false,false,false,false,false,false,1,1,1,1,1
lionixevolve/LionixCRM,5baad0b48e59a33d818e4d198119a6c1c498da58,d.brown,2019-05-30 10:14:43 UTC,"Merge branch 'fix/reassignUserRecords_1' into 'hotfix-7.10.x'

Fixed SQL Injection: reassignUserRecords.php

See merge request product/suitecrm!39",true,true,false,false,false,false,false,false,1,1,1,1,0
lionixevolve/LionixCRM,a828daf08b6aac63fcf3ea1e6b79ea09ec4b9ade,d.brown,2019-05-30 10:14:34 UTC,"Merge branch 'fix/inboundemail' into 'hotfix-7.10.x'

Fixed SQL Injection: InboundEmail.php

See merge request product/suitecrm!37",true,true,false,false,false,false,false,false,1,1,1,1,51
salesagility/SuiteCRM,a828daf08b6aac63fcf3ea1e6b79ea09ec4b9ade,d.brown,2019-05-30 10:14:34 UTC,"Merge branch 'fix/inboundemail' into 'hotfix-7.10.x'

Fixed SQL Injection: InboundEmail.php

See merge request product/suitecrm!37",true,true,false,false,false,false,false,false,1,1,1,1,51
salesagility/SuiteCRM,5baad0b48e59a33d818e4d198119a6c1c498da58,d.brown,2019-05-30 10:14:43 UTC,"Merge branch 'fix/reassignUserRecords_1' into 'hotfix-7.10.x'

Fixed SQL Injection: reassignUserRecords.php

See merge request product/suitecrm!39",true,true,false,false,false,false,false,false,1,1,1,1,0
salesagility/SuiteCRM,721bdf5b04767ae803c09adf11694da156c47577,d.brown,2019-05-30 10:16:18 UTC,"Merge branch 'fix/events_1' into 'hotfix-7.10.x'

Fix possible SQL injection

See merge request product/suitecrm!47",true,true,false,false,false,false,false,false,1,1,1,1,1
openstack/ironic-inspector,9d107900b2e0b599397b84409580d46e0ed16291,Zane Bitter,2019-05-14 19:39:19 UTC,"Eliminate SQL injection vulnerability in node_cache

In node_cache.find_node() we were constructing a raw SQL query using
unescaped data that came in on the wire. This presented an SQL injection
vulnerability. To avoid this, use the query builder from SQLAlchemy to
ensure that any input strings are correctly escaped.

Change-Id: I2b0ffa307ec1aa57538733f2e454d2d7e994d656
Story: #2005678
Task: 30992
",true,false,false,false,false,false,false,false,3,2,2,1,
openstack/ironic-inspector,0ac77190e54a74b1b7ade52f8774b81acafd0257,Zuul,2019-05-21 14:35:28 UTC,"Merge ""Eliminate SQL injection vulnerability in node_cache""",true,true,false,false,false,false,false,false,3,2,2,1,1453
jonsito/AgilityContest,1ceb23e2148d8256381df405a0af12c909ef84f1,Juan Antonio Martinez,2019-05-24 07:02:25 UTC,"Fix duplicated name detection in Clubes/Pruebas/jornadas

Just to avoid sql injection and related errors

Notice that Dogs and Handlers shouldn't be checked for duplicated
as duplicates may exist :-( ..... perhaps a warning on handlers...
",true,false,false,false,false,false,false,false,4,4,4,4,15495
Cvolton/GMDprivateServer,06017573aba12f000371c2eef42e681d451617f1,Cvolton,2017-04-08 19:01:59 UTC,"SQL injection patch
",false,false,false,false,false,false,false,false,1,1,1,1,162
TerraMA2/terrama2,46cbffd611f575208f0e1a6c05a7250c810ce489,janosimas,2017-04-28 11:29:46 UTC,"improved filter by value and sql injection protections
",false,false,true,true,false,false,false,false,3,3,1,1,1116
TerraMA2/terrama2,81a7603d86aa6fb8f254d129188172147e6a6e73,Jano Simas,2017-04-28 14:04:15 UTC,"Merge pull request #968 from janosimas/master

	improved filter by value and sql injection protections",false,true,false,false,false,false,false,false,3,3,1,1,4
OpenGamePanel/OGP-Website,d2dc443111a80352ce3b626fc2c9a1cbec7a7bae,DieFeM,2018-07-23 11:57:18 UTC,"Fixes to prevent SQL injection on API.
",true,false,false,false,false,false,false,false,1,1,1,1,522
MarkUsProject/Markus,38c4c61ef26d4b267b16acd36fcbcbb93cce35ec,PkHutch,2018-07-03 15:52:09 UTC,"SQL Injection Fixes #2 (#3429)

Fix SQL Injection possibility in collection.where call.
",true,false,false,false,false,false,false,false,1,1,1,1,14023
centreon/centreon,a1a1eaa1e8f5bb20c2d140d584852218fd1a4518,Stéphane C.979,2018-07-06 11:43:51 UTC,"fix(sec): Fix SQL injection from metrics RPN's field (#6356)
",true,false,false,false,false,false,false,false,1,1,1,1,16031
folio-org/raml-module-builder,54478ffb1dffab2b87660ecbd8c57d89a2c4f9d3,Julian Ladisch,2019-05-21 13:19:29 UTC,"RMB-199: Single quote SQL Injection in PostgresClient.delete(table, pojo, handler)
",false,false,false,false,false,false,false,false,2,1,2,1,853
folio-org/raml-module-builder,c5b84a0f6be45e42ff0185dd60e0e3cc76d3eaa9,julianladisch,2019-05-22 20:49:09 UTC,"Merge pull request #424 from folio-org/RMB-199-PostgresClient.delete-sql-injection

RMB-199: Single quote SQL Injection in PostgresClient.delete",false,true,false,false,false,false,false,false,3,2,2,1,9
folio-org/raml-module-builder,a4c663f57bb4c9f2678b951c2ae3c709bede3844,Julian Ladisch,2019-05-22 20:40:05 UTC,"Merge branch 'master' into RMB-199-PostgresClient.delete-sql-injection
",false,true,false,false,false,false,false,false,13,9,3,1,2
folio-org/raml-module-builder,199d896ffcbc85f03851acac721b0eda06a5bfff,Julian Ladisch,2019-05-27 12:47:01 UTC,"RMB-379: wrong masking of Criteria.setValue(Object) results in SQL Injection

There are three ways to call Criteria.setValue(Object):

setValue(""'"" + value.replace(""'"", ""''"") + ""'"");
setValue(""'"" + value + ""'"");
setValue(value);

The first one is always correct and will never result in any SQL injection.

The second and the third one are prone to SQL injection if value may contain single quotes.

The documentation does not mention the first way.

My proposal is to replace setValue(Object) by setVal(String) where setVal(String) will
only accept the third way. Internally it will always wrap the value in single quotes
and mask any containing single quotes by duplicating them.

This prevents SQL injection and is also the most easy way to invoke. The new method name
will trigger compile errors. This forces developers
* to replace setValue by setVal and
* to remove any single quote adding.

I don't see a reason why one would like to pass in an Object. We may add setValObject(Object)
or similar methods lateron if needed.
",true,false,true,true,false,false,false,false,6,3,6,3,161
folio-org/raml-module-builder,1e8da73784a69af4ebfd6784332c571310c0647d,Julian Ladisch,2019-05-22 11:19:20 UTC,"Merge branch 'master' into RMB-199-PostgresClient.delete-sql-injection
",false,true,false,false,false,false,false,false,134,84,84,62,885
catmaid/CATMAID,f5ff07cfd1a58c2157f5499ac02ec7a8322fb875,Tom Kazimiers,2019-08-04 22:01:45 UTC,"Upgrade Django from v2.1.10 to v2.1.11

This fixes a few security issues, including a possible SQL injection
with JSONField, which we use. More details here:

https://docs.djangoproject.com/en/2.2/releases/2.1.11/
",true,true,true,false,false,false,false,false,1,1,0,0,3291
derUli/ulicms,1a60c87d4b9121a4b0fc7ed949a6e19036a71b6e,Ulrich Schmidt,2016-06-06 09:53:09 UTC,"fixed potential sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,5863
ebmdatalab/openprescribing,48bcb2a7bfa46ee5acfd5794c7bbdb747fdf097b,Seb Bacon,2016-06-13 10:40:34 UTC,"Guard against SQL injection attacks

This uses a whitelist as column names aren't legal locations for the use
of bind variables.
",false,false,false,false,false,false,false,false,2,1,2,1,135
Weasyl/weasyl,88b94137ab977d1a41f5e3bc5326fd308365645e,Charmander,2016-06-17 03:17:00 UTC,"Feel safer with sql_number_list

It was sitting on the ledge of SQL injection.
",false,false,false,false,false,false,false,false,1,1,1,1,23
UniTime/unitime,008623106489d5818c9daa56818bbc35abd1150f,tomas-muller,2016-06-09 21:16:35 UTC,"Security: Posible SQL Injection Fixed

- Instructional Offerings: Search, Worksheet PDF
- Instructors: Manage Instructors List
- Buildings: Update Rooms
",true,false,false,false,false,false,false,false,4,4,4,4,4394
centreon/centreon,d95d855ae392102ab7fa20bc13139e6fed50a485,Maximilien Bersoult,2015-06-29 09:42:24 UTC,"* [WEB-331] Modify queries for protect SQL injection
",false,false,false,false,false,false,false,false,20,20,20,20,4
blabla1337/skf-flask,40ced98049d1e7750088d0e5de9c2c67721892c4,blabla1337,2015-06-12 17:23:34 UTC,"Merge pull request #48 from mgijsbertihodenpijl/master

Code example SQL injection Java",false,true,true,false,false,false,false,false,1,1,0,0,2
intel-hpdd/intel-manager-for-lustre,4e36b48e8a1e044d1272d1bbb7a648e84def4071,Brian J. Murrell,2015-06-22 18:05:41 UTC,"HYD-4490 Limit chroma-config to root

A checkmarx scan revealed chroma-config has 4 SQL Injection
vulnerabilities where we read input user input directly from
the command line without an escaping or sanitization step.

Limit chroma-config to be run by only root to mitiate the
exposure.  Disclaimer: this mitigation only really applies to
systems where root is already omnipotent and is neutralized on
systems where anyone can be root because security is locked
down with SELinux rather than limiting root access.

Signed-off-by: Brian J. Murrell <2a8f564cbb80211e19c0a14fed38a451599c042f@intel.com>
Change-Id: I51d544e2e72ff70f916c937c3556d84f9bfb2530
Reviewed-on: http://review.whamcloud.com/15378
Tested-by: Jenkins
Tested-by: Chroma Test User <a0b98b2ff5154776fa24760ef410655af7a8b56c@intel.com>
Reviewed-by: Chris Gearing <149a3c4298d99c315fc555357d57d2940923ba5f@intel.com>
Reviewed-by: Joe Grund <5a0004131f5af71cc30270f318d2c30ba7aaa99a@intel.com>
Reviewed-on: http://review.whamcloud.com/15387
",true,false,false,false,false,false,false,false,1,1,0,0,63
blabla1337/skf-flask,1c3df8c9ba7ab9b9b6fbb8136a72668b1d5c0bea,Martijn Gijsberti Hodenpijl,2015-06-12 07:20:08 UTC,"Code example SQL injection
",false,false,true,false,false,false,false,false,1,1,0,0,
hubzero/hubzero-cms,ca24bfde8eb4988c504de4a7e9822ab947b08f55,Kevin Wojkovich,2015-06-22 19:51:32 UTC,"[COM_CITATION] Escape all tags to prevent SQL injection.
",false,false,true,false,false,false,false,false,1,1,1,1,91
hubzero/hubzero-cms,c16e6bbd5611144e1f4a54878fcdeb3c0a5c66e7,Shawn Rice,2015-06-23 20:53:54 UTC,"[PLG_RESOURCES_USAGE] Fixing SQL injection issue with timestamp
",true,false,false,false,false,false,false,false,1,1,1,1,10
centreon/centreon,6dc4a49e709b4a0cda6a53a2887c43843d68ecb4,Kevin Duret,2015-06-01 11:30:42 UTC,"Fix sql injection on centreon bam module
",true,false,false,false,false,false,false,false,1,1,1,1,259
bywatersolutions/ByWater-KOHA,57b01fb655955ac630d6018d03f4d134e7e3e25a,Chris Cormack,2015-06-18 20:35:07 UTC,"Bug 14412: SQL injection possible

There is a SQL Injection vulnerability in the
/cgi-bin/koha/opac-tags_subject.pl script.

By manipulating the variable 'number', the database can be accessed
via time-based blind injections.

The following string serves as an example:

/cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)

To exploit the vulnerability, no authentication is needed

To test
1/ Turn on mysql query logging
2/ Hit /cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
3/ Check the logs notice something like
  SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1
  PROCEDURE ANALYSE
  (EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
4/ Apply patch
5/ Hit the url again
6/ Notice the log now only has
   SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@koha-community.org>
Signed-off-by: Katrin Fischer <eb5a7ed6178886f9a3c70794f3de5f89db9dcb5f@bsz-bw.de>
Confirmed the problem and the fix for it.
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,false,true,false,false,false,true,false,1,1,1,1,92839
colinsc/koha,57b01fb655955ac630d6018d03f4d134e7e3e25a,Chris Cormack,2015-06-18 20:35:07 UTC,"Bug 14412: SQL injection possible

There is a SQL Injection vulnerability in the
/cgi-bin/koha/opac-tags_subject.pl script.

By manipulating the variable 'number', the database can be accessed
via time-based blind injections.

The following string serves as an example:

/cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)

To exploit the vulnerability, no authentication is needed

To test
1/ Turn on mysql query logging
2/ Hit /cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
3/ Check the logs notice something like
  SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1
  PROCEDURE ANALYSE
  (EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
4/ Apply patch
5/ Hit the url again
6/ Notice the log now only has
   SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@koha-community.org>
Signed-off-by: Katrin Fischer <eb5a7ed6178886f9a3c70794f3de5f89db9dcb5f@bsz-bw.de>
Confirmed the problem and the fix for it.
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,false,true,false,false,false,true,false,1,1,1,1,92839
bywatersolutions/bws-package,57b01fb655955ac630d6018d03f4d134e7e3e25a,Chris Cormack,2015-06-18 20:35:07 UTC,"Bug 14412: SQL injection possible

There is a SQL Injection vulnerability in the
/cgi-bin/koha/opac-tags_subject.pl script.

By manipulating the variable 'number', the database can be accessed
via time-based blind injections.

The following string serves as an example:

/cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)

To exploit the vulnerability, no authentication is needed

To test
1/ Turn on mysql query logging
2/ Hit /cgi-bin/koha/opac-tags_subject.pl?number=1+PROCEDURE+ANALYSE+(EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
3/ Check the logs notice something like
  SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1
  PROCEDURE ANALYSE
  (EXTRACTVALUE(9743,CONCAT(0x5c,(BENCHMARK(5000000,MD5('evil'))))),1)
4/ Apply patch
5/ Hit the url again
6/ Notice the log now only has
   SELECT entry,weight FROM tags ORDER BY weight DESC LIMIT 1

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@koha-community.org>
Signed-off-by: Katrin Fischer <eb5a7ed6178886f9a3c70794f3de5f89db9dcb5f@bsz-bw.de>
Confirmed the problem and the fix for it.
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@unc.edu.ar>
",true,false,true,false,false,false,true,false,1,1,1,1,92839
colinsc/koha,d8bccd612638c4728f561972daf7f70d49d263a5,Jonathan Druart,2015-06-22 08:56:26 UTC,"Bug 14426: Escape or use placeholders for sql parameters

Does this patch enough to prevent sql injection in borrowers_out.pl?

====================================================================
1. ""Criteria"" Parameter, Payload: ELT(1=1,'evil') / ELT(1=2,'evil')
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=2,'evil')""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=1,'evil')""
| nc testbox 9002

====================================================================
2. ""Filter"" Parameter, Payload: P_COM'+AND+'a'='a / P_COM'+AND+'a'='b
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='a""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='b""
| nc testbox 9002

====================================================================

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@theke.io>
",false,false,false,false,false,false,true,false,1,1,1,1,31
bywatersolutions/ByWater-KOHA,d8bccd612638c4728f561972daf7f70d49d263a5,Jonathan Druart,2015-06-22 08:56:26 UTC,"Bug 14426: Escape or use placeholders for sql parameters

Does this patch enough to prevent sql injection in borrowers_out.pl?

====================================================================
1. ""Criteria"" Parameter, Payload: ELT(1=1,'evil') / ELT(1=2,'evil')
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=2,'evil')""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=1,'evil')""
| nc testbox 9002

====================================================================
2. ""Filter"" Parameter, Payload: P_COM'+AND+'a'='a / P_COM'+AND+'a'='b
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='a""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='b""
| nc testbox 9002

====================================================================

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@theke.io>
",false,false,false,false,false,false,true,false,1,1,1,1,31
bywatersolutions/bws-package,d8bccd612638c4728f561972daf7f70d49d263a5,Jonathan Druart,2015-06-22 08:56:26 UTC,"Bug 14426: Escape or use placeholders for sql parameters

Does this patch enough to prevent sql injection in borrowers_out.pl?

====================================================================
1. ""Criteria"" Parameter, Payload: ELT(1=1,'evil') / ELT(1=2,'evil')
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=2,'evil')""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
186\r\n\r\nFilter=P_COM&Filter=&Limit=&output=file&basename=Export&MIME=CSV&sep=%3B&report_name=&do_it=1&userid=<username>&password=<password>&branch=&koha_login_context=intranet&Criteria=ELT(1=1,'evil')""
| nc testbox 9002

====================================================================
2. ""Filter"" Parameter, Payload: P_COM'+AND+'a'='a / P_COM'+AND+'a'='b
====================================================================

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='a""
| nc testbox 9002

echo -ne ""POST /cgi-bin/koha/reports/borrowers_out.pl
HTTP/1.1\r\nHost: testbox:9002\r\nContent-Length:
183\r\n\r\nkoha_login_context=intranet&Limit=&Criteria=branchcode&output=file&basename=Export&MIME=CSV&sep=;&report_name=&do_it=1&userid=<userid>&password=<password>&branch=&Filter=P_COM'+AND+'a'='b""
| nc testbox 9002

====================================================================

Signed-off-by: Chris Cormack <chrisc@catalyst.net.nz>

Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
Signed-off-by: Tomas Cohen Arazi <63ac9f6777fb741d62c33cd73a438a8ce82c7d4a@theke.io>
",false,false,false,false,false,false,true,false,1,1,1,1,31
OpenConext/OpenConext-engineblock,54c48e1bee269a0913e0c7c3faa04c3668332b30,Nic Wortel,2017-03-27 14:19:34 UTC,"Update zendframework/zendframework1 from v1.12.16 to v1.12.20

This mitigates a number of CVE's:

 * CVE-2016-6233: Potential SQL injection in ORDER and GROUP statements of Zend_Db_Select
   http://framework.zend.com/security/advisory/ZF2016-02

 * Potential Information Disclosure and Insufficient Entropy vulnerability in Zend\Captcha\Word
   http://framework.zend.com/security/advisory/ZF2015-09

 * Potential Insufficient Entropy Vulnerability in ZF1
   http://framework.zend.com/security/advisory/ZF2016-01

 * Potential SQL injection in ORDER and GROUP functions of ZF1
   https://framework.zend.com/security/advisory/ZF2016-03
",true,true,false,false,false,false,false,false,1,1,0,0,107
bobintetley/asm3,067da9018ed62aeb3ab62c2cf7205b97e36b4687,Robin Rawson-Tetley,2017-03-08 08:51:36 UTC,"minor sql injection bug
",true,false,false,false,false,false,false,false,2,2,2,2,866
OCA/reporting-engine,949b8d31cd6d91bca2183291f8f2ef216f555520,Andrea,2017-03-06 08:48:49 UTC,"[MIG+IMP] bi_view_editor: Migration to v10 + enhancements

* Add menu items creation feature
* Added selection of fields of a tree view
* Improved usability and strings made translatable
* Avoid display duplicated nodes
* Robustness
* Updated Dutch translation
* Avoid possible sql injection in bi_view_editor
* Removed deprecated RegistryManager
",false,false,true,false,false,false,false,false,81,80,10,9,4
find-sec-bugs/find-sec-bugs,ef0b854c0bb4ad9f32c892fb96b5ae593d7cdcaa,Philippe Arteau,2017-01-03 19:27:33 UTC,"Merge pull request #253 from h3xstream/master

Turbine SQL injections",false,true,false,false,false,false,false,false,31,20,26,15,1158
bywatersolutions/bws-package,e2d1bafa22f213658fc040d541534299c126bd1b,Kyle M Hall,2017-01-30 11:52:56 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 8924439054fec94acabef6045f21369117e528f0.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5601
colinsc/koha,4dc7c32a3db11db2a3862e4979e62db23b2a208c,Kyle M Hall,2017-01-30 12:12:08 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 904716f581102887c27d5bfc727430564cc12284.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,19
bywatersolutions/ByWater-KOHA,e2d1bafa22f213658fc040d541534299c126bd1b,Kyle M Hall,2017-01-30 11:52:56 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 8924439054fec94acabef6045f21369117e528f0.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5601
bywatersolutions/ByWater-KOHA,4dc7c32a3db11db2a3862e4979e62db23b2a208c,Kyle M Hall,2017-01-30 12:12:08 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 904716f581102887c27d5bfc727430564cc12284.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,19
bywatersolutions/bws-package,4dc7c32a3db11db2a3862e4979e62db23b2a208c,Kyle M Hall,2017-01-30 12:12:08 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 904716f581102887c27d5bfc727430564cc12284.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,19
colinsc/koha,e2d1bafa22f213658fc040d541534299c126bd1b,Kyle M Hall,2017-01-30 11:52:56 UTC,"Revert ""Bug 17902: Fix possible SQL injection in serials editing""

This reverts commit 8924439054fec94acabef6045f21369117e528f0.

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5601
bywatersolutions/ByWater-KOHA,8924439054fec94acabef6045f21369117e528f0,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
colinsc/koha,8924439054fec94acabef6045f21369117e528f0,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
bywatersolutions/bws-package,8924439054fec94acabef6045f21369117e528f0,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
bywatersolutions/ByWater-KOHA,904716f581102887c27d5bfc727430564cc12284,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
colinsc/koha,b0bb1b0aa60071950a39b1c1b9e9ec145b304086,Jonathan Druart,2017-01-13 15:46:51 UTC,"Bug 17904: Fix possible SQL injection in late orders

To recreate:
/cgi-bin/koha/acqui/lateorders.plop=send_alert&ordernumber=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5
bywatersolutions/bws-package,b0bb1b0aa60071950a39b1c1b9e9ec145b304086,Jonathan Druart,2017-01-13 15:46:51 UTC,"Bug 17904: Fix possible SQL injection in late orders

To recreate:
/cgi-bin/koha/acqui/lateorders.plop=send_alert&ordernumber=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5
bywatersolutions/ByWater-KOHA,179ff58b0980f348821c727c2fa79a5eca310901,Jonathan Druart,2017-01-13 15:40:59 UTC,"Bug 17903: Fix possible SQL injection in serial claims

To recreate:
/cgi-bin/koha/serials/claims.pl?serialid=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,21
bywatersolutions/bws-package,179ff58b0980f348821c727c2fa79a5eca310901,Jonathan Druart,2017-01-13 15:40:59 UTC,"Bug 17903: Fix possible SQL injection in serial claims

To recreate:
/cgi-bin/koha/serials/claims.pl?serialid=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,21
bywatersolutions/ByWater-KOHA,f42dbd67d1b960906fd2b98560e7e3724452bce9,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>
Signed-off-by: Tomas Cohen Arazi <tomascohen@theke.io>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
colinsc/koha,904716f581102887c27d5bfc727430564cc12284,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
bywatersolutions/bws-package,904716f581102887c27d5bfc727430564cc12284,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
bywatersolutions/ByWater-KOHA,b0bb1b0aa60071950a39b1c1b9e9ec145b304086,Jonathan Druart,2017-01-13 15:46:51 UTC,"Bug 17904: Fix possible SQL injection in late orders

To recreate:
/cgi-bin/koha/acqui/lateorders.plop=send_alert&ordernumber=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,5
colinsc/koha,f42dbd67d1b960906fd2b98560e7e3724452bce9,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>
Signed-off-by: Tomas Cohen Arazi <tomascohen@theke.io>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
bywatersolutions/bws-package,f42dbd67d1b960906fd2b98560e7e3724452bce9,Jonathan Druart,2017-01-10 17:06:51 UTC,"Bug 17902: Fix possible SQL injection in serials editing

/cgi-bin/koha/serials/serials-edit.pl?serstatus=*/+,2,3,'2016-12-12','2016-12-12',6,'jjj7','jjj8'%20--%20-&subscriptionid=1+and+1%3d2+Union+all+select+111+/*

The SQL query is not constructed correctly, placeholders must be used.
Subscription id and status list can be provided by the user.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Nick Clemens <nick@bywatersolutions.com>
Signed-off-by: Tomas Cohen Arazi <tomascohen@theke.io>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,133
colinsc/koha,179ff58b0980f348821c727c2fa79a5eca310901,Jonathan Druart,2017-01-13 15:40:59 UTC,"Bug 17903: Fix possible SQL injection in serial claims

To recreate:
/cgi-bin/koha/serials/claims.pl?serialid=1)and%20(select*from(select(sleep(20)))a)--%20&letter_code=0

Notice the delay.

The SQL query is not constructed correctly, placeholders must be used.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,1,1,1,1,21
bywatersolutions/bws-package,45cffd874c62c7b090390c5fb3c955c31f524608,Jonathan Druart,2017-01-13 16:03:41 UTC,"Bug 17901: Fix possible SQL injection in shelf editing

It has been reported that
/cgi-bin/koha/opac-shelves.pl?op=edit&referer=view&shelfnumber=146&owner=4&shelfname=testX&sortfield=titleaaaaaa\`&category=1

Could lead to SQL injection
Actually it explodes because the generated SQL query is not correctly formated.

However it would be good to limit the possible values for sortfield.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,2,2,2,2,16
colinsc/koha,45cffd874c62c7b090390c5fb3c955c31f524608,Jonathan Druart,2017-01-13 16:03:41 UTC,"Bug 17901: Fix possible SQL injection in shelf editing

It has been reported that
/cgi-bin/koha/opac-shelves.pl?op=edit&referer=view&shelfnumber=146&owner=4&shelfname=testX&sortfield=titleaaaaaa\`&category=1

Could lead to SQL injection
Actually it explodes because the generated SQL query is not correctly formated.

However it would be good to limit the possible values for sortfield.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,2,2,2,2,16
bywatersolutions/ByWater-KOHA,45cffd874c62c7b090390c5fb3c955c31f524608,Jonathan Druart,2017-01-13 16:03:41 UTC,"Bug 17901: Fix possible SQL injection in shelf editing

It has been reported that
/cgi-bin/koha/opac-shelves.pl?op=edit&referer=view&shelfnumber=146&owner=4&shelfname=testX&sortfield=titleaaaaaa\`&category=1

Could lead to SQL injection
Actually it explodes because the generated SQL query is not correctly formated.

However it would be good to limit the possible values for sortfield.

This vulnerability has been reported by MDSec.

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,false,false,false,false,false,false,2,2,2,2,16
find-sec-bugs/find-sec-bugs,74631a0178d959c09e5e27bcea36543b580cbf41,Philippe Arteau,2017-01-05 15:25:44 UTC,"Merge pull request #254 from MaxNad/sqli

SQL Injection (CWE-89) - Scala Slick & Scala Anorm injection detectors",false,true,false,false,false,true,false,false,14,10,8,5,1416
find-sec-bugs/find-sec-bugs,3a773e5eff093c68687589db87a391b7536aab78,Philippe Arteau,2017-01-02 21:49:33 UTC,"Add sink file for Turbine SQL injections #238
",false,true,false,false,false,false,false,false,12,9,9,6,4473
colinsc/koha,a70980d8255a66c33539926796c06b29b26fbb40,Jonathan Druart,2017-01-13 16:43:25 UTC,"Bug 17900: Fix possible SQL injection in patron cards template editing

To recreate:
/cgi-bin/koha/patroncards/edit-template.pl?op=edit&element_id=23%20and%201%3d2+union+all+select+1,user(),@@version+--%20

Look at the Profile dropdown list.

To fix this problem and to make sure it does not appears anywhere else
in the label and patroncards modules, I have refactored the way the
queries are built in C4::Creators::Lib
Now all of the subroutine takes a hashref in parameters with a 'fields'
and 'filters' parameters.
From these 2 parameters the new internal subroutine _build_query will
build the query and use placeholders.

Test plan:
1/ Make sure you do not recreate the vulnerability with this patch
applied.
2/ With decent data in the labels and patroncards modules, compare all
the different view (undef the New and Manage button groups) with and
without this patch applied.
=> You should not see any differences.

This vulnerability has been reported by MDSec.

Signed-off-by: Chris Cormack <chris@bigballofwax.co.nz>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,true,true,false,false,false,false,10,10,9,9,35
bywatersolutions/ByWater-KOHA,a70980d8255a66c33539926796c06b29b26fbb40,Jonathan Druart,2017-01-13 16:43:25 UTC,"Bug 17900: Fix possible SQL injection in patron cards template editing

To recreate:
/cgi-bin/koha/patroncards/edit-template.pl?op=edit&element_id=23%20and%201%3d2+union+all+select+1,user(),@@version+--%20

Look at the Profile dropdown list.

To fix this problem and to make sure it does not appears anywhere else
in the label and patroncards modules, I have refactored the way the
queries are built in C4::Creators::Lib
Now all of the subroutine takes a hashref in parameters with a 'fields'
and 'filters' parameters.
From these 2 parameters the new internal subroutine _build_query will
build the query and use placeholders.

Test plan:
1/ Make sure you do not recreate the vulnerability with this patch
applied.
2/ With decent data in the labels and patroncards modules, compare all
the different view (undef the New and Manage button groups) with and
without this patch applied.
=> You should not see any differences.

This vulnerability has been reported by MDSec.

Signed-off-by: Chris Cormack <chris@bigballofwax.co.nz>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,true,true,false,false,false,false,10,10,9,9,35
bywatersolutions/bws-package,a70980d8255a66c33539926796c06b29b26fbb40,Jonathan Druart,2017-01-13 16:43:25 UTC,"Bug 17900: Fix possible SQL injection in patron cards template editing

To recreate:
/cgi-bin/koha/patroncards/edit-template.pl?op=edit&element_id=23%20and%201%3d2+union+all+select+1,user(),@@version+--%20

Look at the Profile dropdown list.

To fix this problem and to make sure it does not appears anywhere else
in the label and patroncards modules, I have refactored the way the
queries are built in C4::Creators::Lib
Now all of the subroutine takes a hashref in parameters with a 'fields'
and 'filters' parameters.
From these 2 parameters the new internal subroutine _build_query will
build the query and use placeholders.

Test plan:
1/ Make sure you do not recreate the vulnerability with this patch
applied.
2/ With decent data in the labels and patroncards modules, compare all
the different view (undef the New and Manage button groups) with and
without this patch applied.
=> You should not see any differences.

This vulnerability has been reported by MDSec.

Signed-off-by: Chris Cormack <chris@bigballofwax.co.nz>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Kyle M Hall <3c25b01657254677d3e1a8fd1f0742c5d489bd39@bywatersolutions.com>
",true,false,true,true,false,false,false,false,10,10,9,9,35
FH-Complete/FHC-Core,67af91fc521e0b093b71a205408c561323e04f90,Andreas Österreicher,2010-06-09 09:21:14 UTC,"- Scrollposition im Tempus bleibt erhalten
- Raumvorschlag zeigt nun auch Räume mit Kollisionen an (steuerbar über max_kollision)
- Semesterplan zeigt nun auch die Zeitsperren der Lektoren an
- Markieren von mehreren Stunden im Tempus unterstützt jetzt STRG und SHIFT
- Löschen von mehreren (markierten) Lehreinheiten möglich
- CSV Export für Uniflow Drucksystem
- SQL Injection Fixes
",true,false,false,false,false,false,false,false,17,17,15,15,1432
backdrop-ops/backdrop-pantheon,d297ac7464fd8a307910052d7e391ae6588f9451,Dries Buytaert,2010-06-01 09:24:09 UTC,"- Patch #811776 by Heine: regresssion of SA-2006-005 - SQL Injection via db_query_range().
",false,false,false,false,false,false,false,false,4,4,0,0,255
mde/ejs,584c7b95939b5001065f147b175dc2ae59b34690,mde,2010-06-05 06:14:56 UTC,"Esacpe input for basic protection from SQL injection. Small fix for data results by col position instead of named props.
",true,false,false,false,false,false,false,false,1,1,1,1,568
librenms/librenms,802bfbd109a70bc22b6b3b30c977a66004003258,Tom Laermans,2010-06-10 20:17:41 UTC,"yeeha sql injection fixes

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@1138 61d68cd4-352d-0410-923a-c4978735b2b8
",true,false,false,false,false,false,false,false,1,1,1,1,4
etf-sarajevo/zamger,da7ed8d950c34372dd87ea378b9f9060c44235e9,Vedran Ljubovic,2010-06-04 12:28:03 UTC,"studentska/anketa: Ispravljeno vise SQL Injection propusta; omoguceno 
kreiranje vise anketa u akademskoj godini; popravljeno editovanje ankete 
(datum se uvijek vracao na danasnji); sitne ispravke, nasa slova, 
poravnanje itd.

",false,false,false,false,false,false,false,false,1,1,1,1,59
etf-sarajevo/zamger,7dfb77679d324f2b60e9042034c6b17b75cd99e3,Vedran Ljubovic,2010-06-04 12:52:54 UTC,"izvjestaj/chart_semestralni: Popravljen SQL Injection, pociscen kod (avg 
funkcija), dodan ispis vrijednosti iznad kolone

",false,false,false,false,false,false,false,false,1,1,1,1,5
etf-sarajevo/zamger,4cf1669f984f8d73ba6fc45f6cbc4a6ff4f6b6a6,Vedran Ljubovic,2010-06-04 13:12:03 UTC,"izvjestaj/po_smjerovima_linijski nista ne valja, studiji su 
hardcodirani... Za sada ga disablujem i popravljam SQL injection

",false,false,false,false,false,false,false,false,2,2,2,2,9
qgis/QGIS,860fb23e36245369907a815da41d4067dec2b6ee,Alessandro Pasotti,2020-04-23 10:17:09 UTC,"Server little cleanup (class documentation)

Plus removed sql injection protection from
sanitize because:

1. it was not required: the value goes into a QgsExpression and it's
never sent to a provider directly
2. it could have been misused with the wrong assumption that
it was robust implementation (it wasn't)
",true,false,true,false,false,false,false,false,5,4,2,1,3103
gautamkrishnar/nothing-private,051b1096a798b98bcab27470a7d588a32529ad0b,Gautam krishna.R,2017-07-11 05:54:14 UTC,Merge branch 'master' into sql-injection-fix,true,true,false,false,false,false,false,false,16,16,0,0,2632
hubzero/hubzero-cms,32e634767b29565d550e5622a4a80b48736eb063,Shawn Rice,2017-07-19 12:12:05 UTC,"[CORE] Bumping framework. Brings in fix for SQL injection in Group methods
",true,false,false,false,false,false,false,false,1,1,0,0,7058
govCMS/govCMS,45e04c3bcf497b5ef4bb40edd3edf5a81e1b5050,Toby Bellwood,2017-07-04 03:47:05 UTC,"Merge pull request #516 from tobybellwood/services320

SA-CONTRIB-2017-054 - Services - Critical - SQL Injection",false,true,false,false,false,false,false,false,1,1,0,0,7063
fogbeam/zeppelin_mirror,709c5a70a8f37277c9eea0a1c0c9195b5eb21a74,Yanbo Liang,2017-07-12 07:25:05 UTC,"[ZEPPELIN-2769] Prevent SQL injection for GetUserList.getUserList.

### What is this PR for?
Prevent SQL injection for ```GetUserList.getUserList```.

### What type of PR is it?
Improvement

### What is the Jira issue?
https://issues.apache.org/jira/browse/ZEPPELIN-2769

Author: Yanbo Liang <ybliang8@gmail.com>

Closes #2487 from yanboliang/zeppelin-2769 and squashes the following commits:

d1a7ff9b [Yanbo Liang] Prevent SQL injection for GetUserList.getUserList.
",true,false,false,false,false,false,false,false,1,1,1,1,8693
dpgaspar/Flask-AppBuilder,2158db051408e0d66210a99b17c121be008e20b6,Daniel Gaspar,2017-07-12 09:51:28 UTC,"#544 prevent possible sql injection on order by args
",true,false,false,false,false,false,false,false,2,2,2,2,6745
dpgaspar/Flask-AppBuilder,b80fe7449ec3616f5ca0a462f17aeed511db84dc,Daniel Vaz Gaspar,2017-07-12 10:23:56 UTC,"Merge pull request #546 from dpgaspar/hotfix-sqlinjection-on-orderby

Prevent possible sql injection on order by args",true,true,false,false,false,false,false,false,2,2,2,2,32
gautamkrishnar/nothing-private,b4682ed87e9aa2a02f1f179cffc08e49e647d3c4,Gautam krishna.R,2017-07-11 05:54:34 UTC,"Merge pull request #19 from electron-volt/sql-injection-fix

SQL injection fix",true,true,false,false,false,false,false,false,4,4,2,2,0
dpgaspar/Flask-AppBuilder,46770c6aa017b3466b7b523050002592635d25eb,Daniel Vaz Gaspar,2017-07-13 20:39:55 UTC,"Merge pull request #549 from dpgaspar/hotfix-sqlinjection-rework

#544 fix for possible sql injection on order by clauses",true,true,false,false,false,false,false,false,3,3,3,3,1317
dpgaspar/Flask-AppBuilder,0379d552fa3a4d7cd63592d5738af9a4eabf4cb6,Daniel Gaspar,2017-07-12 22:42:45 UTC,"#544 fix for possible sql injection on order by clauses
",true,false,false,false,false,false,false,false,3,3,3,3,378
yajra/laravel-datatables,53071262c444cb77fbcded47ac18dde33c6db9e9,Arjay Angeles,2018-07-06 01:06:03 UTC,"Add validation for order direction.
Prevent possible SQL injection.
",false,true,false,false,false,false,false,false,1,1,1,1,47492
yajra/laravel-datatables,2521ff84fd05f3014e9276be6166924e9c5e7a33,Arjay Angeles,2018-07-06 01:19:49 UTC,"Merge branch '8.0'

* 8.0:
  Bump v8.7.1 :rocket:
  Fix phpunit configuration warning.
  Fix orderable column test.
  Add validation for order direction. Prevent possible SQL injection.
",true,true,false,false,false,false,false,false,4,3,2,1,0
ministryofjustice/advocate-defence-payments,731fb600156332012ee3ea321a8dcd44729ae969,ColinBruce,2019-02-28 12:12:10 UTC,"Move the arel into the string interpolation

Brakeman doesn't count arel around the strings as 'safe'
enough to prevent SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,17
phacility/phabricator,eb73cb68ff5b6ae131c9e11bf56d0cfeb6bbd7b7,epriestley,2019-02-13 14:37:49 UTC,"Raise a setup warning when locked configuration has a configuration value stored in the database

Summary:
Ref T13249. See <https://discourse.phabricator-community.org/t/configuring-the-number-of-taskmaster-daemons/2394/>.

Today, when a configuration value is ""locked"", we prevent //writes// to the database. However, we still perform reads. When you upgrade, we generally don't want a bunch of your configuration to change by surprise.

Some day, I'd like to stop reading locked configuration from the database. This would defuse an escalation where an attacker finds a way to write to locked configuration despite safeguards, e.g. through SQL injection or policy bypass. Today, they could write to `cluster.mailers` or similar and substantially escalate access. A better behavior would be to ignore database values for `cluster.mailers` and other locked config, so that these impermissible writes have no effect.

Doing this today would break a lot of installs, but we can warn them about it now and then make the change at a later date.

Test Plan:
  - Forced a `phd.taskmasters` config value into the database.
  - Saw setup warning.
  - Used `bin/config delete --database phd.taskmasters` to clear the warning.
  - Reviewed documentation changes.
  - Reviewed `phd.taskmasters` documentation adjustment.

Reviewers: amckinley

Reviewed By: amckinley

Maniphest Tasks: T13249

Differential Revision: https://secure.phabricator.com/D20159
",false,false,true,false,false,true,false,false,3,3,2,2,83
NaosProject/Naos.Database,59486f1bed0cc090df0e7d39d4970fc939c834eb,Suraj Gupta,2015-04-22 14:41:54 UTC,"prevent SQL Injection in encryptor name
",true,false,false,false,false,false,false,false,1,1,1,1,0
NaosProject/Naos.Database,9b3a04c452c48cfb7d584e3e0b581ee239c82d0f,Suraj Gupta,2015-04-22 19:27:51 UTC,"protect backup name/description against SQL injection
",false,false,true,false,false,false,false,false,1,1,1,1,1
PlanningBiblio/PlanningBiblio,bd2e8ef8c8ceccad3596f842fe734af28a84b5a1,Jérôme Combes,2015-04-01 10:00:19 UTC,"Corrige les vulnérabilités ""SQL Injection"" dans le fichier planning/ajax.updateCell.php
Création des fonctions db::escapeString et db::selectInnerJoin
Correction des fonctions db::insert2, select2, update2 et delete2
",true,false,false,false,false,false,false,false,2,2,2,2,867
NaosProject/Naos.Database,34646d8e9af3fcd31a7cbf2a982bda0c7b8df057,Suraj Gupta,2015-04-22 19:26:16 UTC,"allow space character when doing SQL injection check
",false,true,false,false,false,false,false,false,11,7,6,4,284
PlanningBiblio/PlanningBiblio,398915e9f7d9fc190460af802dddb63a33ff4767,Jérôme Combes,2015-04-01 19:31:31 UTC,"Correction des vulnérabilités SQL Injection sur setup/*, absences/*, activites/* authentification.php et index.php
",true,false,false,false,false,false,false,false,9,9,9,9,571
PlanningBiblio/PlanningBiblio,b98cf2363f70d16fe9dc46073334b88c00953053,Jérôme Combes,2015-04-02 11:20:31 UTC,"Correction des vulnérabilités SQL Injection sur personnel/*
planning/poste/ajax.menudiv.php
Affichage  d'informations en haut du planning avec les variables
$_GET['msg'] et $_GET['msgType'] (msgType=error/success)
",true,false,false,false,false,false,false,false,11,11,10,10,949
PlanningBiblio/PlanningBiblio,90ea0c218f45af80485894dc2891a048897c4d5b,Jérôme Combes,2015-04-03 16:49:58 UTC,"Correction des vulnérabilités SQL Injection (fin)
",true,false,false,false,false,false,false,false,33,33,32,32,1769
bkimminich/juice-shop,93f26318fb51150e3535be204bc9773c25c2e3dd,Bjoern Kimminich,2017-11-09 21:09:04 UTC,"Change back login email field to `type=""text""`

to keep allowing easy SQL Injection attacks
",false,true,false,false,false,false,false,false,1,1,0,0,25
chanzuckerberg/idseq-web,8b5ec961ef4258098c28f439fda0a585ab65a050,sadelokiki,2017-11-21 21:55:47 UTC,"Susan/removeduplicate (#339)

* Remove duplicate

* Rubocop fixes

* Escape query param to avoid sql injection
",true,false,true,true,false,false,false,false,1,1,1,1,52
centreon/centreon,b76dc493706770bc3ea9379d9484bf8cd448c370,MatthieuMan,2017-11-21 09:56:54 UTC,"fix(mon)vunerability in customViews_MASTER

Update SQL query to prevent SQL injection in setRotate form

Refs: MON-2129
",true,true,false,false,false,false,false,false,1,1,1,1,9650
One-Shift/BO3-BOzon,cce94f4da0ba587f84c0c58a5fed0e659afe8101,Carlos Santos,2017-11-21 14:26:10 UTC,"protection against mysql injection

",false,false,false,false,false,false,false,false,1,1,1,1,7441
OCA/l10n-switzerland,ee0fdf8eee78ef84898e5a8957bc799b42393a22,Yannick Vaucher,2017-11-27 17:54:49 UTC,"Bypass wrong positive sql-injection pylint error as operator is already safely checked
",true,false,false,false,false,true,false,false,1,1,1,1,18869
SpryServers/sprycloud-android,0dc26336137463929f3b8d1a85765cf11edcc1e4,tobiaskaminsky,2017-11-20 12:15:16 UTC,"Prevent sql injections
",true,false,false,false,false,false,false,false,3,3,2,2,129
Azure/azure-quickstart-templates,80685315846c5336307eac1d496880eb6b48b8e5,Brian Moore,2020-09-09 14:53:12 UTC,"Merge pull request #8103 from MCKLMT/101-SQL-Injection-Attack-Prevention

Update API version on 101-SQL-Injection-Attack-Prevention",false,true,false,false,false,false,false,false,9,9,0,0,1
MushroomObserver/mushroom-observer,f7a3fbc952a7225fd9b342c22e21af0255b927b9,Jason,2020-09-06 17:00:01 UTC,"Trying a possible fix for a bogus SQL injection warning.
",false,false,false,false,false,false,false,false,1,1,1,1,24
zaproxy/zap-extensions,e10a9096b82fe6e37059ff956d1f17207292f1fe,colm.p.oflaherty@gmail.com,2013-06-23 20:46:27 UTC,"- added a new sql injection detection technique: expression based.
- added logic to reduce false positives
- added logic to allow injections in LIKE statements to be discovered
- re-prioritised the order of the checks to improve efficiency, minimise potential negative changes to the database, and improve accuracy
- added support for the AlertThreshold option, which has the effect of disabling the error-based technique, which is prone to false positives.
- added a custom decoder method, to work around issues with the AbstractPlugin decoder, which throws Exceptions on parameter values such as ""%"" (without the quotes)
- raise an ""Authentication Bypass"" alert if a SQL injection is discovered on page flagged on a login page, and included in that context.
- reverted the ""attack"" field to contain the actual attack parameter used, as this may not otherwise be available, and is necessary.
- improved the support for checking both the unstripped and stripped versions of the output (where ""stripping"" is the process of removing the parameter value from the resulting HTML output)
- improved the information output in the ""extra info"" field, when information is available that is useful in manually re-producing the attack.
- added improved debug information in some cases
- improved accuracy in the wavsep test suite as a result of the changes above. 
- only a relatively small number of the wavsep test cases are not detectable using this scanner, and the RDBMS-specific scanner (MySQL, in this case), can typically detect the remainder.  ",true,true,true,true,false,false,false,false,1,0,1,0,12
zaproxy/zap-extensions,64daf270824f7f9ddc975b61c692488d3de17dd8,colm.p.oflaherty@gmail.com,2013-06-20 22:20:59 UTC,"revert the scanner name for all the RDBMS specific sql injection scanners to their original names, since they are not necessarily time based (and in any event, if an alert is found using a time based approach, the scanners in question all set the alert title to include the words ""Time Based"", so this should not be set in the scanner name in the props file). ",true,false,false,false,false,false,false,false,1,1,0,0,2920
zaproxy/zap-extensions,4df71b027c2d244211e44200f77168cc0c67cf58,colm.p.oflaherty@gmail.com,2013-06-23 20:30:56 UTC,Support latest round of changes to the MySQL sql injection scanner,false,true,false,false,false,false,false,false,1,1,0,0,4201
zaproxy/zap-extensions,9fc51cca238bfb29d88cf82bb68965b93f4af633,colm.p.oflaherty@gmail.com,2013-06-23 20:32:11 UTC,Support latest round of changes to the generic sql injection scanner,false,true,false,false,false,false,false,false,1,1,0,0,1
sequelize/sequelize,c876192aa6ce1f67e22b26a4d175b8478615f42d,Benjamin Woodruff,2013-06-15 03:24:59 UTC,"Fix string escaping for sqlite

SQLite was defaulting to the MySQL backslash-escaped style, but it uses
postgres-style escaping. This is a SQL-injection vulnerability, and
shouldn't be taken lightly (although SQLite is mostly for testing).
",true,false,true,false,false,false,false,false,1,1,1,1,
zaproxy/zap-extensions,80a37d5a2547e55d0333b66273750ba7f493652e,colm.p.oflaherty@gmail.com,2013-06-20 22:29:07 UTC,"reprioritise checks based on the common case, and to minimise the risk of blatting the database if sqli exists.
add some additional checks that do not include SQL comments, in case this caused invalid syntax, or in case comments are filtered out.
add some spaces that were needed to make for valid sql syntax.
handle the scenario where the base request takes a long time to return the first time it is queried (which was causing the time based logic to fail in cases where a sql injection point exists).
add a little leeway on the additional 5000ms that the request should take if it is vulnerable to sql injection.
modify the number of requests allowed at different attack intensity levels, to align more cleanly with the type of attack actually performed.",true,false,true,false,false,false,false,true,1,1,1,1,8
opencart/opencart,26ef13df3e9ad3547c4617e75f034f2cc018ee3d,Petr Heinz,2017-07-28 19:49:13 UTC,"Fix possible SQL injection vulnerability

should fix vulnerability to SQL injection via multi-byte attack when improper character set will is set at the server level,
see http://php.net/manual/en/mysqlinfo.concepts.charset.php for details",true,false,true,false,false,false,false,false,1,1,1,1,
opencart/opencart,c1cc6d0fc93cfc8f132e5550979d6441f6a056b9,Daniel Kerr,2017-07-29 07:15:44 UTC,"Merge pull request #5812 from PetrHeinz/patch-1

Fix possible SQL injection vulnerability",true,true,false,false,false,false,false,false,1,1,1,1,2297
sgmap/tps,ed11ee4fb4724b0465d862c2748b957209e25e19,Mathieu Magnin,2017-07-20 12:51:57 UTC,"Fix SQL injections
",true,false,false,false,false,false,false,false,3,3,3,3,7
sgmap/tps,825c8ff575d619f0bd8f3a084afacdc7511deeb4,gregoirenovel,2017-07-20 16:28:06 UTC,"Merge pull request #617 from sgmap/fix_sql_injections

Fix SQL injections",true,true,false,false,false,false,false,false,3,3,3,3,1588
centreon/centreon,a5f8342be4bc0618a78248196628fbb72dd37f27,Loic Laurent,2017-04-20 15:59:05 UTC,"* Security Fix : SQL injections on api config objects
",true,false,false,false,false,false,false,false,1,1,1,1,229
centreon/centreon,382a7c90c27da3569f26160086b4f1b086ae2dc8,loiclau,2017-04-24 16:08:30 UTC,"* fix sql injection in downtime api
",true,false,false,false,false,false,false,false,1,1,1,1,26
centreon/centreon,5b1576c3e3254e85affa33c8373b9d9d35c1fafb,Guillaume28,2017-04-25 09:25:20 UTC,"Prevent SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,48762
fossology/fossology,6eba537fc64d2b3b8a3eafed9e05bc9ce2cccf8d,Shaheem Azmal M MD,2017-04-07 11:49:31 UTC,"Merge pull request #782 from max-wittig/dev/input-validation

fix(search): don't allow SQL injection, check numeric for SizeMin and SizeMax
review-by: 322ec48253366b6c3a0c2948516eeca6282860ab@siemens.com
tested-by: 929b129f9fbc0932ee7d827adad9e2821329844d@siemens.com",true,true,false,false,false,false,false,false,1,1,1,1,79
centreon/centreon,6ae0156a54b35602d741b80a5e50e72b12db93d0,Kevin Duret,2017-04-24 13:01:44 UTC,"avoid sql injection when setting a downtime
",true,false,false,false,false,false,false,false,1,1,1,1,18
centreon/centreon,94678752286be07ad0bdd6bfb119b92bdf825305,Kevin Duret,2017-04-24 09:50:17 UTC,"avoid sql injection in ldapsearch page
",true,false,false,false,false,false,false,false,1,1,1,1,87
centreon/centreon,5f383845b191c29b8f941f4d823b0c052a3f21e8,Kevin Duret,2017-04-24 13:04:18 UTC,"avoid sql injection when setting a downtime
",true,false,false,false,false,false,false,false,1,1,1,1,2
centreon/centreon,dca31bf42d9189c40fd89a0fe9b9db5ecc5f8dfa,Kevin Duret,2017-04-24 09:54:30 UTC,"avoid sql injection in ldapsearch page
",true,false,false,false,false,false,false,false,1,1,1,1,4
centreon/centreon,a740019afed0af2aa80b6bda5a26b7aca893e1ad,loiclau,2017-04-24 14:53:13 UTC,"* fix sql injection in command api
",true,false,false,false,false,false,false,false,2,2,2,2,42
bobintetley/asm3,25ac33eda8ca16151ef8833edea12ca40c934d56,Robin Rawson-Tetley,2017-04-07 08:12:51 UTC,"prevent sql injection on flag searches
",true,false,false,false,false,false,false,false,2,2,2,2,963
domainmod/domainmod,0bbbf05a2592e625236140663c21b1d779b436e3,Greg Chetcuti,2017-04-23 05:46:04 UTC,"Update the formatForMysql method

Escape the list of domains to help prevent SQL injections
",false,true,true,false,false,false,false,false,4,4,4,4,142
flatCore/flatCore-CMS,ffba98e3afac36fd69f91e21047b2847c7a1e162,Patrick,2017-04-12 06:26:05 UTC,"Prevent SQL Injection on User Database

- https://github.com/flatCore/flatCore-CMS/issues/29
",true,false,false,false,false,false,false,false,6,6,6,6,7
grafana/grafana,a55be07ea52546568d45540c1d0a0c4a3e9f1e48,Alexander Zobnin,2017-11-17 07:50:35 UTC,"dashboard history clean up: avoid potential SQL injections
",false,false,true,true,false,false,false,false,1,1,1,1,1147
centreon/centreon,642ee380e5e0a8e2efb7444cd35b6df49cb86b61,Kevin Duret,2020-09-10 13:40:35 UTC,"fix(sec): avoid sql injection in downtimes page (#8952)

Refs: MON-5913",true,false,false,false,false,false,false,false,2,2,2,2,1797
berkmancenter/mediacloud,5e90057ddd704c3155b4bcaa5fea1f9c4220522d,Hal Roberts,2020-04-10 21:20:16 UTC,"fix sql injection vulnerability in postgres source seed queries
",true,false,false,false,false,false,false,false,2,2,2,2,88
RobBikmansurov/BPDoc,ea2cdcedd20ce9bbd0c028633dfeebf7a0451553,Бикмансуров Р.М,2020-04-28 06:42:08 UTC,"build: fix: fix possible SQL injection
",true,true,false,false,false,false,false,false,4,4,2,2,1440
RobBikmansurov/BPDoc,6a955fdec48d9bd9bd00c0ca169294530fe323f1,Бикмансуров Р.М,2020-04-27 06:41:47 UTC,"fix: frix error with sanitized possible SQL injection
",true,false,false,false,false,false,false,false,4,4,2,2,4452
RobBikmansurov/BPDoc,7f97275e200ade056d4bd6d4b99446061d123c5e,Rob Bikmansurov,2020-04-22 15:09:11 UTC,"style: fix possible SQL injection
",false,false,true,false,false,false,false,false,4,4,3,3,23027
antonraharja/playSMS,a6b6baf705bab94c18b76f46f6f962d79b06efa2,Anton Raharja,2013-05-14 16:52:20 UTC,"fix how playSMS handle magic_quote_gpc option OFF, again ^^ this will fix most security related to SQL injection (pls feedback)
",true,false,false,false,false,false,false,false,1,1,1,1,622
SonarSource/sonarqube,08257f901822eba9bc060ea3b9b391f314d13218,Simon Brandhof,2013-06-23 22:38:08 UTC,"SONAR-4278 SQL Injection in measure filters
",false,false,false,false,false,false,false,false,2,1,2,1,3281
facebook/mysql-5.6,318077c4f9d57e106eecd15c5e84ffeacbc799c5,Sujatha Sivakumar,2013-06-24 05:41:55 UTC,"Bug#16753869:INCORRECT TRUNCATION OF LONG SET EXPRESSION IN
LOAD DATA CAN CAUSE SQL INJECTION

Problem:
=======
A long SET expression in LOAD DATA is incorrectly truncated
when written to the binary log.

Analysis:
========
LOAD DATA statements are reconstructed once again before
they are written to the binary log. When SET clauses are
specified as part of LOAD DATA statement, these SET clause
user command strings need to be stored as it is inorder to
reconstruct the original user command.  At present these
strings are stored as part of SET clause item tree's
top most Item node's name itself which is incorrect. As an
Item::name can be of MAX_ALIAS_NAME (256) size. Hence the
name will get truncated to ""255"".

Because of this the rewritten LOAD DATA statement will be
terminated incorrectly.  When this statment is read back by
the mysqlbinlog tool it reads a starting single quote and
continuos to read till it finds an ending quote. Hence any
statement written post ending quote will be considered as
a new statement.

Fix:
===
As name field has length restriction the string value
should not be stored in Item::name.  A new String list is
maintained to store the SET expression values and this list
is read during reconstrution.",true,false,true,true,false,false,false,false,4,4,2,2,44928
MariaDB/server,ce29ca8b766b7ef9f7996fefa9b8fd231b3618d4,Sujatha Sivakumar,2013-06-24 05:41:55 UTC,"Bug#16753869:INCORRECT TRUNCATION OF LONG SET EXPRESSION IN
LOAD DATA CAN CAUSE SQL INJECTION

Problem:
=======
A long SET expression in LOAD DATA is incorrectly truncated
when written to the binary log.

Analysis:
========
LOAD DATA statements are reconstructed once again before
they are written to the binary log. When SET clauses are
specified as part of LOAD DATA statement, these SET clause
user command strings need to be stored as it is inorder to
reconstruct the original user command.  At present these
strings are stored as part of SET clause item tree's
top most Item node's name itself which is incorrect. As an
Item::name can be of MAX_ALIAS_NAME (256) size. Hence the
name will get truncated to ""255"".

Because of this the rewritten LOAD DATA statement will be
terminated incorrectly.  When this statment is read back by
the mysqlbinlog tool it reads a starting single quote and
continuos to read till it finds an ending quote. Hence any
statement written post ending quote will be considered as
a new statement.

Fix:
===
As name field has length restriction the string value
should not be stored in Item::name.  A new String list is
maintained to store the SET expression values and this list
is read during reconstrution.

sql/sql_lex.cc:
  Clear the load data set string list during each query 
  execution.
sql/sql_lex.h:
  Added a new String list to store the load data operation's
  SET clause user command strings.
sql/sql_load.cc:
  Read the SET clause user command strings from load data
  set string list.
sql/sql_yacc.yy:
  Store the SET caluse user command string as part of load
  data set string list.
",true,true,true,true,false,false,false,false,4,4,2,2,68981
MariaDB/server,318077c4f9d57e106eecd15c5e84ffeacbc799c5,Sujatha Sivakumar,2013-06-24 05:41:55 UTC,"Bug#16753869:INCORRECT TRUNCATION OF LONG SET EXPRESSION IN
LOAD DATA CAN CAUSE SQL INJECTION

Problem:
=======
A long SET expression in LOAD DATA is incorrectly truncated
when written to the binary log.

Analysis:
========
LOAD DATA statements are reconstructed once again before
they are written to the binary log. When SET clauses are
specified as part of LOAD DATA statement, these SET clause
user command strings need to be stored as it is inorder to
reconstruct the original user command.  At present these
strings are stored as part of SET clause item tree's
top most Item node's name itself which is incorrect. As an
Item::name can be of MAX_ALIAS_NAME (256) size. Hence the
name will get truncated to ""255"".

Because of this the rewritten LOAD DATA statement will be
terminated incorrectly.  When this statment is read back by
the mysqlbinlog tool it reads a starting single quote and
continuos to read till it finds an ending quote. Hence any
statement written post ending quote will be considered as
a new statement.

Fix:
===
As name field has length restriction the string value
should not be stored in Item::name.  A new String list is
maintained to store the SET expression values and this list
is read during reconstrution.",true,false,true,true,false,false,false,false,4,4,2,2,68981
GridProtectionAlliance/gsf,ee6770dd5dce1ebff78193480242bbcff0c285ed,ritchiecarroll,2013-06-17 21:16:57 UTC,"(1) Updated calls to ParseInput/OutputMeasurementKeys to force developer to consider if ""SELECT"" operations should be allowed to prevent SQL injection attacks (this operation should generally be excluded when filter expression is not already coming from the database).
(2) Added a configuration file setting to globally control if SELECT operations will be allowed or not - defaults to False, user must enable feature explictly to use.

git-tfs-id: [https://tfs.codeplex.com/tfs/TFS07]$/gsf/Main;C85415
",false,true,false,false,false,false,false,false,10,10,10,10,64
jonsito/AgilityContest,84206c53233a15eeb4d800a95b83894252a06d7d,Juan Antonio Martinez,2016-08-02 12:40:43 UTC,"Inscriptions Excel import: server side written

Once that Dog excel import is done, Inscriptions import are (almost) easy: just add required fields and extra steps in database population

The only problem is handling of Team journeys: need to detect inscription, team name (avoid spaces and sql injection), and properly evaluate data across database tables relation tree. Anyway, server side code is already written and ready for testing
",true,true,false,false,false,false,false,false,6,6,6,6,1119
colinsc/koha,1c2ee5903cfe19379d20a847558fb0c176580cc0,Colin Campbell,2017-08-08 10:47:40 UTC,"Bug 19061: Avoid SQL Injection vulnerability

Embedding values in the SQL statement allows the passing of values
that would normally be rejected resulting in mysql errors
variables should always be passed via placeholders and
the execute call

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Marcel de Rooy <m.de.rooy@rijksmuseum.nl>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
",true,false,false,false,false,false,false,false,1,1,1,1,8314
doctrine/dbal,68990405623087c5b1e2ae3488847f9561b681a5,Bertold von Dormilich,2017-08-18 15:32:29 UTC,"fixing issue #2814

Replaced the code examples for `set()` to show that the value parameter is not escaped and thus could pose an SQL injection vulnerability.",true,false,true,false,false,false,false,false,1,1,1,1,
expertiza/expertiza,e271857e580808c6615081b3c66fdd858c684429,Winbobob,2017-08-22 02:57:08 UTC,"Partially fix SQL injection
",true,false,false,false,false,false,false,false,3,3,3,3,42
expertiza/expertiza,c87185da815fa0c0ec23fe2bb928d7c96adc0da4,Winbobob,2017-08-22 02:14:12 UTC,"Both hash parameters and parameterized statement can avoid SQL injection:
Users.where(id: params[:id]) # hash parameters
Users.where('id = ?', params[:id]) # parameterized statement

Reference: https://stackoverflow.com/questions/21886170/best-way-to-go-about-sanitizing-user-input-in-rails/21886874
",false,false,true,true,false,false,false,false,7,7,7,7,43
expertiza/expertiza,4a82edde8c9daa889b5997d04b4141e999c89ea7,Winbobob,2017-08-23 20:34:51 UTC,"Fix SQL injection related security issues.
",true,false,false,false,false,false,false,false,14,14,14,14,2497
govCMS/govCMS,f1cc84765d7ffd85765b791d2a12e7bf697eee0c,Toby Bellwood,2017-06-29 06:02:44 UTC,"SA-CONTRIB-2017-054 - Services - Critical - SQL Injection

https://www.drupal.org/node/2890353

Posted by Drupal Security Team on 28 Jun 2017 at 23:36 AEST
Advisory ID: DRUPAL-SA-CONTRIB-2017-054
Project: Services (third-party module)
Version: 7.x
Date: 2017-June-28
Security risk: 19/25 ( Critical) AC:None/A:User/CI:All/II:All/E:Theoretical/TD:Default
Vulnerability: SQL Injection
Description
This module provides a standardized solution for building API's so that external clients can communicate with Drupal.

The module doesn't sufficiently sanitize column names provided by the client when they are querying for data and trying to sort it.

This vulnerability is mitigated by the fact that a site must have an ""Index"" resource enabled and the attacker must know the endpoint's URL.


CVE identifier(s) issued
A CVE identifier will be requested, and added upon issuance, in accordance with Drupal Security Team processes.
Versions affected
Services 7.x-3.x versions prior to 7.x-3.20
Drupal core is not affected. If you do not use the contributed Services module, there is nothing you need to do.

Solution
Install services version 7.x-3.20 of the module or disable any Index resources within your endpoint(s).

Also see the Services project page.

https://www.drupal.org/project/services/releases/7.x-3.20

Release notes
Fixes Services - Critical - SQL Injection - SA-CONTRIB-2017-054

#2760873: Update the README for spyc location
#1355952: Add drush make file to download spyc dependency
#2880909: Services REST: Response code 401 Unauthorized for missing arguments should be 400 Bad Request",true,false,true,true,false,false,false,false,1,1,0,0,1114
koala-framework/koala-framework,a8d9cd3efdeb7ce4beea522a3a375ffe006be4fd,Michael Freudenthaler,2017-06-06 14:21:44 UTC,"Fix for sql injection changes
",true,true,false,false,false,false,false,false,1,1,1,1,79187
find-sec-bugs/find-sec-bugs,716da10a5907ddafba1648bc7bed86a5f3d72d38,Philippe Arteau,2017-06-24 18:24:07 UTC,"Android SQL injection #302
",false,false,false,false,false,false,false,false,47,36,42,32,10119
find-sec-bugs/find-sec-bugs,66b3b3a68a730419e775c08aee22c96e47c11565,Philippe Arteau,2017-06-26 19:03:01 UTC,"Merge pull request #309 from h3xstream/master

OGNL injection + Android SQL injection + Migration from FindBugs to SpotBugs",false,true,false,false,false,false,false,false,97,74,84,62,5704
lighttpd/lighttpd1.4,d1a23569161148f5acde8d4a6fb78c44284e1853,Stefan Bühler,2014-03-12 12:03:55 UTC,"fix SQL injection / host name validation (thx Jann Horn)

From: Stefan Bühler <stbuehler@web.de>

git-svn-id: c4e9838fefcfae554524937a357000afc2bbf25b@2959 152afb58-edef-0310-8abb-c4023f1b3aa9
",true,false,false,false,false,false,false,false,4,3,2,2,34495
pouchdb/pouchdb,7c69b64d1d65b4078fa97d74704e8310d905c08c,Nolan Lawson,2014-03-26 21:47:18 UTC,"(#1743) - escape sql in websql's doCompaction

This should be the final SQL injection fix. I don't
see quote() being used anywhere else, except for
static db names.
",true,false,false,false,false,false,false,false,2,1,2,1,206
jonsito/AgilityContest,abedc1c7d7331970b6b0def35a21caae125186e1,Juan Antonio Martinez,2014-03-03 17:52:26 UTC,"Revert previous prepared statement changes: rewrote http_request to
avoid SQL injection by proper escape'ing strings",true,false,true,true,false,false,false,false,2,2,2,2,4330
telstra/open-kilda,73dcb5c950542f929de43f329aab02755802a6eb,dpoltavets,2018-08-17 07:53:43 UTC," - fixed db queries in TE by eliminating the possibility of SQL-injections.
",true,false,false,false,false,false,false,false,1,1,1,1,5549
jimmycleuren/fireping,3c91b5e912127200acf890f36fa3dc3c005cc2d4,Jimmy Cleuren,2020-08-07 06:23:12 UTC,"fix possible sql injection (#396)

",true,false,false,false,false,false,false,false,2,1,2,1,35534
sectsect/google-spreadsheet-to-db,2b23e5d2463b17d68eeb5292c5cf3cd3d77149a0,SECT,2020-07-08 10:59:47 UTC,"Fix SQL-Injection vulnerability
",true,false,false,false,false,false,false,false,1,1,1,1,133
librenms/librenms,6e6fde94c33322e724ef8f37c22ff78f6613f4b3,Tony Murray,2020-07-10 08:45:39 UTC,"Fix sql injection (#11923)

in custom oid code

Thanks to loginsoft p.v.t l.t.d india for the report!
Website: https://www.loginsoft.com/",true,false,false,false,false,true,false,false,1,1,1,1,762
librenms/librenms,32f72bc1ab7e980e4070e826a89d0d36a5ba62dd,Jellyfrog,2020-07-10 14:17:09 UTC,"Fix SQL injections in ajax_table.php (#11920)

* Fix SQL injections via searchPhrase parameter

* Fix SQL injections via address parameter

* Fix sort injection

Co-authored-by: Tony Murray <9e7311693eba877e07deebb62b2906b4f8cf0cd1@gmail.com>",true,false,false,false,false,false,false,false,20,20,20,20,1228
jodogne/OrthancMirror,7f206ea06933db0f9fa5e78ea2d3da29bf951bee,Sebastien Jodogne,2020-04-03 12:47:37 UTC,"enforcing SQLiteDatabaseWrapper::GetTableRecordCount() against SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,41
helm/helm,21d2aa7f2b28e0ecec0cd17825a422a692c71752,Elliot Maincourt,2020-04-16 20:53:40 UTC,"Migrate SQL storage driver to Helm 3 (#7635)

* Migrate SQL storage driver to Helm 3

Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

* Update pkg/storage/driver/sql.go

Co-Authored-By: Sebastian Pöhn <7b8d3696a9dd47ee3daf66a5e039df0a275cda03@gmail.com>
Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

* Add authentication to releases_v3

Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

* Fix migration

Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

* Template the init migration

Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

* Prevent potential SQL injection

Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

* Use an SQL querybuilder

Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

* Remove references to HELM_DRIVER_SQL_DIALECT

Signed-off-by: Elliot Maincourt <17c2c9cc046ccdc466814673659dda164b8cb820@gmail.com>

Co-authored-by: Sebastian Pöhn <7b8d3696a9dd47ee3daf66a5e039df0a275cda03@gmail.com>
Co-authored-by: Matt Butcher <9edef9357d0bb3cf7fbdee24829bb01e8827bfb3@microsoft.com>",true,true,false,false,false,false,false,false,7,5,5,3,
folio-org/raml-module-builder,f4942eed6ebba39b0d8b10f3f7b179cb1afd93c5,Julian Ladisch,2020-04-28 13:36:04 UTC,"RMB-565: Review if all CQL to SQL generation code is using masking

The cql2pgjson subproject has been reviewed whether all generated
SQL has all strings masked to avoid SQL injection.

This is true after some issues have been fixed.

A length limit of 49 characters has been added for tableName and
fieldName. Otherwise Postgres will truncate indentifier names.

A check has been added that fieldName does not contain a single quote.

The masking code is in these utility classes:
* Cql2PgUtil
* Cql2SqlUtil

Missing test coverage was added to both. This uncovered an issue with
leading/trailing spaces in Cql2SqlUtil.cql2tsqueryAnd that results in
a tsquery error because of an empty search string; this was fixed.

Replace String [] by List<String> parameters to prevent junitparams
from trimming whitespace: https://github.com/Pragmatists/JUnitParams/pull/98
",true,false,true,true,false,false,false,false,12,7,11,6,32
ntop/nDPI,470d30ac239a5f851d9f6660391375aa6d581716,Luca,2019-11-13 16:37:48 UTC,"Fixed SQL Injection detection
",true,false,false,false,false,false,false,false,1,1,1,1,1500
ntop/nDPI,a3a85106a1eb59bc87cafa06796ea404f450eda9,Luca Deri,2019-11-01 22:05:11 UTC,"Implemented SQL Injection and XSS attack detection
",false,true,false,false,false,false,false,false,6,4,2,2,2253
folio-org/raml-module-builder,d646d074bdf825314a97734b88a9ea166576b60e,Julian Ladisch,2019-11-19 11:01:13 UTC,"Remove unused Exception, add single quote sql injection tests.
",false,true,true,true,false,false,false,false,2,1,2,1,43
scottwillson/racing_on_rails,5be045c3b7d1883c80ff24b7a387e7e100f603f4,Scott Willson,2015-12-20 04:46:00 UTC,"Prevent SQL injection
",true,false,false,false,false,false,false,false,1,1,1,1,0
zaproxy/zaproxy,f971c726acdfa30825ae53dbd41b9b7c3cf932e1,thc202,2015-12-15 23:34:08 UTC,"Update parent nodes' state when un/checking tree nodes programmatically

Change methods JCheckBoxTree.checkSubTree(TreePath, boolean) and
check(TreePath, boolean) to update parent nodes' checked state (through
updatePredecessorsAllChildrenSelectedState(TreePath)), to ensure that
parent's children checked state (""allChildrenSelected"") is up to date
thus correctly report when fully checked (the node itself and the child
nodes).
Extracted a helper method, allSelected(CheckedNode), that tells if all
child nodes and the node itself is selected based on a checked state.
Add method, isChecked(TreePath), that tells whether or not a node is
checked, useful for testing and actual tree usage.
Add tests to assert the expected behaviour.
Fix #2110 - SQL Injection gets skipped
",true,true,true,true,false,false,false,false,2,1,2,1,2322
frappe/erpnext,2b6a20aab5aeb2ec82f541e63caea0dffb5b20e5,Don-Leopardo,2020-03-16 17:06:44 UTC,"fix: sql injection (#20818)

",true,false,false,false,false,false,false,false,4,4,4,4,70570
rqlite/rqlite,1981770b717ab4b6b5345e4f2013fdb3d3e65bf5,Philip O'Toole,2020-09-27 02:58:53 UTC,"Add SQL injection demonstration tests
",false,true,false,false,false,false,false,false,1,0,1,0,20
vulhub/vulhub,8ae5bf19e7d8303e94096adf9ecf59247488586d,phithon,2021-02-09 17:11:52 UTC,"Merge pull request #261 from vulhub/skywalking-830-sqli

Skywalking 8.3.0 SQL Injection",false,true,false,false,false,false,false,false,7,7,2,2,31680
derUli/ulicms,7107b1a7e4a034b260bab2ac4d0608f196aadcc1,Ulrich Schmidt,2013-07-06 19:48:45 UTC,"SQL Injection behoben
",false,false,false,false,false,false,false,false,1,1,1,1,9
derUli/ulicms,2d64216f2e4893c1567ef5c80b3b94639f4582fa,Ulrich Schmidt,2013-07-06 19:39:16 UTC,"Einige SQL Injections behoben
",false,false,false,false,false,false,false,false,1,1,1,1,4
BeWelcome/rox,bc7568f22b7cd93927736992bce5b4d45b819ca2,fake51,2009-07-01 12:22:51 UTC,"fixing exception causing bug + sql injection vector in preferences code

git-svn-id: dcab1f60f8875908b03f8631d73cf2044708dbe2@8541 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",true,false,false,false,false,false,false,false,1,1,1,1,864
BeWelcome/rox,fb42bd8d3423ed67d6a19b5c98c9c24572f64b66,fake51,2009-07-14 12:56:42 UTC,"fixing sql injection vector

git-svn-id: dcab1f60f8875908b03f8631d73cf2044708dbe2@8713 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",true,false,false,false,false,false,false,false,1,1,1,1,48
BeWelcome/rox,49ac1665b302282486ecfad60a0171e701e58a97,fake51,2009-07-12 18:29:43 UTC,"fixing sql injection problem

git-svn-id: d788be251142534739cf50532120033c135e1faf@8698 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",true,false,false,false,false,false,false,false,1,1,1,1,559
akrherz/iem,f57e98f905df442985d02f731cd2f8138025f545,akrherz,2009-07-23 13:30:38 UTC,"remove sql injection and cleanup html table

",false,true,true,true,false,false,false,false,1,1,1,1,1075
earaujoassis/space,5a66c5f14686b830b3c6b78cb941823bc70ea40e,Ewerton Assis,2016-11-13 22:39:13 UTC,"Prevent SQL injection through data validation; closes #27
",true,false,false,false,false,false,false,false,3,3,3,3,32
concourse/concourse,73f077e178b3cb306b13641549739cd36b4929f4,Maria Shaldibina,2016-08-01 23:51:49 UTC,"bump atc

[finishes #127509477]

Submodule src/github.com/concourse/atc 2022fd2..05826af:
  > save team name as is, pull case-insensitively
  > fix sql injections in team db
",true,false,false,false,false,false,false,false,1,1,0,0,33
qgis/QGIS,bcd495c693b5c3126c2a382a445007f9545b02b2,Alessandro Pasotti,2017-08-17 18:31:44 UTC,"Prevent SQL injection by using sqlite3_mprintf
",true,false,false,false,false,false,false,false,1,1,1,1,85
weaondara/BungeePerms,360203ff0098b3d446cb39059a78d30faf1a4f09,wea_ondara,2019-03-26 22:21:24 UTC,prevent sql injections,true,false,false,false,false,false,false,false,8,8,7,7,158591
ekansa/open-context-py,9cab1facf8c05f20c6b5642002af3a8a293b7161,Eric Kansa,2015-11-13 01:36:59 UTC,"Intercept obvious SQL injections on Solr search

SQL injection attacks won't do anything bad to Solr, but log files show
the attempt and it makes solr throw errors. Probably degrades
performance. So this checks for some obvious attacks, and returns a bad
request (400) error.
",true,false,false,false,false,false,true,true,2,2,2,2,1
ekansa/open-context-py,09533a8f8f1eb276fabd069b4d590f0eb8d26e23,Eric Kansa,2015-11-13 01:38:19 UTC,"Merge pull request #258 from ekansa/master

Mainly robots.txt, error pages, SQL injection interception",false,true,true,false,false,false,false,false,8,8,3,3,1
mozilla-mobile/firefox-ios,143aaca77a9d924f24830d7e9cf6617ee53f1b41,Stephan Leroux,2015-11-18 15:26:18 UTC,"Bug 1221588 - Updated login search API, fixed LIKE query to prevent SQL injections, updated tests
",true,true,false,false,false,false,false,false,4,3,4,3,1061
dev-osrose/osIROSE-new,f6aeed3bd916ccfb64c6f97815a5bbcc2393ca03,Christopher Torres,2015-11-11 19:43:24 UTC,"Added Visual Studio 2013 project.
Found out that the C++ mysql connector is not 0 index based.
Fixed windows compile.
Converted some of the login server SQL Queries to use stored procedures.
Converting the sql queries to use PreparedStatement to increase security. (This will prevent any SQL Injections from the server)
",false,true,true,true,false,false,false,false,22,22,8,8,836
github/orchestrator,77b6c134a71614515d85149db6d64a8b22f86fb9,shlomi-noach,2015-11-07 13:14:45 UTC,"OK _FINE_, removed SQL injection threats wherever possible 
db: added QueryOrchestrator, which takes arguments for positional
placeholders
cli: added ""master-pos-wait"" command
analysis_dao:
- better discovery of OracleGTIDImmediateTopology
- better discovery of MariaDBGTIDImmediateTopology
- better discovery of BinlogServerImmediateTopology
topology_recovery:
- beter analysis of MasterRecoveryGTID

",false,false,false,false,false,true,false,false,20,20,20,20,1666
centreon/centreon,94ec00e716c66f92ff27976813525ee2817f8c4b,Laurent Calvet,2018-09-25 08:28:11 UTC,"fix(administration log page): Fix XSS issue (#6635)

* fix(XSS): Create new escape method to fix XSS issue

* fix(administration log page): Fix XSS issue

Fix XSS issues on the administration logs page.
Protection of all database queries against SQL injection.

* Fix SQL request in searchUsername function
",true,true,false,false,false,false,false,false,1,1,1,1,0
Skouat/ext_paypal_donation,5bcc4982fefd8dc42bc54771281d3a3d351ac36d,Skouat,2018-09-24 20:01:14 UTC,"Fix potential SQL injection
",true,false,false,false,false,false,false,false,2,2,2,2,9
binarylogic/authlogic,4752667e96efdeed170f27e04a71dbc0b11dff92,Jared Beck,2018-09-19 03:19:24 UTC,"Docs: encourage Relation over `conditions:` string

The latter is subject to SQL-injection attack.

[ci skip]
",false,false,true,false,false,true,false,false,3,3,3,3,88
centreon/centreon,96dd80f6b7f262fde5b8b01e7888933ee2a399b6,Laurent Calvet,2018-09-25 08:26:33 UTC,"fix(host): Adding security filters on the host list page  (#6625)

* fix(XSS): Create new escape method to fix XSS issue

* fix(host): Adding security filters on the host list page

Some parameters have been filtered : hostgroup, poller, template and status.
Fix SQL injection on some requests.
",true,true,false,false,false,false,false,false,4,4,4,4,0
centreon/centreon,c1eb1907c8398ad41c4cc3c56ed6e51589b2508d,Laurent Calvet,2018-09-25 08:21:33 UTC,"fix(ACL list): Fix XSS issue on the ACL list page  (#6634)

* fix(XSS): Create new escape method to fix XSS issue

* fix(ACL list): Fix XSS issue on the ACL list page

Fix XSS issue on the ACL list page.
Protection of all database queries against SQL injection. 
Fixed the duplication feature (auto incrementation of the suffix)
",true,true,false,false,false,false,false,false,4,4,4,4,100
centreon/centreon,0733cb2f50eac9a8482a77ca79105070730412e1,Laurent Calvet,2018-09-25 06:40:47 UTC,"fix(virtual metric): Fix SQL injection (#6628)

* fix(XSS): Create new escape method to fix XSS issue

* fix(virtual metric): Fix SQL injection

Fixed SQL injection on the virtual metric list page.
Fixed control on the virtual metric name when attempting to add or modify a virtual metric.
",true,true,false,false,false,false,false,false,4,4,4,4,0
centreon/centreon,89d5460f6153015cacf48dff01dec793edd07b99,Laurent Calvet,2018-09-25 06:40:09 UTC," fix(SNNP trap) : Fix SQL injection on editing trap SNMP (#6627)

* fix(XSS): Create new escape method to fix XSS issue

* fix(SNNP trap) : Fix SQL injection on editing trap SNMP

Added controls on some parameters. Fixed the display of the SNMP trap list that crash when attempting to duplicate the same trap twice.
",true,true,false,false,false,false,true,false,4,4,4,4,1
centreon/centreon,a77d3b4e292c666d8524173ee137295576207703,loiclau,2020-07-10 09:09:44 UTC,"fix(security) sql injection in Parameters/Data

* fix(security) sql injection in Parameters/Data

* fix/replace poller filter by select2 ",true,false,false,false,false,false,false,false,3,3,2,2,31
centreon/centreon,4ed5ac82c7cf665b2800eb66a42c1bd8d71b3548,jeremyjaouen,2020-07-07 14:47:37 UTC,"fix(security): fix sql injection vulnerabilities in traps (#8829)

Co-authored-by: loiclau <369f717e35617570eadb7fd40610e3ae1f089564@gmail.com>",true,false,false,false,false,false,false,false,6,6,2,2,7661
openSUSE/open-build-service,33b7b23eb9f6b47172f37b57d971d27233de59d4,Dany Marcoux,2020-06-10 08:03:59 UTC,"Merge pull request #9710 from saraycp/sql_injection

Prevent SQL injection",false,true,false,false,false,false,false,false,1,1,1,1,992
openSUSE/open-build-service,6762423919289f28efb963f010765bfff22a8543,Saray Cabrera Padrón,2020-06-09 18:52:54 UTC,"Prevent SQL injection

Get rid of the raw SQL call ""DISTINCT `key`"".
",true,false,false,false,false,false,false,false,1,1,1,1,1250
RichardTMiles/CarbonPHP,c7a2701e76c1b8acc675b122f022442b9e792268,RichardTMiles,2018-08-09 04:22:59 UTC,"I'm realizing that this wrapper isn't protecting us from sql injections as much as it should
",false,false,false,false,false,false,false,false,2,2,1,1,83
MushroomObserver/mushroom-observer,59da1252888076e12fcec770e4ca91c9ef6a76e3,Nathan Wilson,2018-08-11 17:06:29 UTC,"Reduce chance of SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,34
alphagov/whitehall,1282c6c55d1a574f3a5478d2282978c8ebfd54f8,Thomas Leese,2018-08-02 14:59:18 UTC,"Fix and ignore a SQL injection vulnerability

This fixes a SQL injection vulnerability in the development mode
stubs, and ignores another that is a false positive.
",true,false,false,false,false,false,false,false,2,2,1,1,9
frappe/frappe,081b17fbe89f49acf6bd33a96d6845f1b9160eb7,Saurabh,2018-07-11 05:34:51 UTC,"[security][fix] tighten criteria to prevent sql injection in search-f… (#5800)

* [security][fix] tighten criteria to prevent sql injection in search-fields

* test cases
",true,false,false,false,false,false,false,false,2,1,2,1,2
centreon/centreon,e1df4371b111d2906205a8f320e9bf324f9d3d9c,leoncx,2018-06-25 08:35:13 UTC,"fix(sec): Fix SQL Injection in administration logs (#6255)

* Fix SQL Injection in Administration logs in search fields
",true,false,false,false,false,false,false,false,2,2,1,1,5
centreon/centreon,6ee3244d39fe9695ff452a2d4b54bcb28cd90ebb,leoncx,2018-06-25 08:26:11 UTC,"fix(sec): Fix SQL Injection in Virtual Metrics (#6257)

* Fix SQL Injection in Virtual Metrics in get information",true,false,false,false,false,false,false,false,1,1,1,1,99100
TestLinkOpenSourceTRMS/testlink-code,2c85dc8f472f4eedba70a24456be5239dc3045a3,Francisco Mancardi,2018-06-18 17:40:21 UTC,"#0008301: SQL Injection gettestcasesummary.php
",false,false,false,false,false,false,false,false,1,0,1,0,2832
NuSkooler/enigma-bbs,95422f71bac3b27104726739ec1f7505799980d2,Bryan Ashby,2018-06-02 02:16:08 UTC,"Fix possible SQL injection in file tags search
",false,false,false,false,false,false,false,false,1,1,1,1,0
MarkUsProject/Markus,935fade3fa2599ef3eaaf5b5eae3617cc358dbf1,PkHutch,2018-06-23 22:08:11 UTC,"Modify mainApiController to fix potential SQL injection

mainApiController now has a changed called to where which uses the key
as a third parameter, which is SQL injection safe.
",true,false,false,false,false,false,false,false,1,1,1,1,35907
MarkUsProject/Markus,38ec653fa13012f308a858ef2a0b7e99c21ef1ee,David Liu,2018-06-25 15:08:16 UTC,"Merge pull request #3424 from PkHutch/sql-injection

Brakeman SQL Injection",false,true,false,false,false,false,false,false,1,1,1,1,2569
centreon/centreon,e692659b25dc3edbbddbf9a2ca193a0e67382277,leoncx,2018-06-25 08:27:07 UTC,"fix(sec): Fix SQL injection in Curve template (#6256)

* fix(sec): Fix SQL injection in Curve template

* Fix SQL injection in curve template search field

* Fix SQL injection in Graph Template

* Fix SQL injection in VirtualMetrics Template
",true,false,false,false,false,false,false,false,3,3,3,3,0
centreon/centreon,394e66c3cb135d41a4bcb8804ae1eeee4c499a31,leoncx,2018-06-25 08:28:09 UTC,"fix(sec): Fix SQL injection in dashboard (#6250)

* fix(sec): Fix SQL injection in dashboard

* Fix some SQL Injections

* fix(sec): Change query method

* Use prepare statement on queries
",true,false,false,false,false,false,false,false,4,4,4,4,0
rails/rails,1ffd5ec91069167043c8ecd0d949098f566d88eb,Joost Baaij,2011-11-08 15:27:15 UTC,"Replace example with SQL placeholder syntax.
This works just fine, is less code, and reduces the risk of someone implementing a SQL injection vulnerability.",true,true,false,false,false,true,false,false,1,1,0,0,16083
ekohe/wulin_master,2319e89b699b01a045bb46f50aef92a045f2b652,Maxime Guilbot,2011-11-29 05:31:19 UTC,"MISC - Fix SQL injection problem and fix a bug for mongo details columns
",true,false,false,false,false,false,false,false,1,1,1,1,20
gajim/gajim,23327c834d99fad1f6693ceeb680b595e0e21d47,Yann Leboulanger,2011-11-08 21:00:52 UTC,"use prepared statements in all SQL queries that contains jids to prevent SQL injection. Fixes #7034
",true,false,false,false,false,false,false,false,1,1,1,1,97
smrealms/smr,7fc843091819d7c089726093a6b56f4fb312f739,page,2011-11-13 15:46:55 UTC,"Rename alliance_roles_save.php to alliance_roles_save_processing.php, stop a warning being thrown on that page sometimes and add protection against SQL injection attacks on that page.
",false,false,true,true,false,false,false,false,3,3,3,3,16
inveniosoftware/invenio,5badd7db6ef046e5fd4dc89e5627928bb70996e9,Carmen Alvarez Perez,2011-11-18 14:29:36 UTC,"WebStat: delete custom events when dropping site

* Delete ALL custom events records when dropping site.
* Also, in the custom query summary don't group others when
  we are in the CERN site (request from the library).
* Also, add wash_table_column_name in webstat.py to prevent
  SQL injection.
",false,true,false,false,false,false,false,false,3,3,3,3,34661
UNINETT/nav,e9188bc20d289392a6c3abb1e8be38d8eee2f11b,Morten Brekkevold,2007-08-20 08:34:03 UTC,"Slight refactoring of logengine code.

* logengine.py
  Compile regex patterns before usage.
  Parameterized SQL queries (so we won't easily find any SQL injection attacks
  later)

",false,false,true,true,false,false,false,false,1,1,1,1,54650
BeWelcome/rox,e823b52603291249571ee3e040dfb89c89957d51,jeanyves,2007-08-31 10:34:26 UTC,"Removing one Sql injection problem raised by morgan

git-svn-id: d788be251142534739cf50532120033c135e1faf@2827 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",true,true,false,false,false,false,false,false,1,1,1,1,2880
BeWelcome/rox,e42931fd023f5df180e02db772b470f1249c6dea,jeanyves,2007-08-31 10:34:42 UTC,"Removing one Sql injection problem raised by morgan

git-svn-id: ed0f78d84912d910aa442fd740e127b2b2888620@2828 4f49b16c-3c57-40ef-8e22-7452baa6c33a
",true,true,false,false,false,false,false,false,1,1,1,1,0
dev-mansonthomas/RedCrossQuest,26863b4e84a10d04a5e4d80a8b9e04ad98674121,Thomas Manson,2019-01-23 01:39:59 UTC,"FIC 2019
 - Fixes after first day of attack and one security flaw demonstrated (be able to udpate role of any users)

PHP:
* Entities : use the appropriate getInt/getFloat/getString according to the type to avoid attempt of sql injection
* Entity : add a max length check on all types, String it's a parameter, set in Entity according to the db definition
* fix a potential SQL injection, when listing the queteurId to print the associated QRCode
* prevent from creating more than 50 troncs at once on server side
* prevent query and update on super user
* prevent updating user role/active of other UL and give higher privilege than his
* add __toString() implementation to DecodedToken class
* increase checks on authentication parameters (other routes : TBD)
* recaptcha : when not on GCP, get the client IP the normal way instead of setting to null
*
Angular:
* angularjs : some minor changes to adjust the change of type from string to int/date/boolean (radio button: from value=""1"" to ng-value=""true"")
* queteur : avoid searching for similarQueteur when all field are empty (happen when typing, and then deleting the input)
* delete tronc type of ""Terminal CB"" from list troncs

other changes:
* list point de quete : google map links for direction now start from the base instead of current position
",true,true,true,true,false,false,false,false,43,43,37,37,1673
dissemin/dissemin,daf665b1c5ce411d7425fcfcdca89b49fe4a2a62,Phyks (Lucas Verney),2019-01-11 13:15:36 UTC,"Fix an issue with search results

Do not show an error page when `aggregations` are not defined for a
search query. Typically for weird (SQL injection attempts) queries such
as

```
luis angel moreno anselmi"" or (1,2)=(select*from(select name_const(CHAR(111,108,111,108,111,115,104,101,114),1),name_const(CHAR(111,108,111,108,111,115,104,101,114),1))a) -- ""x""=""x
```

Fixes https://sentry.io/dissemin/dissemin/issues/309734257/.
",true,false,false,false,false,false,true,false,1,1,1,1,2862
frappe/erpnext,753c5d75140ce7b7c5347966b2bf0c59bc37e881,deepeshgarg007,2019-01-17 06:58:56 UTC,"fix(Codacy): Possible Sql injections
",true,false,false,false,false,false,false,false,1,1,1,1,835
frappe/erpnext,9acb885e60f77cd4e9ea8c98bdc39c18abcac731,Aditya Hase,2019-01-29 05:22:37 UTC,"fix(sqli): Avoid SQL Injection with sender param (#16509)

",true,false,false,false,false,false,false,false,1,1,1,1,6699
DShield-ISC/dshield,aa907a12123031ba9f6491e307d4ae76fe6fa2fe,Johannes Ullrich,2016-08-22 14:47:04 UTC,"working on sql injection issues
",false,false,false,false,false,false,false,false,1,1,1,1,48
ManageIQ/manageiq,d0516168c1329e0d5106cc90f2d5e9863ea4c712,Chris Arcand,2016-08-31 13:54:27 UTC,"Remove Metric::Common#v_find_min_max

Originally from d4e49aaba1ac26a0c22a48ac29dd2abf211e487d

Removed caller in a6bc600270d5b5b8158320c51110d894836a07b1
(And was even commented out before that)

Removes SQL injection warning
",false,true,false,false,false,false,false,false,2,2,1,1,7
CESNET/perun,b5732838d2776dd354cea38488d2f54ef45af30b,Pavel Zlámal,2016-08-04 06:30:35 UTC,"BASE,CORE,DB: Fixes to group arithmetics logic

- Updated exception javadoc.
- Prevent sql injection (use prepared statement) in getGroupRelations().
- Added hsql db changelog.
- Small fix do perun-db definitions.
- Updated init sql definition to 3.1.37 based on changelog.
- Removed unused membership types from enum.
- Fixed DB version in test.
",true,false,true,true,false,false,false,false,7,6,3,3,66
CIRCL/AIL-framework,07ad13a439605beb0b8b1e27ac259698fb245d83,Mokaddem,2016-08-02 14:24:33 UTC,"Merge branch 'sql-injection' into production
",false,true,false,false,false,false,false,false,5,5,4,4,2
folio-org/raml-module-builder,98ee4cb51dfb12ac71f93bf0c5cc627232145240,Adam Dickmeiss,2018-08-13 12:29:55 UTC,"Merge pull request #222 from folio-org/RMB-189-PostgresClient-test-sql-injection

RMB-189: Add unit tests that check single quote SQL Injection in Post…",false,true,false,false,false,false,false,false,1,0,1,0,2
folio-org/raml-module-builder,8f1e06d9020597208e741fe8aa618f8e051c04dd,Julian Ladisch,2018-08-13 07:29:52 UTC,"RMB-189: Add unit tests that check single quote SQL Injection in PostgresClient
",false,true,false,false,false,false,false,false,1,0,1,0,2117
folio-org/raml-module-builder,36bc177fcc15f619fbe905ed54f62909a673d49a,julianladisch,2018-08-16 17:28:22 UTC,"Merge pull request #226 from folio-org/RMB-201-saveBatch-sql-injection

RMB-201: Fix single quote SQL Injection in PostgresClient.saveBatch",true,true,false,false,false,false,false,false,2,1,2,1,2695
folio-org/raml-module-builder,fdf9b11a5cdbe9f6246ba3321f31e50cb84b5d58,Julian Ladisch,2018-08-14 20:32:31 UTC,"RMB-201: Fix single quote SQL Injection in PostgresClient.saveBatch(table, list, handler)
",true,false,false,false,false,false,false,false,2,1,2,1,2222
bkimminich/juice-shop,705cde213b2585c8cfe0cbd2aab28b2ddeabb56d,Jorge Estigarribia,2019-05-30 11:25:03 UTC,"Added more steps for the SQL injection challenge.

Co-Authored-By: Jannik Hollenbach <9b7e16683662283200523027005e796715f75d33@hollenbach.de>
",false,true,false,false,false,false,false,false,2,2,1,1,42934
OCA/account-financial-reporting,910d62e8e64d28da6dda18a3d724770bd65b2e6d,eLBati,2019-05-30 15:55:16 UTC,"[MIG] account_financial_report: Finalize migration to 12.0

* Move back to CSS and FIX

  NameError: variable @odoo-view-background-color is undefined in - on line 99, column 23:
  98 .o_account_financial_reports_page {
  99     background-color: @odoo-view-background-color;
  100     color: @odoo-main-text-color;

* Porting: parent_left does not exist anymore. Using parent_path + account code to sort report lines

* FIX js error with date object not converted to string while clicking on initial balance amount
  See https://user-images.githubusercontent.com/1033131/58337566-5d525c80-7e46-11e9-913a-3c3e0115fb3e.gif

* IMP style and metadata

* FIX tests about new date format and partner_id computed field of account.move

* FIX errors like

  2019-06-03 16:11:51,406 17857 ERROR dev_12_account_financial_report odoo.sql_db: bad query: b""\nDELETE FROM 'report_vat_report_tax'\nWHERE COALESCE(\n    write_date, create_date, (now() at time zone 'UTC'))::timestamp\n    < ((now() at time zone 'UTC') - interval '3600.0 seconds')\n""
  ERROR: syntax error at or near ""'report_vat_report_tax'""
  LINE 2: DELETE FROM 'report_vat_report_tax'
                    ^
* IMP translation template and IMP Italian translation

* Remove useless comments
* Use AsIs to avoid SQL injection
* Use fields.Date methods
* Remove useless data from tests
* Improve comments
* Fix wizard.multi.charts.accounts
* Move _get_partner_ids_domain to abstract wizard
* Refactor default partners in wizard to use recordsets
* Improve js style
",true,false,true,false,false,false,true,false,28,24,17,13,
nielsbasjes/yauaa,bfb1f73a99087efe5c14b230574da953fd648932,Niels Basjes,2016-09-09 09:34:21 UTC,"Put SQL injection Hackers in separate yaml and improve
",false,false,false,false,false,false,false,false,2,2,0,0,0
nielsbasjes/yauaa,bd2ac2c39d55cb84c2eda97f7a1aadb8979880c5,Niels Basjes,2016-09-27 08:19:37 UTC,"Extra examples of SQL injection hackers.
",false,false,true,false,false,false,false,false,1,1,0,0,0
exponentcms/exponent-cms,11cee376d8a8889f11ccef18d70f75142c9a9dc4,dleffler,2016-09-12 23:59:18 UTC,"security fix possible sql injection attempt
",true,false,false,false,false,false,false,false,1,1,1,1,271
exponentcms/exponent-cms,e916702a91a6342bbab483a2be2ba2f11dca3aa3,dleffler,2016-09-13 19:38:24 UTC,"security fix several sql injection vulnerabilities reported by Manuel Garcia Cardenas and PKAV TEAM
",true,false,false,false,false,false,false,false,5,5,5,5,1149
find-sec-bugs/find-sec-bugs,f5dfbf5bba3ba72a379d9e39ec16104efc827c30,MaxNad,2016-09-15 01:17:26 UTC," SQL Injection (CWE 89) - Created SQL Injection detector and detector test for Scala Anorm + Changed Taint Analysis to fix problems while scanning Scala code
",true,true,false,false,false,false,false,false,12,10,7,6,1866
mozilla/treeherder,044adae263586164877d644c416fba174b91ca11,Ed Morley,2015-07-13 12:06:03 UTC,"Bug 1182994 - Update to datasource v0.9

* Fixes the `offset` parameter, since it previously used the value for
  `limit` instead.
* The `limit` and `offset` parameters are now cast to int, to prevent
  SQL injection if those parameters were not sanitised in the app.
  Note: This intentionally removes the ability to pass a comma delimited
  `limit` string of say ""100,200"" - since the now-working `offset`
  parameter makes this redundant.

https://github.com/jeads/datasource/compare/v0.8...v0.9
",true,true,true,true,false,false,false,false,1,1,0,0,122
nigelhorne/CGI-Info,157f12015b0422d3e2c3786c3e0e8c2add0e4da5,Nigel Horne,2015-07-06 14:19:48 UTC,"Added more explicit catching of XSS and SQL injection attempts
",false,true,false,false,false,false,false,false,2,2,1,1,35565
mozilla/treeherder,c16772d5d6e2c558baf5b440ffb78658dab48c00,Ed Morley,2015-07-13 12:08:24 UTC,"Bug 1182994 - Use datasource's offset parameter

As part of Datasource v0.9's SQL injection fix, it no longer supports
passing comma-delimited strings to the `limit` parameter, to denote the
SQL LIMIT/OFFSET. Instead we need to pass integers to Datasource's
`limit` and `offset` params separately. The `offset` param now actually
works in Datasource v0.9, unlike previous releases.
",true,false,false,false,false,false,false,false,2,2,2,2,2
frappe/erpnext,be1895fd08947ea27daa472c0e81a709c908541b,NahuelOperto,2020-01-27 12:02:02 UTC,"Fix sql injection
",true,false,false,false,false,false,false,false,1,1,1,1,312512
frappe/erpnext,f2fb96398614b8935fc42a9029e5c0eed6201433,racitup,2020-01-30 14:48:42 UTC,"Ignore codacy SQL injection warning (internal code only) and add copyright notice
",false,false,true,false,false,false,false,false,1,1,1,1,8108
frappe/erpnext,04700049dae357735d0463cf0c2c4e5f11766d22,Deepesh Garg,2020-01-28 03:48:42 UTC,"Merge pull request #20444 from fproldan/fix_sqlinjection_develop

fix: SQL Injection in get_product_list_for_group method",true,true,false,false,false,false,false,false,1,1,1,1,1079
folio-org/raml-module-builder,ce973b11adcdd2a0a0c3667ff8b018a303d80bd1,Julian Ladisch,2020-01-31 13:21:50 UTC,"RMB-563: SQL injection in PostgresClient.update by id
",false,false,false,false,false,false,false,false,2,1,2,1,324
espinosaluis/TrackMeViewer,13ae949d19afd013be19f184564c71b079a7e8c8,Fabian Neundorf,2015-10-28 12:57:27 UTC,"Replace mysql specific calls with PDO usage

To prevent SQL injections, it is using PDO which supports binding parameters.
Also the `mysql_query` function has been deprecated in favour of PDO or
`mysqli`. Using PDO allows in theory to use different databases in the future.
",false,true,false,false,false,false,false,false,5,5,5,5,1019
find-sec-bugs/find-sec-bugs,252a821bf4505d429f0123d8b51c510e5a491e0c,formanek,2015-10-14 14:04:22 UTC,"Configured detector for SQL injection, added and fixed sinks",true,true,false,false,false,false,false,false,11,11,6,6,1047
getk2/k2,86e07cc7ee0fd7f42b667215d5b59feafc40ee27,Lefteris Kavadas,2015-10-02 10:13:51 UTC,"Fixed possible SQL injections issues in administration area.
",true,false,false,false,false,false,false,false,8,8,8,8,11
neinteractiveliterature/intercode,5ba36c9a551438c7b059defe6f2a816df77dd64c,Nat Budin,2018-08-05 17:15:01 UTC,"Handle SQL injection attempts more gracefully (closes #1130)
",false,false,false,false,false,false,false,false,1,1,1,1,25
GoogleCloudPlatform/cloud-ops-sandbox,e9208b073ed841edf4163f310067e16a3e157d56,Leonid Yankulin,2020-11-04 13:07:02 UTC,"protect against SQL injection
",false,false,false,false,false,false,false,false,1,1,1,1,48
alibaba/nacos,501b1e73e4fc94ed574c56b9a6394a095f8e934a,paderlol,2020-11-18 01:23:48 UTC,"Fix sql injection bug (#4245)

* Fix sql injection bug

* Fix checkstyle issue",true,false,false,false,false,false,false,false,4,4,4,4,225491
scalableminds/webknossos,f5e83a2c12a935c7bceac22668159823e7796ff5,Florian M,2018-03-13 09:27:35 UTC,"Slick: Replace Mongo with Postgresql (#2324)

* initial postgres schema and migration script

* imports well into postgres now

* further migrate instructions + open_tasks query

* updated schema

* updated schema

* add sql-schema-to-slick compilation, access postgres from test route

* adds env vars

* use wk schema

* updates schema

* add slick-pg

* Update annotation schema, isActive -> isDeleted

* WIP: annotation sql dao

* extract sqldao trait

* gather Annotation fields from SQLDAOs

* annotation sql dao: error messages

* fix: getting annotation objects from sql

* use camelCase in schema for taskType dataSet and dataStore

* SQL DAOs for more collections

* elaborate sqldao for team

* sql access for user, team, timespan

* WIP: DataSet SQL connection

* WIP: dataset sql dao

* datasource sql dao

* read task openinstances from sql view

* add shutdown hook closing sql connection

* separate isDeactivated flag for UserSQL

* remove some dead code from annotation dao + surroundings

* remove QuerySupportedDAO

* findFor in annotation SQLDAO

* add isUsable to dataset schema

* annotation to annotationsql

* some update functions for TaskSQL

* use literals for incompatible slick types

* wip: more write operations for annotation sql

* wip: more accessors for annotation sql dao

* annotation sql dao

* fix sql queries in annotation sql dao

* WIP: sqldaos for analytics, datastores, projects

* work on datastore + project sqldao

* catch and log sql exceptions

* fix project update

* sqldaos for project, script, tasktype

* wip: dataset sql dao

* wip: dataset sql writer

* wip: dataset sql dao

* dataset sql dao

* wip: task sqldao

* wip: task sqldao

* team + timespan sql dao

* user sqldao (wip)

* fix task assignment, insert user, insert startup sample data

* fix finishing annotations

* task assignment: give only if user hasnt traced on this task befored

* wip: tokens in sql

* wip: tokens in sql

* tokens in sql

* remove UsedAnnotations

* user sql: insert datasetconfigurations

* sql task search

* add sql injection warning comment

* add postgres to docker-compose

* set user and password of postgres explicitly

* adding test-case

* sql project progress report

* update slick schema only if sql schema has changed

* sql open tasks report

* scripts to drop / refresh sql db

* postgres access in docker

* specify postgres password for CI

* rename some functions unifying sql dao apis

* create isDeleted views for complex sql queries

* translate mongo indexes to sql indexes

* ensure sql db and schema on webknossos startup

* add newline after scala command execution

* wip: update migrate script

* fix more fields of sql migration script

* create postgres test database

* use postgres testdb in e2e tests

* use correct config for sql connection

* insert schema *before* initial data

* in stage, copy and overwrite sql tools scripts

* e2etests with postgres

* use postgres_url for all related scripts

* remove unnecessary db name overwite

* disable e2e tests

* CI smoke test: don't daemonize, use circleCI background

* in docker, pass postgres.url directly

* in e2etest, correctly launch fossildb

* slick timestamps: use correct maxValue

* sql: fix timezones, tasktype deletion, project progress report

* enable e2e tests

* WIP: somewhat generic sql access definitions

* wip: access definitions

* access definitions for annotations (not used everywhere yet)

* translate remaining access definitions to sql. TODO: use them

* check update access definitions before running queries

* add md5hash to sql schema

* check readAccess queries in find and count queries

* add user md5 to test db + sort projects + fix sql typos

* redirect ensure_db output to scala logger

* handle special cases in pg migration. enforce sequential execution in Global.scala

* use selected team id in project progress report sql query

* fix typo

* include PR feedback

* user updates only for correct id

* added task peeking #1624

* fix: use global access context to fetch annotation fields

* update pg_migrate readme

* work on pg migration

* more sql indices

* update pg migration

* pg migration: use fallback dataset

* update pg test database for new dataset resolutions format

* use new resolution format in pg migrate
",true,true,true,true,false,true,false,false,116,93,78,77,1150
vulhub/vulhub,2e2843f398e16deb1583bc1018ba5d9ad8ce25de,phith0n,2018-03-18 17:26:04 UTC,"remove environment: mybatis sql injection, becuase this environment is not so fit for vulhub
",false,true,false,false,false,false,false,false,10,10,0,0,0
cfwheels/cfwheels,0d7c7fec2903e6c62282a801ae80314b94bf61ab,Adam Chapman,2019-12-13 22:08:00 UTC,"enable numeric parameterize argument (#973)

* enable numeric paramterize argument

* Add a few new users for posterity and modify tests accordingly

* Add test for new parameterize SQL injection protection

* Change local variable names to match created users

* Add SQL injection test for parameterize and pagination

* Refactor new SQL Injection tests to use raised()
",false,true,true,true,false,false,false,false,11,2,0,0,93485
folio-org/raml-module-builder,29cd41cc180f05a275bcf4758d1d8e66282b4142,Julian Ladisch,2019-12-16 13:30:51 UTC,"RMB-537: Fix f_unaccent single quote fullText tsquery sql injection
",false,false,false,false,false,false,false,false,2,1,2,1,4252
folio-org/raml-module-builder,489f69efc1d40681b9b8f7d8d38c799845f2723f,julianladisch,2019-12-17 15:44:01 UTC,"Merge pull request #584 from folio-org/RMB-537-f_unaccent-single-quote

RMB-537: Fix f_unaccent single quote fullText tsquery sql injection",true,true,false,false,false,false,false,false,2,1,2,1,367
ntop/nDPI,606ff10ecf9efb69dee24e0ce88ce40195bdda7d,MrTiz9,2019-12-05 17:09:43 UTC,"Integration of the libinjection library to detect SQL injections and XSS type attacks in HTTP requests
",false,false,false,false,false,false,false,false,10,9,4,4,
centreon/centreon,190184db8b79524c5e0a08f4ae3a0ec64ea6ece9,loiclau,2017-05-19 15:17:48 UTC,"Fix sql injection
",true,false,false,false,false,false,false,false,40,40,40,40,3080
aces/Loris,9044374272b42abdceaf9459b53fb307d1e726a8,AnyhowStep,2017-05-25 16:32:49 UTC,"[Imaging Browser] Prepare statements for output type query(#2835)

Prepare statements for output type in where clause of imaging browser, to prevent SQL injection attacks.",false,false,false,false,false,false,false,false,1,1,0,0,2768
aces/Loris,8cea2919121f46716283b538487b62553457ee50,AnyhowStep,2017-05-25 16:32:49 UTC,"[Imaging Browser] Prepare statements for output type query(#2835)

Prepare statements for output type in where clause of imaging browser, to prevent SQL injection attacks.",false,false,false,false,false,false,false,false,1,1,0,0,2768
airbnb/airflow,3b589a9f73bed018bf7e2c7b7265bfce5da91ca0,Niels Zeilemaker,2017-05-13 12:49:05 UTC,"[AIRFLOW-1170] DbApiHook insert_rows inserts parameters separately

Instead of creating a sql statement with all
values, we send the values
separately to prevent sql injection

Closes #2270 from NielsZeilemaker/AIRFLOW-1170
",false,false,false,false,false,false,false,false,3,3,3,3,1642
apache/airflow,3b589a9f73bed018bf7e2c7b7265bfce5da91ca0,Niels Zeilemaker,2017-05-13 12:49:05 UTC,"[AIRFLOW-1170] DbApiHook insert_rows inserts parameters separately

Instead of creating a sql statement with all
values, we send the values
separately to prevent sql injection

Closes #2270 from NielsZeilemaker/AIRFLOW-1170
",false,false,false,false,false,false,false,false,3,3,3,3,1642
brouznouf/fivem-mysql-async,2acd7d3e76b3c7cb0d8ad92bc05b5b2586f86c15,Joel Wurtz,2017-05-28 19:04:42 UTC,"Make query safe against SQL Injection, add deprecated log
",false,true,true,true,false,false,false,false,4,4,4,4,314
paghiper/whmcs,54f6a6fe773d2494c1d214f1321722e3f32e485a,Henrique Cruz,2020-12-13 18:24:20 UTC,"MySQL injection prevention

",false,false,false,false,false,false,false,false,1,1,1,1,6
find-sec-bugs/find-sec-bugs,a6f8e901ede1bb1c15053111780755ad9cbb2a3d,h3xstream,2015-03-23 22:45:33 UTC,"New detectors for Android.
Refactoring for the CustomInjectionDetector (first pass) separate from SQL injection.
Change the version to 1.4.0-SNAPSHOT.
",false,true,true,true,false,false,false,false,51,35,42,29,1702
interchange/interchange,de7af78f372f83d082142882ea2fe48267e3efe0,Peter Ajamian,2015-03-13 22:12:33 UTC,"Add support for automatic quoting of identifiers in DBI.

Table and column names have not traditionally quoted in Vend::Table::DBI
routines.  This can (and has) led to issues such as clashing with db reserved
words and possible SQL injection issues.  This patch adds optional support to
allow all SQL queries that are generated by Interchange to have all the
identifiers quoted.

To enable this feature just add the following configuration directive to
catalog.cfg:

    DatabaseDefault QUOTE_IDENTIFIERS 1

The above must be set before any Database or DatabaseAuto directives for it to
work properly.  You can also set this individually for each table:

    Database foo QUOTE_IDENTIFIERS 1

Also, if you want this to apply to all catalogs under a particular server instance, you can add this setting to catalog_before.cfg.

As an example of how db queries are affected by this setting for a MySQL db with
the Interchange tag [field price 12345] Interchange will send something like the
following without and with QUOTE_IDENTIFIERS set for the products table:

    Without: SELECT price FROM products WHERE sku='12345'
    With: SELECT `price` FROM `products` WHERE `sku`='12345'
",false,true,true,false,false,false,false,false,1,1,1,1,779099
bobintetley/asm3,27d003679583144352c4fffd0c3f57d5550a8a5d,Robin Rawson-Tetley,2015-03-26 19:58:18 UTC,"fix sql injection bug
",true,false,false,false,false,false,false,false,2,2,2,2,181
greenriver/boston-cas,f7a18b95e67ce8f0fb16daf59b5e290574c5d858,Elliot Anders,2019-04-09 00:08:06 UTC,"Ignore possible SQL injection, it is whitelisted
",false,false,false,false,false,false,false,false,1,1,0,0,10
frappe/erpnext,e3ea8063905a6c188bee036253b788665551770d,deepeshgarg007,2019-04-22 15:38:29 UTC,"fix: Ignore sql injections
",true,false,false,false,false,false,false,false,1,1,1,1,1
google/gonids,85906a08b5f97503763ca33925dc10af183c88fd,chuanjiesun,2019-04-03 03:18:57 UTC,"Update parser.go

add  metadata parse .
the example rule looks like below:
alert http $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:""ET WEB_SPECIFIC_APPS Aktueldownload Haber script SQL Injection Attempt -- rss.asp kid DELETE""; flow:established,to_server; content:""/rss.asp?""; nocase; http_uri; content:""kid=""; nocase; http_uri; content:""DELETE""; nocase; http_uri; pcre:""/DELETE.+FROM/Ui""; reference:cve,CVE-2007-1016; reference:url,www.frsirt.com/english/advisories/2007/0620; reference:url,doc.emergingthreats.net/2004896; classtype:web-application-attack; sid:2004896; rev:7; metadata:affected_product Web_Server_Applications, attack_target Web_Server, deployment Datacenter, tag SQL_Injection, signature_severity Major, created_at 2010_07_30, updated_at 2016_07_01;)",false,false,true,false,false,false,true,false,1,1,1,1,
bywatersolutions/ByWater-KOHA,16e55c1f3283402f766ed844baa5db333ed2f585,Jonathan Druart,2016-02-11 10:16:12 UTC,"Bug 15760: Avoid SQL injections

Asking on #dbix-class, ribasushi told me to set quote_names to the
connection options.

Indeed it does the fix, globally :)

Test plan:
1/ Add the following snippet to the a script (mainpage.pl is a good candidate)
 use Koha::Virtualshelves;
 my $s = Koha::Virtualshelves->search({}, { order_by => '1,(select case when (3*2*1=6 AND 000227=000227) then 1 else 1*(select table_name from information_schema.tables)end)=1' });
 $s->next;
2/ Execute the script
=> Without the patch, you should not get any error. If you have the mysql logs
enable, you will see the query
=> With the patch applied, you will get a ""unknown column"" error

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Tomas Cohen Arazi <tomascohen@unc.edu.ar>

Signed-off-by: de07abbabd0e3a853fc7a2d0f329925e8e59a742@bywatersolutions.com 
",true,false,false,false,false,true,false,false,1,1,1,1,999
colinsc/koha,16e55c1f3283402f766ed844baa5db333ed2f585,Jonathan Druart,2016-02-11 10:16:12 UTC,"Bug 15760: Avoid SQL injections

Asking on #dbix-class, ribasushi told me to set quote_names to the
connection options.

Indeed it does the fix, globally :)

Test plan:
1/ Add the following snippet to the a script (mainpage.pl is a good candidate)
 use Koha::Virtualshelves;
 my $s = Koha::Virtualshelves->search({}, { order_by => '1,(select case when (3*2*1=6 AND 000227=000227) then 1 else 1*(select table_name from information_schema.tables)end)=1' });
 $s->next;
2/ Execute the script
=> Without the patch, you should not get any error. If you have the mysql logs
enable, you will see the query
=> With the patch applied, you will get a ""unknown column"" error

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Tomas Cohen Arazi <tomascohen@unc.edu.ar>

Signed-off-by: de07abbabd0e3a853fc7a2d0f329925e8e59a742@bywatersolutions.com 
",true,false,false,false,false,true,false,false,1,1,1,1,999
bywatersolutions/bws-package,16e55c1f3283402f766ed844baa5db333ed2f585,Jonathan Druart,2016-02-11 10:16:12 UTC,"Bug 15760: Avoid SQL injections

Asking on #dbix-class, ribasushi told me to set quote_names to the
connection options.

Indeed it does the fix, globally :)

Test plan:
1/ Add the following snippet to the a script (mainpage.pl is a good candidate)
 use Koha::Virtualshelves;
 my $s = Koha::Virtualshelves->search({}, { order_by => '1,(select case when (3*2*1=6 AND 000227=000227) then 1 else 1*(select table_name from information_schema.tables)end)=1' });
 $s->next;
2/ Execute the script
=> Without the patch, you should not get any error. If you have the mysql logs
enable, you will see the query
=> With the patch applied, you will get a ""unknown column"" error

Signed-off-by: Mirko Tietgen <mirko@abunchofthings.net>
Signed-off-by: Tomas Cohen Arazi <tomascohen@unc.edu.ar>

Signed-off-by: de07abbabd0e3a853fc7a2d0f329925e8e59a742@bywatersolutions.com 
",true,false,false,false,false,true,false,false,1,1,1,1,999
conveyal/gtfs-lib,f3c246ea0525cb58ba60db4e86d6e5ba97c51acc,Landon Reed,2019-03-29 00:07:20 UTC,"refactor(editor): fix up SQL injection vulnerabilities
",true,false,true,true,false,false,false,false,1,1,1,1,589
fpcorso/quiz_master_next,e4daa86a21c01532e936c0efa641e3406ee6b6bb,Frank Corso,2019-03-13 17:52:56 UTC,"Fixes SQL injection vulnerability on admin results page
",true,false,false,false,false,false,false,false,1,1,1,1,31
domoticz/domoticz,ee70db46f81afa582c96b887b73bcd2a86feda00,Rob Peters,2019-03-29 14:04:04 UTC,"Fixed possible SQL Injection Vulnerability (Thanks to Fabio Carretto!)
",true,false,false,false,false,true,false,false,1,1,1,1,1699
frappe/erpnext,e43b6beff0228f5283f0cf3b9a222455d235df80,Himanshu,2019-03-26 16:12:12 UTC,"fix(Leave Balance Report): total allocated leaves not calculated properly (#16969)

* fix: total alloted leaves not calculated properly

* fix: Possible SQL injection

* typo fix in sql query

* prevent sql injection again ?

* Use ORM for query
",true,false,false,false,false,false,false,false,2,2,2,2,76
fpcorso/quiz_master_next,1b260be861b5cfc10e228c01b4b1537c36bec02f,Frank Corso,2019-03-13 18:02:49 UTC,"Continues fixing sql injection potential vulnerabilities
",true,false,false,false,false,false,false,false,3,3,3,3,9
jaffa-projects/jaffa-framework,617696104bae0e2ba1c8a4731eaf44b593408225,stuta,2019-03-05 23:10:09 UTC,"JAFFA-574 CWE 89 - SQL Injection (Resolution for Coverity Issue - Check-in On behalf of kcassel)
",false,false,false,false,false,false,false,false,3,3,3,3,5718
pingcap/tidb,ae0057da714ef4a4c5ff814bf1737f44ac04f709,xhe,2021-01-26 10:52:08 UTC,"*: preventing SQL injection (#22499)

Signed-off-by: xhe <3cc054ec827480b50ed66e70bec75f34d9e09619@gmail.com>",false,false,false,false,false,false,false,false,7,5,6,4,1595
oat-sa/generis,dde66b94c164ffb57da11cd2501546b29b43fe76,Joel Bout,2016-06-17 14:15:52 UTC,"Merge pull request #192 from oat-sa/fix/sql_injection

Fix/sql injection",true,true,false,false,false,false,false,false,2,2,2,2,56412
nigelhorne/CGI-Info,9e731ef80e1b44f80dd708c32159a72fe0fb6eea,Nigel Horne,2019-06-07 15:30:39 UTC,"Improved finding SQL injections at the CLI
",false,false,true,true,false,false,false,false,1,1,1,1,10
nigelhorne/CGI-Info,fa8c9cd8add0a33b7b267fc19d2f7f7741346c9c,Nigel Horne,2019-06-07 14:49:49 UTC,"Trap SQL injections with SELECT statements
",false,false,false,false,false,false,true,false,3,3,1,1,122319
folio-org/raml-module-builder,1c137f30001c1d07492cd2adb0c9e7c70d3ff362,Julian Ladisch,2019-06-06 14:59:08 UTC,"RMB-396: Mask ) ] } in regexp to prevent SQL injection
",false,false,false,false,false,false,false,false,2,1,2,1,4294
folio-org/raml-module-builder,cd5607419ede06de083a29dede5d2bd29d4fe900,julianladisch,2019-06-06 16:42:41 UTC,"Merge pull request #435 from folio-org/RMB-396-mask-closing-braces-in-regexp

RMB-396: Mask ) ] } in regexp to prevent SQL injection",false,true,false,false,false,false,false,false,2,1,2,1,103
folio-org/raml-module-builder,35ef20e5e0591c534a85ac0da11b7e6965f9784a,evaluk,2019-06-20 20:08:02 UTC,"Cqlpg 99 implement foreign key support for cqlpg json parser (#430)

* Transferred changes over from cqlpgjson-java repo in prep for PR

* fix for schema formatting that is required now in the current version of RMB

* updates to unit tests to have one more pass

* Fix for compile error regarding resource reading

* Clean up unused imports

* fix for broken tests with expected sql result

* feedback incorporated from Julian

* fix for code problem

*  Not sure why this got messed up but the dbschema test failed due to resource not found.  changing how the path was determined fixed the issue.

* fix for same issue that cropped up in the other sub project

* Started addition of integration tests.  Fixed missing unit tests.

* many code smell fixes

* code coverage tests added for failure cases.

* Fix for a code smell/ bug

* small code clean ups

* further written integration tests and fixed issues with inserts and database structure for the test.

* Writing 3 ForeignKeyGenerationIT test cases

* fix constant term quoting

* theoretically all IT and Tests working and testing expected cases

* small retroactive change after I updated SQL to be working

* typo in expected

* fixed import due to merge movement

* Small comment cleanup

* unit tests: foreignKeySearch2, barcode3Tables

* rolled back a few changes to the schema and data for tests.  These are useful but are out of scope for the effort I am working on right now.

* really thought about failure of this function and aligned it with how the rest of the library functions.  Changed tests to match.

* could not find a test case to trigger this line so it is removed as dead code

* changed implementation of query to fix one to many relationship issue as well as just plain make it better.  Updated Tests to match new sql.  IT were passing with new implementation.

* Added change to protect against SQL injection using utility function

* Replace StringBuilder by one-shot String concatenation.

This is more readable, less error-prone and has the same performance because Java automatically
implements the String concatenation using a StringBuilder:
https://stackoverflow.com/questions/1532461/stringbuilder-vs-string-concatenation-in-tostring-in-java

* findForeignKey(): Move fieldName calculation out of the loop, add JavaDoc.

* Rename misleading field tableb_data to prefix. Test exception messages.

* additional injection attack unit tests

* Add prefix index

* fixed sql to match comments on User story regarding index use.  I adjusted the wrapping code to use the algorithmic wrap utility function.  This gives the power to the requester as to which wrapping they want instead of assuming anything at the translation level.  I think this is a good solution to adapt to the index and puts the blame squarely on the developer if they miss the index.

* Add uuidConstant() test case

* fixed new integration test added due to missing ''

* moved injection test case to be in integration

* updated to add logic to consult schema to get the wrapping required instead of hard coding it.

* added unit test to improve code coverage on new function

* small change to IT that will make it more correct when I ultimately handle it.

* updates for feedback and another injection test that attempts to exploit via a different query

* Attempt at making sense of requirements for detecting data type of index and term.  It seems like all we can know if is its a number of string so I am handling it like the index2Sql function accordingly.

* wrote new escaping function to work on = text and not the like statement

* small code clean up and modification

* Fixed duplicated comments

* refactor to reduce duplication

* further duplication fixes

* didn't actually fix what I wanted last commit

* Revert ""refactor to reduce duplication""

This reverts commit 8096701fdc1bade9e9963995bc0c63b55d682d63.

* Attempt at suppressing the duplicate code warning instead of removing it

* Update from Adam to change how escaping works

* Added unit tests for new quotedString function

* Revert ""Update from Adam to change how escaping works"" and re applies a similar patch

This reverts commit bb0868f721371fd3c3e62f824a7636f1bd6b6f6f.

* hopefully Final fix for duplication after much back and forth on the subject

* Updates to function naming, also updated IT and clarified reasoning for them.  Removed exceptions thrown.

* edited names of test functiosn that were not correct

* various comment and text changes for clarity and correctness

* cql2string / cq2like separate implementations again

And cql2string now only treats single-quote specially. All
CQL masking rejected.

* Revert some editor reformatting
",true,true,true,true,false,true,true,false,14,3,8,2,70663
folio-org/raml-module-builder,22957fde7d7ffc0dd679963475c32df8b58e08d7,julianladisch,2019-06-03 13:11:42 UTC,"Merge pull request #423 from folio-org/RMB-379-Criteria-value-masking

RMB-379: wrong masking of Criteria.setValue(Object) - SQL Injection",true,true,false,false,false,false,false,false,9,4,9,4,31
